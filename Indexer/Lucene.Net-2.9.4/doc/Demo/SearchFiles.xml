<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SearchFiles</name>
    </assembly>
    <members>
        <member name="T:Lucene.Net.Demo.SearchFiles">
            <summary>Simple command-line based search demo. </summary>
        </member>
        <member name="M:Lucene.Net.Demo.SearchFiles.Main(System.String[])">
            <summary>Simple command-line based search demo. </summary>
        </member>
        <member name="M:Lucene.Net.Demo.SearchFiles.DoStreamingSearch(Lucene.Net.Search.Searcher,Lucene.Net.Search.Query)">
            <summary> This method uses a custom HitCollector implementation which simply prints out
            the docId and score of every matching document. 
            
            This simulates the streaming search use case, where all hits are supposed to
            be processed, regardless of their relevance.
            </summary>
        </member>
        <member name="M:Lucene.Net.Demo.SearchFiles.DoPagingSearch(System.IO.StreamReader,Lucene.Net.Search.Searcher,Lucene.Net.Search.Query,System.Int32,System.Boolean,System.Boolean)">
            <summary> This demonstrates a typical paging search scenario, where the search engine presents 
            pages of size n to the user. The user can then go to the next page if interested in
            the next hits.
            
            When the query is executed for the first time, then only enough results are collected
            to fill 5 result pages. If the user wants to page beyond this limit, then the query
            is executed another time and all hits are collected.
            
            </summary>
        </member>
        <member name="T:Lucene.Net.Demo.SearchFiles.OneNormsReader">
            <summary>Use the norms from one field for all fields.  Norms are read into memory,
            using a byte of memory per document per searched field.  This can cause
            search of large collections with a large number of fields to run out of
            memory.  If all of the fields contain only a single token, then the norms
            are all identical, then single norm vector may be shared. 
            </summary>
        </member>
    </members>
</doc>
