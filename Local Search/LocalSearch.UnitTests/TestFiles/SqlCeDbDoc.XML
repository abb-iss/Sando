<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="Local Search\LocalSearch.UnitTests\TestFiles\SqlCeDbDoc.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Data</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">IO</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Xml</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Xml</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">Xsl</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">ErikEJ</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">SqlCeToolbox</name><op:operator pos:line="7" pos:column="26">.</op:operator><name pos:line="7" pos:column="27">Helpers</name></name>;</using>

<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Linq</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">ErikEJ</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">SqlCeToolbox</name><op:operator pos:line="10" pos:column="26">.</op:operator><name pos:line="10" pos:column="27">ToolWindows</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">ErikEJ</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">SqlCeScripting</name></name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name><name pos:line="13" pos:column="11">ErikEJ</name><op:operator pos:line="13" pos:column="17">.</op:operator><name pos:line="13" pos:column="18">SqlCeToolbox</name></name>
<block pos:line="14" pos:column="1">{
    <comment type="line" pos:line="15" pos:column="5">//Lifted and ported to SqlCe from http://sqldbdoc.codeplex.com/</comment>
    <class><specifier pos:line="16" pos:column="5">internal</specifier> class <name pos:line="16" pos:column="20">SqlCeDbDoc</name>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <specifier pos:line="18" pos:column="17">static</specifier> <specifier pos:line="18" pos:column="24">readonly</specifier> <name><name pos:line="18" pos:column="33">string</name><index pos:line="18" pos:column="39">[]</index></name></type> <name pos:line="18" pos:column="42">FORMATS</name> =<init pos:line="18" pos:column="51"> <expr><block pos:line="18" pos:column="52">{ <expr><lit:literal type="string" pos:line="18" pos:column="54">"html"</lit:literal></expr><op:operator pos:line="18" pos:column="60">,</op:operator> <expr><lit:literal type="string" pos:line="18" pos:column="62">"wikiplex"</lit:literal></expr><op:operator pos:line="18" pos:column="72">,</op:operator> <expr><lit:literal type="string" pos:line="18" pos:column="74">"xml"</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">static</specifier> <specifier pos:line="19" pos:column="24">readonly</specifier> <name><name pos:line="19" pos:column="33">string</name><index pos:line="19" pos:column="39">[]</index></name></type> <name pos:line="19" pos:column="42">HTML_EXTENSIONS</name> =<init pos:line="19" pos:column="59"> <expr><block pos:line="19" pos:column="60">{ <expr><lit:literal type="string" pos:line="19" pos:column="62">".htm"</lit:literal></expr><op:operator pos:line="19" pos:column="68">,</op:operator> <expr><lit:literal type="string" pos:line="19" pos:column="70">".html"</lit:literal></expr><op:operator pos:line="19" pos:column="77">,</op:operator> <expr><lit:literal type="string" pos:line="19" pos:column="79">".xhtml"</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <specifier pos:line="20" pos:column="17">static</specifier> <specifier pos:line="20" pos:column="24">readonly</specifier> <name><name pos:line="20" pos:column="33">string</name><index pos:line="20" pos:column="39">[]</index></name></type> <name pos:line="20" pos:column="42">WIKI_EXTENSIONS</name> =<init pos:line="20" pos:column="59"> <expr><block pos:line="20" pos:column="60">{ <expr><lit:literal type="string" pos:line="20" pos:column="62">".txt"</lit:literal></expr><op:operator pos:line="20" pos:column="68">,</op:operator> <expr><lit:literal type="string" pos:line="20" pos:column="70">".wiki"</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">void</name></type> <name pos:line="22" pos:column="21">CreateDocumentation</name><parameter_list pos:line="22" pos:column="40">(
            <param><decl><type><name pos:line="23" pos:column="13">string</name></type> <name pos:line="23" pos:column="20">connectionString</name></decl></param><op:operator pos:line="23" pos:column="36">,</op:operator>
            <param><decl><type><name pos:line="24" pos:column="13">string</name></type> <name pos:line="24" pos:column="20">fileName</name></decl></param><op:operator pos:line="24" pos:column="28">,</op:operator>
            <param><decl><type><name pos:line="25" pos:column="13">string</name></type> <name pos:line="25" pos:column="20">caption</name></decl></param><op:operator pos:line="25" pos:column="27">,</op:operator>
            <param><decl><type><name pos:line="26" pos:column="13">bool</name></type> <name pos:line="26" pos:column="18">overwrite</name></decl></param><op:operator pos:line="26" pos:column="27">,</op:operator>
            <comment type="line" pos:line="27" pos:column="13">//[Optional(null, "f", Description = "output format: html, wikiplex, xml (autodetected when omitted)")] </comment>
            <param><decl><type><name pos:line="28" pos:column="13">string</name></type> <name pos:line="28" pos:column="20">format</name></decl></param>
            )</parameter_list> 
        <block pos:line="30" pos:column="9">{
            <comment type="line" pos:line="31" pos:column="13">// Validate arguments</comment>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">connectionString</name> <op:operator pos:line="32" pos:column="34">==</op:operator> <name pos:line="32" pos:column="37">null</name></expr>)</condition><then pos:line="32" pos:column="42"> <throw pos:line="32" pos:column="43">throw <expr><op:operator pos:line="32" pos:column="49">new</op:operator> <call><name pos:line="32" pos:column="53">ArgumentNullException</name><argument_list pos:line="32" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="75">"connectionString"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">fileName</name> <op:operator pos:line="33" pos:column="26">==</op:operator> <name pos:line="33" pos:column="29">null</name></expr>)</condition><then pos:line="33" pos:column="34"> <throw pos:line="33" pos:column="35">throw <expr><op:operator pos:line="33" pos:column="41">new</op:operator> <call><name pos:line="33" pos:column="45">ArgumentNullException</name><argument_list pos:line="33" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="67">"fileName"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">caption</name> <op:operator pos:line="34" pos:column="25">==</op:operator> <name pos:line="34" pos:column="28">null</name></expr>)</condition><then pos:line="34" pos:column="33"> <throw pos:line="34" pos:column="34">throw <expr><op:operator pos:line="34" pos:column="40">new</op:operator> <call><name pos:line="34" pos:column="44">ArgumentNullException</name><argument_list pos:line="34" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="66">"caption"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><call><name><name pos:line="35" pos:column="17">string</name><op:operator pos:line="35" pos:column="23">.</op:operator><name pos:line="35" pos:column="24">IsNullOrWhiteSpace</name></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">fileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="35" pos:column="53"> <throw pos:line="35" pos:column="54">throw <expr><op:operator pos:line="35" pos:column="60">new</op:operator> <call><name pos:line="35" pos:column="64">ArgumentException</name><argument_list pos:line="35" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="82">"Value cannot be empty or whitespace only string."</lit:literal></expr></argument><op:operator pos:line="35" pos:column="132">,</op:operator> <argument><expr><lit:literal type="string" pos:line="35" pos:column="134">"fileName"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name><name pos:line="36" pos:column="17">string</name><op:operator pos:line="36" pos:column="23">.</op:operator><name pos:line="36" pos:column="24">IsNullOrWhiteSpace</name></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name pos:line="36" pos:column="43">connectionString</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="36" pos:column="61"> <throw pos:line="36" pos:column="62">throw <expr><op:operator pos:line="36" pos:column="68">new</op:operator> <call><name pos:line="36" pos:column="72">ArgumentException</name><argument_list pos:line="36" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="36" pos:column="90">"Value cannot be empty or whitespace only string."</lit:literal></expr></argument><op:operator pos:line="36" pos:column="140">,</op:operator> <argument><expr><lit:literal type="string" pos:line="36" pos:column="142">"connectionString"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><call><name><name pos:line="37" pos:column="17">string</name><op:operator pos:line="37" pos:column="23">.</op:operator><name pos:line="37" pos:column="24">IsNullOrWhiteSpace</name></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">caption</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="37" pos:column="52"> <throw pos:line="37" pos:column="53">throw <expr><op:operator pos:line="37" pos:column="59">new</op:operator> <call><name pos:line="37" pos:column="63">ArgumentException</name><argument_list pos:line="37" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="81">"Value cannot be empty or whitespace only string."</lit:literal></expr></argument><op:operator pos:line="37" pos:column="131">,</op:operator> <argument><expr><lit:literal type="string" pos:line="37" pos:column="133">"caption"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

            <comment type="line" pos:line="39" pos:column="13">// Validate output file</comment>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><call><name><name pos:line="40" pos:column="17">File</name><op:operator pos:line="40" pos:column="21">.</op:operator><name pos:line="40" pos:column="22">Exists</name></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">fileName</name></expr></argument>)</argument_list></call> <op:operator pos:line="40" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="40" pos:column="42">!</op:operator><name pos:line="40" pos:column="43">overwrite</name></expr>)</condition><then pos:line="40" pos:column="53"> <block pos:line="40" pos:column="54">{
                <throw pos:line="41" pos:column="17">throw <expr><op:operator pos:line="41" pos:column="23">new</op:operator> <call><name pos:line="41" pos:column="27">ArgumentException</name><argument_list pos:line="41" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="45">"File already exists"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <comment type="line" pos:line="44" pos:column="13">// Get output format</comment>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><call><name><name pos:line="45" pos:column="17">string</name><op:operator pos:line="45" pos:column="23">.</op:operator><name pos:line="45" pos:column="24">IsNullOrWhiteSpace</name></name><argument_list pos:line="45" pos:column="42">(<argument><expr><name pos:line="45" pos:column="43">format</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="45" pos:column="51"> <block pos:line="45" pos:column="52">{
                <expr_stmt><expr><call><name><name pos:line="46" pos:column="17">Console</name><op:operator pos:line="46" pos:column="24">.</op:operator><name pos:line="46" pos:column="25">WriteLine</name></name><argument_list pos:line="46" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="35">"Autodetecting output format..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><call><name><name pos:line="47" pos:column="21">Array</name><op:operator pos:line="47" pos:column="26">.</op:operator><name pos:line="47" pos:column="27">IndexOf</name></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">HTML_EXTENSIONS</name></expr></argument><op:operator pos:line="47" pos:column="50">,</op:operator> <argument><expr><call><name><name pos:line="47" pos:column="52">Path</name><op:operator pos:line="47" pos:column="56">.</op:operator><name pos:line="47" pos:column="57">GetExtension</name></name><argument_list pos:line="47" pos:column="69">(<argument><expr><name pos:line="47" pos:column="70">fileName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="47" pos:column="81">&gt;</op:operator> <op:operator pos:line="47" pos:column="83">-</op:operator><lit:literal type="number" pos:line="47" pos:column="84">1</lit:literal></expr>)</condition><then pos:line="47" pos:column="86"> <block pos:line="47" pos:column="87">{
                    <expr_stmt><expr><name pos:line="48" pos:column="21">format</name> <op:operator pos:line="48" pos:column="28">=</op:operator> <lit:literal type="string" pos:line="48" pos:column="30">"html"</lit:literal></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="50" pos:column="17">else <if pos:line="50" pos:column="22">if <condition pos:line="50" pos:column="25">(<expr><call><name><name pos:line="50" pos:column="26">Array</name><op:operator pos:line="50" pos:column="31">.</op:operator><name pos:line="50" pos:column="32">IndexOf</name></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name pos:line="50" pos:column="40">WIKI_EXTENSIONS</name></expr></argument><op:operator pos:line="50" pos:column="55">,</op:operator> <argument><expr><call><name><name pos:line="50" pos:column="57">Path</name><op:operator pos:line="50" pos:column="61">.</op:operator><name pos:line="50" pos:column="62">GetExtension</name></name><argument_list pos:line="50" pos:column="74">(<argument><expr><name pos:line="50" pos:column="75">fileName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="50" pos:column="86">&gt;</op:operator> <op:operator pos:line="50" pos:column="88">-</op:operator><lit:literal type="number" pos:line="50" pos:column="89">1</lit:literal></expr>)</condition><then pos:line="50" pos:column="91"> <block pos:line="50" pos:column="92">{
                    <expr_stmt><expr><name pos:line="51" pos:column="21">format</name> <op:operator pos:line="51" pos:column="28">=</op:operator> <lit:literal type="string" pos:line="51" pos:column="30">"wikiplex"</lit:literal></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="53" pos:column="17">else <block pos:line="53" pos:column="22">{
                    <expr_stmt><expr><name pos:line="54" pos:column="21">format</name> <op:operator pos:line="54" pos:column="28">=</op:operator> <lit:literal type="string" pos:line="54" pos:column="30">"xml"</lit:literal></expr>;</expr_stmt>
                }</block></else></if></else></if>
            }</block></then>
            <else pos:line="57" pos:column="13">else <block pos:line="57" pos:column="18">{
                <expr_stmt><expr><name pos:line="58" pos:column="17">format</name> <op:operator pos:line="58" pos:column="24">=</op:operator> <call><name><name pos:line="58" pos:column="26">format</name><op:operator pos:line="58" pos:column="32">.</op:operator><name pos:line="58" pos:column="33">ToLower</name></name><argument_list pos:line="58" pos:column="40">()</argument_list></call><op:operator pos:line="58" pos:column="42">.</op:operator><call><name pos:line="58" pos:column="43">Trim</name><argument_list pos:line="58" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><call><name><name pos:line="59" pos:column="21">Array</name><op:operator pos:line="59" pos:column="26">.</op:operator><name pos:line="59" pos:column="27">IndexOf</name></name><argument_list pos:line="59" pos:column="34">(<argument><expr><name pos:line="59" pos:column="35">FORMATS</name></expr></argument><op:operator pos:line="59" pos:column="42">,</op:operator> <argument><expr><name pos:line="59" pos:column="44">format</name></expr></argument>)</argument_list></call> <op:operator pos:line="59" pos:column="52">==</op:operator> <op:operator pos:line="59" pos:column="55">-</op:operator><lit:literal type="number" pos:line="59" pos:column="56">1</lit:literal></expr>)</condition><then pos:line="59" pos:column="58"> <throw pos:line="59" pos:column="59">throw <expr><op:operator pos:line="59" pos:column="65">new</op:operator> <call><name pos:line="59" pos:column="69">ArgumentOutOfRangeException</name><argument_list pos:line="59" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="97">"format"</lit:literal></expr></argument><op:operator pos:line="59" pos:column="105">,</op:operator> <argument><expr><lit:literal type="string" pos:line="59" pos:column="107">"Unknown format string."</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            }</block></else></if>

            <comment type="line" pos:line="62" pos:column="13">// Prepare XML document</comment>
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">var</name></type> <name pos:line="63" pos:column="17">doc</name> =<init pos:line="63" pos:column="22"> <expr><op:operator pos:line="63" pos:column="23">new</op:operator> <call><name pos:line="63" pos:column="27">XmlDocument</name><argument_list pos:line="63" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <using pos:line="65" pos:column="13">using (var repository = <type><specifier pos:line="65" pos:column="37">new</specifier></type> <name pos:line="65" pos:column="41">DB4Repository</name><parameter_list pos:line="65" pos:column="54">(<param><decl><type><name pos:line="65" pos:column="55">connectionString</name></type></decl></param>)</parameter_list></using>)</block>
            <block pos:line="66" pos:column="13">{
                <comment type="line" pos:line="67" pos:column="17">// Get latest descriptions</comment>
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">ExplorerControl</name><op:operator pos:line="68" pos:column="32">.</op:operator><name pos:line="68" pos:column="33">DescriptionCache</name></name> <op:operator pos:line="68" pos:column="50">=</op:operator> <op:operator pos:line="68" pos:column="52">new</op:operator> <call><name><name pos:line="68" pos:column="56">Helpers</name><op:operator pos:line="68" pos:column="63">.</op:operator><name pos:line="68" pos:column="64">DescriptionHelper</name></name><argument_list pos:line="68" pos:column="81">()</argument_list></call><op:operator pos:line="68" pos:column="83">.</op:operator><call><name pos:line="68" pos:column="84">GetDescriptions</name><argument_list pos:line="68" pos:column="99">(<argument><expr><name pos:line="68" pos:column="100">connectionString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="70" pos:column="17">// Process database info</comment>
                <decl_stmt><decl><type><name pos:line="71" pos:column="17">var</name></type> <name pos:line="71" pos:column="21">parent</name> =<init pos:line="71" pos:column="29"> <expr><call><name><name pos:line="71" pos:column="30">doc</name><op:operator pos:line="71" pos:column="33">.</op:operator><name pos:line="71" pos:column="34">AppendChild</name></name><argument_list pos:line="71" pos:column="45">(<argument><expr><call><name><name pos:line="71" pos:column="46">doc</name><op:operator pos:line="71" pos:column="49">.</op:operator><name pos:line="71" pos:column="50">CreateElement</name></name><argument_list pos:line="71" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="71" pos:column="64">"database"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">doc</name><op:operator pos:line="72" pos:column="20">.</op:operator><name pos:line="72" pos:column="21">DocumentElement</name><op:operator pos:line="72" pos:column="36">.</op:operator><name pos:line="72" pos:column="37">SetAttribute</name></name><argument_list pos:line="72" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="50">"dateCreated"</lit:literal></expr></argument><op:operator pos:line="72" pos:column="63">,</op:operator> <argument><expr><call><name><name pos:line="72" pos:column="65">XmlConvert</name><op:operator pos:line="72" pos:column="75">.</op:operator><name pos:line="72" pos:column="76">ToString</name></name><argument_list pos:line="72" pos:column="84">(<argument><expr><name><name pos:line="72" pos:column="85">DateTime</name><op:operator pos:line="72" pos:column="93">.</op:operator><name pos:line="72" pos:column="94">Now</name></name></expr></argument><op:operator pos:line="72" pos:column="97">,</op:operator> <argument><expr><name><name pos:line="72" pos:column="99">XmlDateTimeSerializationMode</name><op:operator pos:line="72" pos:column="127">.</op:operator><name pos:line="72" pos:column="128">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="73" pos:column="17">doc</name><op:operator pos:line="73" pos:column="20">.</op:operator><name pos:line="73" pos:column="21">DocumentElement</name><op:operator pos:line="73" pos:column="36">.</op:operator><name pos:line="73" pos:column="37">SetAttribute</name></name><argument_list pos:line="73" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="50">"name"</lit:literal></expr></argument><op:operator pos:line="73" pos:column="56">,</op:operator> <argument><expr><name pos:line="73" pos:column="58">caption</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="74" pos:column="17">doc</name><op:operator pos:line="74" pos:column="20">.</op:operator><name pos:line="74" pos:column="21">DocumentElement</name><op:operator pos:line="74" pos:column="36">.</op:operator><name pos:line="74" pos:column="37">SetAttribute</name></name><argument_list pos:line="74" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="50">"dateGenerated"</lit:literal></expr></argument><op:operator pos:line="74" pos:column="65">,</op:operator> <argument><expr><call><name><name pos:line="74" pos:column="67">XmlConvert</name><op:operator pos:line="74" pos:column="77">.</op:operator><name pos:line="74" pos:column="78">ToString</name></name><argument_list pos:line="74" pos:column="86">(<argument><expr><name><name pos:line="74" pos:column="87">DateTime</name><op:operator pos:line="74" pos:column="95">.</op:operator><name pos:line="74" pos:column="96">Now</name></name></expr></argument><op:operator pos:line="74" pos:column="99">,</op:operator> <argument><expr><name><name pos:line="74" pos:column="101">XmlDateTimeSerializationMode</name><op:operator pos:line="74" pos:column="129">.</op:operator><name pos:line="74" pos:column="130">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="76" pos:column="17">var</name></type> <name pos:line="76" pos:column="21">e</name> =<init pos:line="76" pos:column="24"> <expr><call><name><name pos:line="76" pos:column="25">parent</name><op:operator pos:line="76" pos:column="31">.</op:operator><name pos:line="76" pos:column="32">AppendChild</name></name><argument_list pos:line="76" pos:column="43">(<argument><expr><call><name><name pos:line="76" pos:column="44">parent</name><op:operator pos:line="76" pos:column="50">.</op:operator><name pos:line="76" pos:column="51">OwnerDocument</name><op:operator pos:line="76" pos:column="64">.</op:operator><name pos:line="76" pos:column="65">CreateElement</name></name><argument_list pos:line="76" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="79">"schema"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="76" pos:column="90">as</op:operator> <name pos:line="76" pos:column="93">XmlElement</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="77" pos:column="17">e</name><op:operator pos:line="77" pos:column="18">.</op:operator><name pos:line="77" pos:column="19">SetAttribute</name></name><argument_list pos:line="77" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="32">"name"</lit:literal></expr></argument><op:operator pos:line="77" pos:column="38">,</op:operator> <argument><expr><lit:literal type="string" pos:line="77" pos:column="40">"SqlCe"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="79" pos:column="17">string</name></type> <name pos:line="79" pos:column="24">desc</name> =<init pos:line="79" pos:column="30"> <expr><call><name><name pos:line="79" pos:column="31">ExplorerControl</name><op:operator pos:line="79" pos:column="46">.</op:operator><name pos:line="79" pos:column="47">DescriptionCache</name><op:operator pos:line="79" pos:column="63">.</op:operator><name pos:line="79" pos:column="64">Where</name></name><argument_list pos:line="79" pos:column="69">(<argument><expr><name pos:line="79" pos:column="70">d</name> <op:operator pos:line="79" pos:column="72">=&gt;</op:operator> <name><name pos:line="79" pos:column="75">d</name><op:operator pos:line="79" pos:column="76">.</op:operator><name pos:line="79" pos:column="77">Object</name></name> <op:operator pos:line="79" pos:column="84">==</op:operator> <name pos:line="79" pos:column="87">null</name> <op:operator pos:line="79" pos:column="92">&amp;&amp;</op:operator> <name><name pos:line="79" pos:column="95">d</name><op:operator pos:line="79" pos:column="96">.</op:operator><name pos:line="79" pos:column="97">Parent</name></name> <op:operator pos:line="79" pos:column="104">==</op:operator> <name pos:line="79" pos:column="107">null</name></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="112">.</op:operator><call><name pos:line="79" pos:column="113">Select</name><argument_list pos:line="79" pos:column="119">(<argument><expr><name pos:line="79" pos:column="120">d</name> <op:operator pos:line="79" pos:column="122">=&gt;</op:operator> <name><name pos:line="79" pos:column="125">d</name><op:operator pos:line="79" pos:column="126">.</op:operator><name pos:line="79" pos:column="127">Description</name></name></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="139">.</op:operator><call><name pos:line="79" pos:column="140">SingleOrDefault</name><argument_list pos:line="79" pos:column="155">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><op:operator pos:line="80" pos:column="21">!</op:operator><call><name><name pos:line="80" pos:column="22">string</name><op:operator pos:line="80" pos:column="28">.</op:operator><name pos:line="80" pos:column="29">IsNullOrWhiteSpace</name></name><argument_list pos:line="80" pos:column="47">(<argument><expr><name pos:line="80" pos:column="48">desc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="80" pos:column="54">
                <block pos:line="81" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="82" pos:column="21">var</name></type> <name pos:line="82" pos:column="25">pop</name> =<init pos:line="82" pos:column="30"> <expr><call><name><name pos:line="82" pos:column="31">parent</name><op:operator pos:line="82" pos:column="37">.</op:operator><name pos:line="82" pos:column="38">AppendChild</name></name><argument_list pos:line="82" pos:column="49">(<argument><expr><call><name><name pos:line="82" pos:column="50">parent</name><op:operator pos:line="82" pos:column="56">.</op:operator><name pos:line="82" pos:column="57">OwnerDocument</name><op:operator pos:line="82" pos:column="70">.</op:operator><name pos:line="82" pos:column="71">CreateElement</name></name><argument_list pos:line="82" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="85">"dbProperty"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="82" pos:column="100">as</op:operator> <name pos:line="82" pos:column="103">XmlElement</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="83" pos:column="21">pop</name><op:operator pos:line="83" pos:column="24">.</op:operator><name pos:line="83" pos:column="25">SetAttribute</name></name><argument_list pos:line="83" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="38">"key"</lit:literal></expr></argument><op:operator pos:line="83" pos:column="43">,</op:operator> <argument><expr><lit:literal type="string" pos:line="83" pos:column="45">"Description"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="84" pos:column="21">pop</name><op:operator pos:line="84" pos:column="24">.</op:operator><name pos:line="84" pos:column="25">SetAttribute</name></name><argument_list pos:line="84" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="38">"value"</lit:literal></expr></argument><op:operator pos:line="84" pos:column="45">,</op:operator> <argument><expr><name pos:line="84" pos:column="47">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                
                }</block></then></if>
                <decl_stmt><decl><type><name pos:line="86" pos:column="17">var</name></type> <name pos:line="86" pos:column="21">properties</name> =<init pos:line="86" pos:column="33"> <expr><call><name><name pos:line="86" pos:column="34">repository</name><op:operator pos:line="86" pos:column="44">.</op:operator><name pos:line="86" pos:column="45">GetDatabaseInfo</name></name><argument_list pos:line="86" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <foreach pos:line="87" pos:column="17">foreach (<init><decl><type><name pos:line="87" pos:column="26">var</name></type> <name pos:line="87" pos:column="30">prop</name> <init pos:line="87" pos:column="35">in <expr><name pos:line="87" pos:column="38">properties</name></expr></init></decl></init>)
                <block pos:line="88" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="89" pos:column="21">var</name></type> <name pos:line="89" pos:column="25">pop</name> =<init pos:line="89" pos:column="30"> <expr><call><name><name pos:line="89" pos:column="31">parent</name><op:operator pos:line="89" pos:column="37">.</op:operator><name pos:line="89" pos:column="38">AppendChild</name></name><argument_list pos:line="89" pos:column="49">(<argument><expr><call><name><name pos:line="89" pos:column="50">parent</name><op:operator pos:line="89" pos:column="56">.</op:operator><name pos:line="89" pos:column="57">OwnerDocument</name><op:operator pos:line="89" pos:column="70">.</op:operator><name pos:line="89" pos:column="71">CreateElement</name></name><argument_list pos:line="89" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="89" pos:column="85">"dbProperty"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="89" pos:column="100">as</op:operator> <name pos:line="89" pos:column="103">XmlElement</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="90" pos:column="21">pop</name><op:operator pos:line="90" pos:column="24">.</op:operator><name pos:line="90" pos:column="25">SetAttribute</name></name><argument_list pos:line="90" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="38">"key"</lit:literal></expr></argument><op:operator pos:line="90" pos:column="43">,</op:operator> <argument><expr><name><name pos:line="90" pos:column="45">prop</name><op:operator pos:line="90" pos:column="49">.</op:operator><name pos:line="90" pos:column="50">Key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="91" pos:column="21">pop</name><op:operator pos:line="91" pos:column="24">.</op:operator><name pos:line="91" pos:column="25">SetAttribute</name></name><argument_list pos:line="91" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="38">"value"</lit:literal></expr></argument><op:operator pos:line="91" pos:column="45">,</op:operator> <argument><expr><name><name pos:line="91" pos:column="47">prop</name><op:operator pos:line="91" pos:column="51">.</op:operator><name pos:line="91" pos:column="52">Value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                
                }</block></foreach>

                <decl_stmt><decl><type><name pos:line="94" pos:column="17">var</name></type> <name pos:line="94" pos:column="21">tables</name> =<init pos:line="94" pos:column="29"> <expr><call><name><name pos:line="94" pos:column="30">repository</name><op:operator pos:line="94" pos:column="40">.</op:operator><name pos:line="94" pos:column="41">GetAllTableNames</name></name><argument_list pos:line="94" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="95" pos:column="17">var</name></type> <name pos:line="95" pos:column="21">columns</name> =<init pos:line="95" pos:column="30"> <expr><call><name><name pos:line="95" pos:column="31">repository</name><op:operator pos:line="95" pos:column="41">.</op:operator><name pos:line="95" pos:column="42">GetAllColumns</name></name><argument_list pos:line="95" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="96" pos:column="17">var</name></type> <name pos:line="96" pos:column="21">primaryKeys</name> =<init pos:line="96" pos:column="34"> <expr><call><name><name pos:line="96" pos:column="35">repository</name><op:operator pos:line="96" pos:column="45">.</op:operator><name pos:line="96" pos:column="46">GetAllPrimaryKeys</name></name><argument_list pos:line="96" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
                            
                <comment type="line" pos:line="98" pos:column="17">// Create object elements</comment>
                <foreach pos:line="99" pos:column="17">foreach (<init><decl><type><name pos:line="99" pos:column="26">var</name></type> <name pos:line="99" pos:column="30">table</name> <init pos:line="99" pos:column="36">in <expr><name pos:line="99" pos:column="39">tables</name></expr></init></decl></init>)
                <block pos:line="100" pos:column="17">{
                    <if pos:line="101" pos:column="21">if <condition pos:line="101" pos:column="24">(<expr><op:operator pos:line="101" pos:column="25">!</op:operator><name><name pos:line="101" pos:column="26">Properties</name><op:operator pos:line="101" pos:column="36">.</op:operator><name pos:line="101" pos:column="37">Settings</name><op:operator pos:line="101" pos:column="45">.</op:operator><name pos:line="101" pos:column="46">Default</name><op:operator pos:line="101" pos:column="53">.</op:operator><name pos:line="101" pos:column="54">IncludeSystemTablesInDocumentation</name></name> <op:operator pos:line="101" pos:column="89">&amp;&amp;</op:operator> <call><name><name pos:line="101" pos:column="92">table</name><op:operator pos:line="101" pos:column="97">.</op:operator><name pos:line="101" pos:column="98">StartsWith</name></name><argument_list pos:line="101" pos:column="108">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="109">"__"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="101" pos:column="115">
                        <continue pos:line="102" pos:column="25">continue;</continue></then></if>

                    <decl_stmt><decl><type><name pos:line="104" pos:column="21">var</name></type> <name pos:line="104" pos:column="25">foreignKeys</name> =<init pos:line="104" pos:column="38"> <expr><call><name><name pos:line="104" pos:column="39">repository</name><op:operator pos:line="104" pos:column="49">.</op:operator><name pos:line="104" pos:column="50">GetAllForeignKeys</name></name><argument_list pos:line="104" pos:column="67">()</argument_list></call><op:operator pos:line="104" pos:column="69">.</op:operator><call><name pos:line="104" pos:column="70">Where</name><argument_list pos:line="104" pos:column="75">(<argument><expr><name pos:line="104" pos:column="76">fk</name> <op:operator pos:line="104" pos:column="79">=&gt;</op:operator> <name><name pos:line="104" pos:column="82">fk</name><op:operator pos:line="104" pos:column="84">.</op:operator><name pos:line="104" pos:column="85">ConstraintTableName</name></name> <op:operator pos:line="104" pos:column="105">==</op:operator> <name pos:line="104" pos:column="108">table</name></expr></argument>)</argument_list></call><op:operator pos:line="104" pos:column="114">.</op:operator><call><name pos:line="104" pos:column="115">ToList</name><argument_list pos:line="104" pos:column="121">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt><expr><name pos:line="106" pos:column="21">e</name> <op:operator pos:line="106" pos:column="23">=</op:operator> <call><name><name pos:line="106" pos:column="25">parent</name><op:operator pos:line="106" pos:column="31">.</op:operator><name pos:line="106" pos:column="32">AppendChild</name></name><argument_list pos:line="106" pos:column="43">(<argument><expr><call><name><name pos:line="106" pos:column="44">parent</name><op:operator pos:line="106" pos:column="50">.</op:operator><name pos:line="106" pos:column="51">OwnerDocument</name><op:operator pos:line="106" pos:column="64">.</op:operator><name pos:line="106" pos:column="65">CreateElement</name></name><argument_list pos:line="106" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="106" pos:column="79">"object"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="106" pos:column="90">as</op:operator> <name pos:line="106" pos:column="93">XmlElement</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="107" pos:column="21">e</name><op:operator pos:line="107" pos:column="22">.</op:operator><name pos:line="107" pos:column="23">SetAttribute</name></name><argument_list pos:line="107" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="36">"id"</lit:literal></expr></argument><op:operator pos:line="107" pos:column="40">,</op:operator> <argument><expr><name pos:line="107" pos:column="42">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="108" pos:column="21">e</name><op:operator pos:line="108" pos:column="22">.</op:operator><name pos:line="108" pos:column="23">SetAttribute</name></name><argument_list pos:line="108" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="108" pos:column="36">"schema"</lit:literal></expr></argument><op:operator pos:line="108" pos:column="44">,</op:operator> <argument><expr><lit:literal type="string" pos:line="108" pos:column="46">"SqlCe"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="109" pos:column="21">e</name><op:operator pos:line="109" pos:column="22">.</op:operator><name pos:line="109" pos:column="23">SetAttribute</name></name><argument_list pos:line="109" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="36">"name"</lit:literal></expr></argument><op:operator pos:line="109" pos:column="42">,</op:operator> <argument><expr><name pos:line="109" pos:column="44">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="110" pos:column="21">e</name><op:operator pos:line="110" pos:column="22">.</op:operator><name pos:line="110" pos:column="23">SetAttribute</name></name><argument_list pos:line="110" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="36">"type"</lit:literal></expr></argument><op:operator pos:line="110" pos:column="42">,</op:operator> <argument><expr><lit:literal type="string" pos:line="110" pos:column="44">"USER_TABLE"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="111" pos:column="21">e</name><op:operator pos:line="111" pos:column="22">.</op:operator><name pos:line="111" pos:column="23">SetAttribute</name></name><argument_list pos:line="111" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="36">"dateCreated"</lit:literal></expr></argument><op:operator pos:line="111" pos:column="49">,</op:operator> <argument><expr><call><name><name pos:line="111" pos:column="51">XmlConvert</name><op:operator pos:line="111" pos:column="61">.</op:operator><name pos:line="111" pos:column="62">ToString</name></name><argument_list pos:line="111" pos:column="70">(<argument><expr><name><name pos:line="111" pos:column="71">DateTime</name><op:operator pos:line="111" pos:column="79">.</op:operator><name pos:line="111" pos:column="80">Now</name></name></expr></argument><op:operator pos:line="111" pos:column="83">,</op:operator> <argument><expr><name><name pos:line="111" pos:column="85">XmlDateTimeSerializationMode</name><op:operator pos:line="111" pos:column="113">.</op:operator><name pos:line="111" pos:column="114">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="112" pos:column="21">e</name><op:operator pos:line="112" pos:column="22">.</op:operator><name pos:line="112" pos:column="23">SetAttribute</name></name><argument_list pos:line="112" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="36">"dateModified"</lit:literal></expr></argument><op:operator pos:line="112" pos:column="50">,</op:operator> <argument><expr><call><name><name pos:line="112" pos:column="52">XmlConvert</name><op:operator pos:line="112" pos:column="62">.</op:operator><name pos:line="112" pos:column="63">ToString</name></name><argument_list pos:line="112" pos:column="71">(<argument><expr><name><name pos:line="112" pos:column="72">DateTime</name><op:operator pos:line="112" pos:column="80">.</op:operator><name pos:line="112" pos:column="81">Now</name></name></expr></argument><op:operator pos:line="112" pos:column="84">,</op:operator> <argument><expr><name><name pos:line="112" pos:column="86">XmlDateTimeSerializationMode</name><op:operator pos:line="112" pos:column="114">.</op:operator><name pos:line="112" pos:column="115">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="113" pos:column="21">desc</name> <op:operator pos:line="113" pos:column="26">=</op:operator> <call><name><name pos:line="113" pos:column="28">ExplorerControl</name><op:operator pos:line="113" pos:column="43">.</op:operator><name pos:line="113" pos:column="44">DescriptionCache</name><op:operator pos:line="113" pos:column="60">.</op:operator><name pos:line="113" pos:column="61">Where</name></name><argument_list pos:line="113" pos:column="66">(<argument><expr><name pos:line="113" pos:column="67">d</name> <op:operator pos:line="113" pos:column="69">=&gt;</op:operator> <name><name pos:line="113" pos:column="72">d</name><op:operator pos:line="113" pos:column="73">.</op:operator><name pos:line="113" pos:column="74">Object</name></name> <op:operator pos:line="113" pos:column="81">==</op:operator> <name pos:line="113" pos:column="84">table</name> <op:operator pos:line="113" pos:column="90">&amp;&amp;</op:operator> <name><name pos:line="113" pos:column="93">d</name><op:operator pos:line="113" pos:column="94">.</op:operator><name pos:line="113" pos:column="95">Parent</name></name> <op:operator pos:line="113" pos:column="102">==</op:operator> <name pos:line="113" pos:column="105">null</name></expr></argument>)</argument_list></call><op:operator pos:line="113" pos:column="110">.</op:operator><call><name pos:line="113" pos:column="111">Select</name><argument_list pos:line="113" pos:column="117">(<argument><expr><name pos:line="113" pos:column="118">d</name> <op:operator pos:line="113" pos:column="120">=&gt;</op:operator> <name><name pos:line="113" pos:column="123">d</name><op:operator pos:line="113" pos:column="124">.</op:operator><name pos:line="113" pos:column="125">Description</name></name></expr></argument>)</argument_list></call><op:operator pos:line="113" pos:column="137">.</op:operator><call><name pos:line="113" pos:column="138">SingleOrDefault</name><argument_list pos:line="113" pos:column="153">()</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="114" pos:column="21">if <condition pos:line="114" pos:column="24">(<expr><op:operator pos:line="114" pos:column="25">!</op:operator><call><name><name pos:line="114" pos:column="26">string</name><op:operator pos:line="114" pos:column="32">.</op:operator><name pos:line="114" pos:column="33">IsNullOrWhiteSpace</name></name><argument_list pos:line="114" pos:column="51">(<argument><expr><name pos:line="114" pos:column="52">desc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="114" pos:column="58">
                        <expr_stmt><expr><call><name><name pos:line="115" pos:column="25">e</name><op:operator pos:line="115" pos:column="26">.</op:operator><name pos:line="115" pos:column="27">SetAttribute</name></name><argument_list pos:line="115" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="40">"description"</lit:literal></expr></argument><op:operator pos:line="115" pos:column="53">,</op:operator> <argument><expr><name pos:line="115" pos:column="55">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

                    <decl_stmt><decl><type><name pos:line="117" pos:column="21">var</name></type> <name pos:line="117" pos:column="25">columnList</name> =<init pos:line="117" pos:column="37"> <expr><call><name><name pos:line="117" pos:column="38">columns</name><op:operator pos:line="117" pos:column="45">.</op:operator><name pos:line="117" pos:column="46">Where</name></name><argument_list pos:line="117" pos:column="51">(<argument><expr><name pos:line="117" pos:column="52">c</name> <op:operator pos:line="117" pos:column="54">=&gt;</op:operator> <name><name pos:line="117" pos:column="57">c</name><op:operator pos:line="117" pos:column="58">.</op:operator><name pos:line="117" pos:column="59">TableName</name></name> <op:operator pos:line="117" pos:column="69">==</op:operator> <name pos:line="117" pos:column="72">table</name></expr></argument>)</argument_list></call><op:operator pos:line="117" pos:column="78">.</op:operator><call><name pos:line="117" pos:column="79">ToList</name><argument_list pos:line="117" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <foreach pos:line="118" pos:column="21">foreach (<init><decl><type><name pos:line="118" pos:column="30">var</name></type> <name pos:line="118" pos:column="34">col</name> <init pos:line="118" pos:column="38">in <expr><name pos:line="118" pos:column="41">columnList</name></expr></init></decl></init>)
                    <block pos:line="119" pos:column="21">{ 
                        <decl_stmt><decl><type><name pos:line="120" pos:column="25">var</name></type> <name pos:line="120" pos:column="29">c</name> =<init pos:line="120" pos:column="32"> <expr><call><name><name pos:line="120" pos:column="33">e</name><op:operator pos:line="120" pos:column="34">.</op:operator><name pos:line="120" pos:column="35">AppendChild</name></name><argument_list pos:line="120" pos:column="46">(<argument><expr><call><name><name pos:line="120" pos:column="47">parent</name><op:operator pos:line="120" pos:column="53">.</op:operator><name pos:line="120" pos:column="54">OwnerDocument</name><op:operator pos:line="120" pos:column="67">.</op:operator><name pos:line="120" pos:column="68">CreateElement</name></name><argument_list pos:line="120" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="82">"column"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="120" pos:column="93">as</op:operator> <name pos:line="120" pos:column="96">XmlElement</name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name pos:line="121" pos:column="25">c</name><op:operator pos:line="121" pos:column="26">.</op:operator><name pos:line="121" pos:column="27">SetAttribute</name></name><argument_list pos:line="121" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="40">"name"</lit:literal></expr></argument><op:operator pos:line="121" pos:column="46">,</op:operator> <argument><expr><name><name pos:line="121" pos:column="48">col</name><op:operator pos:line="121" pos:column="51">.</op:operator><name pos:line="121" pos:column="52">ColumnName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="122" pos:column="25">c</name><op:operator pos:line="122" pos:column="26">.</op:operator><name pos:line="122" pos:column="27">SetAttribute</name></name><argument_list pos:line="122" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="40">"type"</lit:literal></expr></argument><op:operator pos:line="122" pos:column="46">,</op:operator> <argument><expr><name><name pos:line="122" pos:column="48">col</name><op:operator pos:line="122" pos:column="51">.</op:operator><name pos:line="122" pos:column="52">DataType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="123" pos:column="25">c</name><op:operator pos:line="123" pos:column="26">.</op:operator><name pos:line="123" pos:column="27">SetAttribute</name></name><argument_list pos:line="123" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="40">"length"</lit:literal></expr></argument><op:operator pos:line="123" pos:column="48">,</op:operator> <argument><expr><call><name><name pos:line="123" pos:column="50">XmlConvert</name><op:operator pos:line="123" pos:column="60">.</op:operator><name pos:line="123" pos:column="61">ToString</name></name><argument_list pos:line="123" pos:column="69">(<argument><expr><name><name pos:line="123" pos:column="70">col</name><op:operator pos:line="123" pos:column="73">.</op:operator><name pos:line="123" pos:column="74">CharacterMaxLength</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="124" pos:column="25">c</name><op:operator pos:line="124" pos:column="26">.</op:operator><name pos:line="124" pos:column="27">SetAttribute</name></name><argument_list pos:line="124" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="40">"precision"</lit:literal></expr></argument><op:operator pos:line="124" pos:column="51">,</op:operator> <argument><expr><call><name><name pos:line="124" pos:column="53">XmlConvert</name><op:operator pos:line="124" pos:column="63">.</op:operator><name pos:line="124" pos:column="64">ToString</name></name><argument_list pos:line="124" pos:column="72">(<argument><expr><name><name pos:line="124" pos:column="73">col</name><op:operator pos:line="124" pos:column="76">.</op:operator><name pos:line="124" pos:column="77">NumericPrecision</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="125" pos:column="25">c</name><op:operator pos:line="125" pos:column="26">.</op:operator><name pos:line="125" pos:column="27">SetAttribute</name></name><argument_list pos:line="125" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="40">"scale"</lit:literal></expr></argument><op:operator pos:line="125" pos:column="47">,</op:operator> <argument><expr><call><name><name pos:line="125" pos:column="49">XmlConvert</name><op:operator pos:line="125" pos:column="59">.</op:operator><name pos:line="125" pos:column="60">ToString</name></name><argument_list pos:line="125" pos:column="68">(<argument><expr><name><name pos:line="125" pos:column="69">col</name><op:operator pos:line="125" pos:column="72">.</op:operator><name pos:line="125" pos:column="73">NumericScale</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <decl_stmt><decl><type><name pos:line="126" pos:column="25">bool</name></type> <name pos:line="126" pos:column="30">isNullable</name> =<init pos:line="126" pos:column="42"> <expr><name><name pos:line="126" pos:column="43">col</name><op:operator pos:line="126" pos:column="46">.</op:operator><name pos:line="126" pos:column="47">IsNullable</name></name> <op:operator pos:line="126" pos:column="58">==</op:operator> <name><name pos:line="126" pos:column="61">SqlCeScripting</name><op:operator pos:line="126" pos:column="75">.</op:operator><name pos:line="126" pos:column="76">YesNoOption</name><op:operator pos:line="126" pos:column="87">.</op:operator><name pos:line="126" pos:column="88">YES</name></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name pos:line="127" pos:column="25">c</name><op:operator pos:line="127" pos:column="26">.</op:operator><name pos:line="127" pos:column="27">SetAttribute</name></name><argument_list pos:line="127" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="40">"nullable"</lit:literal></expr></argument><op:operator pos:line="127" pos:column="50">,</op:operator> <argument><expr><call><name><name pos:line="127" pos:column="52">XmlConvert</name><op:operator pos:line="127" pos:column="62">.</op:operator><name pos:line="127" pos:column="63">ToString</name></name><argument_list pos:line="127" pos:column="71">(<argument><expr><name pos:line="127" pos:column="72">isNullable</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <decl_stmt><decl><type><name pos:line="128" pos:column="25">bool</name></type> <name pos:line="128" pos:column="30">isIdentity</name> =<init pos:line="128" pos:column="42"> <expr><name><name pos:line="128" pos:column="43">col</name><op:operator pos:line="128" pos:column="46">.</op:operator><name pos:line="128" pos:column="47">AutoIncrementBy</name></name> <op:operator pos:line="128" pos:column="63">&gt;</op:operator> <lit:literal type="number" pos:line="128" pos:column="65">0</lit:literal></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name pos:line="129" pos:column="25">c</name><op:operator pos:line="129" pos:column="26">.</op:operator><name pos:line="129" pos:column="27">SetAttribute</name></name><argument_list pos:line="129" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="40">"identity"</lit:literal></expr></argument><op:operator pos:line="129" pos:column="50">,</op:operator> <argument><expr><call><name><name pos:line="129" pos:column="52">XmlConvert</name><op:operator pos:line="129" pos:column="62">.</op:operator><name pos:line="129" pos:column="63">ToString</name></name><argument_list pos:line="129" pos:column="71">(<argument><expr><name pos:line="129" pos:column="72">isIdentity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><name pos:line="130" pos:column="29">isIdentity</name></expr>)</condition><then pos:line="130" pos:column="40">
                        <block pos:line="131" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="132" pos:column="29">c</name><op:operator pos:line="132" pos:column="30">.</op:operator><name pos:line="132" pos:column="31">SetAttribute</name></name><argument_list pos:line="132" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="44">"identitySeed"</lit:literal></expr></argument><op:operator pos:line="132" pos:column="58">,</op:operator> <argument><expr><lit:literal type="string" pos:line="132" pos:column="60">"("</lit:literal> <op:operator pos:line="132" pos:column="64">+</op:operator> <call><name><name pos:line="132" pos:column="66">col</name><op:operator pos:line="132" pos:column="69">.</op:operator><name pos:line="132" pos:column="70">AutoIncrementSeed</name><op:operator pos:line="132" pos:column="87">.</op:operator><name pos:line="132" pos:column="88">ToString</name></name><argument_list pos:line="132" pos:column="96">()</argument_list></call> <op:operator pos:line="132" pos:column="99">+</op:operator><lit:literal type="string" pos:line="132" pos:column="100">","</lit:literal> <op:operator pos:line="132" pos:column="104">+</op:operator> <call><name><name pos:line="132" pos:column="106">col</name><op:operator pos:line="132" pos:column="109">.</op:operator><name pos:line="132" pos:column="110">AutoIncrementBy</name><op:operator pos:line="132" pos:column="125">.</op:operator><name pos:line="132" pos:column="126">ToString</name></name><argument_list pos:line="132" pos:column="134">()</argument_list></call> <op:operator pos:line="132" pos:column="137">+</op:operator> <lit:literal type="string" pos:line="132" pos:column="139">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                        <expr_stmt><expr><call><name><name pos:line="134" pos:column="25">c</name><op:operator pos:line="134" pos:column="26">.</op:operator><name pos:line="134" pos:column="27">SetAttribute</name></name><argument_list pos:line="134" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="40">"computed"</lit:literal></expr></argument><op:operator pos:line="134" pos:column="50">,</op:operator> <argument><expr><call><name><name pos:line="134" pos:column="52">XmlConvert</name><op:operator pos:line="134" pos:column="62">.</op:operator><name pos:line="134" pos:column="63">ToString</name></name><argument_list pos:line="134" pos:column="71">(<argument><expr><lit:literal type="boolean" pos:line="134" pos:column="72">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="135" pos:column="25">c</name><op:operator pos:line="135" pos:column="26">.</op:operator><name pos:line="135" pos:column="27">SetAttribute</name></name><argument_list pos:line="135" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="135" pos:column="40">"rowguidcol"</lit:literal></expr></argument><op:operator pos:line="135" pos:column="52">,</op:operator> <argument><expr><call><name><name pos:line="135" pos:column="54">XmlConvert</name><op:operator pos:line="135" pos:column="64">.</op:operator><name pos:line="135" pos:column="65">ToString</name></name><argument_list pos:line="135" pos:column="73">(<argument><expr><name><name pos:line="135" pos:column="74">col</name><op:operator pos:line="135" pos:column="77">.</op:operator><name pos:line="135" pos:column="78">RowGuidCol</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt><expr><name pos:line="137" pos:column="25">desc</name> <op:operator pos:line="137" pos:column="30">=</op:operator> <call><name><name pos:line="137" pos:column="32">ExplorerControl</name><op:operator pos:line="137" pos:column="47">.</op:operator><name pos:line="137" pos:column="48">DescriptionCache</name><op:operator pos:line="137" pos:column="64">.</op:operator><name pos:line="137" pos:column="65">Where</name></name><argument_list pos:line="137" pos:column="70">(<argument><expr><name pos:line="137" pos:column="71">d</name> <op:operator pos:line="137" pos:column="73">=&gt;</op:operator> <name><name pos:line="137" pos:column="76">d</name><op:operator pos:line="137" pos:column="77">.</op:operator><name pos:line="137" pos:column="78">Object</name></name> <op:operator pos:line="137" pos:column="85">==</op:operator> <name><name pos:line="137" pos:column="88">col</name><op:operator pos:line="137" pos:column="91">.</op:operator><name pos:line="137" pos:column="92">ColumnName</name></name> <op:operator pos:line="137" pos:column="103">&amp;&amp;</op:operator> <name><name pos:line="137" pos:column="106">d</name><op:operator pos:line="137" pos:column="107">.</op:operator><name pos:line="137" pos:column="108">Parent</name></name> <op:operator pos:line="137" pos:column="115">==</op:operator> <name pos:line="137" pos:column="118">table</name></expr></argument>)</argument_list></call><op:operator pos:line="137" pos:column="124">.</op:operator><call><name pos:line="137" pos:column="125">Select</name><argument_list pos:line="137" pos:column="131">(<argument><expr><name pos:line="137" pos:column="132">d</name> <op:operator pos:line="137" pos:column="134">=&gt;</op:operator> <name><name pos:line="137" pos:column="137">d</name><op:operator pos:line="137" pos:column="138">.</op:operator><name pos:line="137" pos:column="139">Description</name></name></expr></argument>)</argument_list></call><op:operator pos:line="137" pos:column="151">.</op:operator><call><name pos:line="137" pos:column="152">SingleOrDefault</name><argument_list pos:line="137" pos:column="167">()</argument_list></call></expr>;</expr_stmt>
                        <if pos:line="138" pos:column="25">if <condition pos:line="138" pos:column="28">(<expr><op:operator pos:line="138" pos:column="29">!</op:operator><call><name><name pos:line="138" pos:column="30">string</name><op:operator pos:line="138" pos:column="36">.</op:operator><name pos:line="138" pos:column="37">IsNullOrWhiteSpace</name></name><argument_list pos:line="138" pos:column="55">(<argument><expr><name pos:line="138" pos:column="56">desc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="138" pos:column="62">
                            <expr_stmt><expr><call><name><name pos:line="139" pos:column="29">c</name><op:operator pos:line="139" pos:column="30">.</op:operator><name pos:line="139" pos:column="31">SetAttribute</name></name><argument_list pos:line="139" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="139" pos:column="44">"description"</lit:literal></expr></argument><op:operator pos:line="139" pos:column="57">,</op:operator> <argument><expr><name pos:line="139" pos:column="59">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

                        <if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><name><name pos:line="141" pos:column="29">col</name><op:operator pos:line="141" pos:column="32">.</op:operator><name pos:line="141" pos:column="33">ColumnHasDefault</name></name></expr>)</condition><then pos:line="141" pos:column="50">
                        <block pos:line="142" pos:column="25">{
                            <decl_stmt><decl><type><name pos:line="143" pos:column="29">var</name></type> <name pos:line="143" pos:column="33">def</name> =<init pos:line="143" pos:column="38"> <expr><call><name><name pos:line="143" pos:column="39">c</name><op:operator pos:line="143" pos:column="40">.</op:operator><name pos:line="143" pos:column="41">AppendChild</name></name><argument_list pos:line="143" pos:column="52">(<argument><expr><call><name><name pos:line="143" pos:column="53">parent</name><op:operator pos:line="143" pos:column="59">.</op:operator><name pos:line="143" pos:column="60">OwnerDocument</name><op:operator pos:line="143" pos:column="73">.</op:operator><name pos:line="143" pos:column="74">CreateElement</name></name><argument_list pos:line="143" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="88">"default"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="143" pos:column="100">as</op:operator> <name pos:line="143" pos:column="103">XmlElement</name></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><call><name><name pos:line="144" pos:column="29">def</name><op:operator pos:line="144" pos:column="32">.</op:operator><name pos:line="144" pos:column="33">SetAttribute</name></name><argument_list pos:line="144" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="144" pos:column="46">"value"</lit:literal></expr></argument><op:operator pos:line="144" pos:column="53">,</op:operator> <argument><expr><name><name pos:line="144" pos:column="55">col</name><op:operator pos:line="144" pos:column="58">.</op:operator><name pos:line="144" pos:column="59">ColumnDefault</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>

                        <decl_stmt><decl><type><name pos:line="147" pos:column="25">var</name></type> <name pos:line="147" pos:column="29">pkList</name> =<init pos:line="147" pos:column="37"> <expr><call><name><name pos:line="147" pos:column="38">primaryKeys</name><op:operator pos:line="147" pos:column="49">.</op:operator><name pos:line="147" pos:column="50">Where</name></name><argument_list pos:line="147" pos:column="55">(<argument><expr><name pos:line="147" pos:column="56">pk</name> <op:operator pos:line="147" pos:column="59">=&gt;</op:operator> <name><name pos:line="147" pos:column="62">pk</name><op:operator pos:line="147" pos:column="64">.</op:operator><name pos:line="147" pos:column="65">TableName</name></name> <op:operator pos:line="147" pos:column="75">==</op:operator> <name pos:line="147" pos:column="78">table</name> <op:operator pos:line="147" pos:column="84">&amp;&amp;</op:operator> <name><name pos:line="147" pos:column="87">pk</name><op:operator pos:line="147" pos:column="89">.</op:operator><name pos:line="147" pos:column="90">ColumnName</name></name> <op:operator pos:line="147" pos:column="101">==</op:operator> <name><name pos:line="147" pos:column="104">col</name><op:operator pos:line="147" pos:column="107">.</op:operator><name pos:line="147" pos:column="108">ColumnName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <foreach pos:line="148" pos:column="25">foreach (<init><decl><type><name pos:line="148" pos:column="34">var</name></type> <name pos:line="148" pos:column="38">pk</name> <init pos:line="148" pos:column="41">in <expr><name pos:line="148" pos:column="44">pkList</name></expr></init></decl></init>)
                        <block pos:line="149" pos:column="25">{
                            <decl_stmt><decl><type><name pos:line="150" pos:column="29">var</name></type> <name pos:line="150" pos:column="33">p</name> =<init pos:line="150" pos:column="36"> <expr><call><name><name pos:line="150" pos:column="37">c</name><op:operator pos:line="150" pos:column="38">.</op:operator><name pos:line="150" pos:column="39">AppendChild</name></name><argument_list pos:line="150" pos:column="50">(<argument><expr><call><name><name pos:line="150" pos:column="51">parent</name><op:operator pos:line="150" pos:column="57">.</op:operator><name pos:line="150" pos:column="58">OwnerDocument</name><op:operator pos:line="150" pos:column="71">.</op:operator><name pos:line="150" pos:column="72">CreateElement</name></name><argument_list pos:line="150" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="86">"primaryKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="150" pos:column="101">as</op:operator> <name pos:line="150" pos:column="104">XmlElement</name></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><call><name><name pos:line="151" pos:column="29">p</name><op:operator pos:line="151" pos:column="30">.</op:operator><name pos:line="151" pos:column="31">SetAttribute</name></name><argument_list pos:line="151" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="44">"refId"</lit:literal></expr></argument><op:operator pos:line="151" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="151" pos:column="53">pk</name><op:operator pos:line="151" pos:column="55">.</op:operator><name pos:line="151" pos:column="56">KeyName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></foreach>

                        <decl_stmt><decl><type><name pos:line="154" pos:column="25">var</name></type> <name pos:line="154" pos:column="29">fkList</name> =<init pos:line="154" pos:column="37"> <expr><call><name><name pos:line="154" pos:column="38">foreignKeys</name><op:operator pos:line="154" pos:column="49">.</op:operator><name pos:line="154" pos:column="50">Where</name></name><argument_list pos:line="154" pos:column="55">(<argument><expr><name pos:line="154" pos:column="56">fk</name> <op:operator pos:line="154" pos:column="59">=&gt;</op:operator> <name><name pos:line="154" pos:column="62">fk</name><op:operator pos:line="154" pos:column="64">.</op:operator><name pos:line="154" pos:column="65">ColumnName</name></name> <op:operator pos:line="154" pos:column="76">==</op:operator> <name><name pos:line="154" pos:column="79">col</name><op:operator pos:line="154" pos:column="82">.</op:operator><name pos:line="154" pos:column="83">ColumnName</name></name></expr></argument>)</argument_list></call><op:operator pos:line="154" pos:column="94">.</op:operator><call><name pos:line="154" pos:column="95">ToList</name><argument_list pos:line="154" pos:column="101">()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <foreach pos:line="155" pos:column="25">foreach (<init><decl><type><name pos:line="155" pos:column="34">var</name></type> <name pos:line="155" pos:column="38">fk</name> <init pos:line="155" pos:column="41">in <expr><name pos:line="155" pos:column="44">fkList</name></expr></init></decl></init>)
                        <block pos:line="156" pos:column="25">{
                            <decl_stmt><decl><type><name pos:line="157" pos:column="29">var</name></type> <name pos:line="157" pos:column="33">p</name> =<init pos:line="157" pos:column="36"> <expr><call><name><name pos:line="157" pos:column="37">c</name><op:operator pos:line="157" pos:column="38">.</op:operator><name pos:line="157" pos:column="39">AppendChild</name></name><argument_list pos:line="157" pos:column="50">(<argument><expr><call><name><name pos:line="157" pos:column="51">parent</name><op:operator pos:line="157" pos:column="57">.</op:operator><name pos:line="157" pos:column="58">OwnerDocument</name><op:operator pos:line="157" pos:column="71">.</op:operator><name pos:line="157" pos:column="72">CreateElement</name></name><argument_list pos:line="157" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="157" pos:column="86">"foreignKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="157" pos:column="101">as</op:operator> <name pos:line="157" pos:column="104">XmlElement</name></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><call><name><name pos:line="158" pos:column="29">p</name><op:operator pos:line="158" pos:column="30">.</op:operator><name pos:line="158" pos:column="31">SetAttribute</name></name><argument_list pos:line="158" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="44">"refId"</lit:literal></expr></argument><op:operator pos:line="158" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="158" pos:column="53">fk</name><op:operator pos:line="158" pos:column="55">.</op:operator><name pos:line="158" pos:column="56">ConstraintName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="159" pos:column="29">p</name><op:operator pos:line="159" pos:column="30">.</op:operator><name pos:line="159" pos:column="31">SetAttribute</name></name><argument_list pos:line="159" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="159" pos:column="44">"tableId"</lit:literal></expr></argument><op:operator pos:line="159" pos:column="53">,</op:operator> <argument><expr><name><name pos:line="159" pos:column="55">fk</name><op:operator pos:line="159" pos:column="57">.</op:operator><name pos:line="159" pos:column="58">UniqueConstraintTableName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="160" pos:column="29">p</name><op:operator pos:line="160" pos:column="30">.</op:operator><name pos:line="160" pos:column="31">SetAttribute</name></name><argument_list pos:line="160" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="160" pos:column="44">"column"</lit:literal></expr></argument><op:operator pos:line="160" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="160" pos:column="54">fk</name><op:operator pos:line="160" pos:column="56">.</op:operator><name pos:line="160" pos:column="57">UniqueColumnName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></foreach>
                        
                    }</block></foreach>

                    <decl_stmt><decl><type><name pos:line="165" pos:column="21">var</name></type> <name pos:line="165" pos:column="25">allPks</name> =<init pos:line="165" pos:column="33"> <expr><call><name><name pos:line="165" pos:column="34">primaryKeys</name><op:operator pos:line="165" pos:column="45">.</op:operator><name pos:line="165" pos:column="46">Where</name></name><argument_list pos:line="165" pos:column="51">(<argument><expr><name pos:line="165" pos:column="52">pk</name> <op:operator pos:line="165" pos:column="55">=&gt;</op:operator> <name><name pos:line="165" pos:column="58">pk</name><op:operator pos:line="165" pos:column="60">.</op:operator><name pos:line="165" pos:column="61">TableName</name></name> <op:operator pos:line="165" pos:column="71">==</op:operator> <name pos:line="165" pos:column="74">table</name></expr></argument>)</argument_list></call><op:operator pos:line="165" pos:column="80">.</op:operator><call><name pos:line="165" pos:column="81">Select</name><argument_list pos:line="165" pos:column="87">(<argument><expr><name pos:line="165" pos:column="88">pk</name> <op:operator pos:line="165" pos:column="91">=&gt;</op:operator> <name><name pos:line="165" pos:column="94">pk</name><op:operator pos:line="165" pos:column="96">.</op:operator><name pos:line="165" pos:column="97">KeyName</name></name></expr></argument>)</argument_list></call><op:operator pos:line="165" pos:column="105">.</op:operator><call><name pos:line="165" pos:column="106">Distinct</name><argument_list pos:line="165" pos:column="114">()</argument_list></call><op:operator pos:line="165" pos:column="116">.</op:operator><call><name pos:line="165" pos:column="117">ToList</name><argument_list pos:line="165" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <foreach pos:line="166" pos:column="21">foreach (<init><decl><type><name pos:line="166" pos:column="30">var</name></type> <name pos:line="166" pos:column="34">pk</name> <init pos:line="166" pos:column="37">in <expr><name pos:line="166" pos:column="40">allPks</name></expr></init></decl></init>)
                    <block pos:line="167" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="168" pos:column="25">var</name></type> <name pos:line="168" pos:column="29">p</name> =<init pos:line="168" pos:column="32"> <expr><call><name><name pos:line="168" pos:column="33">e</name><op:operator pos:line="168" pos:column="34">.</op:operator><name pos:line="168" pos:column="35">AppendChild</name></name><argument_list pos:line="168" pos:column="46">(<argument><expr><call><name><name pos:line="168" pos:column="47">parent</name><op:operator pos:line="168" pos:column="53">.</op:operator><name pos:line="168" pos:column="54">OwnerDocument</name><op:operator pos:line="168" pos:column="67">.</op:operator><name pos:line="168" pos:column="68">CreateElement</name></name><argument_list pos:line="168" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="168" pos:column="82">"object"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="168" pos:column="93">as</op:operator> <name pos:line="168" pos:column="96">XmlElement</name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name pos:line="169" pos:column="25">p</name><op:operator pos:line="169" pos:column="26">.</op:operator><name pos:line="169" pos:column="27">SetAttribute</name></name><argument_list pos:line="169" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="169" pos:column="40">"id"</lit:literal></expr></argument><op:operator pos:line="169" pos:column="44">,</op:operator> <argument><expr><name pos:line="169" pos:column="46">pk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="170" pos:column="25">p</name><op:operator pos:line="170" pos:column="26">.</op:operator><name pos:line="170" pos:column="27">SetAttribute</name></name><argument_list pos:line="170" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="40">"schema"</lit:literal></expr></argument><op:operator pos:line="170" pos:column="48">,</op:operator> <argument><expr><lit:literal type="string" pos:line="170" pos:column="50">"SqlCe"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="171" pos:column="25">p</name><op:operator pos:line="171" pos:column="26">.</op:operator><name pos:line="171" pos:column="27">SetAttribute</name></name><argument_list pos:line="171" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="171" pos:column="40">"name"</lit:literal></expr></argument><op:operator pos:line="171" pos:column="46">,</op:operator> <argument><expr><name pos:line="171" pos:column="48">pk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="172" pos:column="25">p</name><op:operator pos:line="172" pos:column="26">.</op:operator><name pos:line="172" pos:column="27">SetAttribute</name></name><argument_list pos:line="172" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="172" pos:column="40">"type"</lit:literal></expr></argument><op:operator pos:line="172" pos:column="46">,</op:operator> <argument><expr><lit:literal type="string" pos:line="172" pos:column="48">"PRIMARY_KEY_CONSTRAINT"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="173" pos:column="25">p</name><op:operator pos:line="173" pos:column="26">.</op:operator><name pos:line="173" pos:column="27">SetAttribute</name></name><argument_list pos:line="173" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="173" pos:column="40">"dateCreated"</lit:literal></expr></argument><op:operator pos:line="173" pos:column="53">,</op:operator> <argument><expr><call><name><name pos:line="173" pos:column="55">XmlConvert</name><op:operator pos:line="173" pos:column="65">.</op:operator><name pos:line="173" pos:column="66">ToString</name></name><argument_list pos:line="173" pos:column="74">(<argument><expr><name><name pos:line="173" pos:column="75">DateTime</name><op:operator pos:line="173" pos:column="83">.</op:operator><name pos:line="173" pos:column="84">Now</name></name></expr></argument><op:operator pos:line="173" pos:column="87">,</op:operator> <argument><expr><name><name pos:line="173" pos:column="89">XmlDateTimeSerializationMode</name><op:operator pos:line="173" pos:column="117">.</op:operator><name pos:line="173" pos:column="118">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="174" pos:column="25">p</name><op:operator pos:line="174" pos:column="26">.</op:operator><name pos:line="174" pos:column="27">SetAttribute</name></name><argument_list pos:line="174" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="40">"dateModified"</lit:literal></expr></argument><op:operator pos:line="174" pos:column="54">,</op:operator> <argument><expr><call><name><name pos:line="174" pos:column="56">XmlConvert</name><op:operator pos:line="174" pos:column="66">.</op:operator><name pos:line="174" pos:column="67">ToString</name></name><argument_list pos:line="174" pos:column="75">(<argument><expr><name><name pos:line="174" pos:column="76">DateTime</name><op:operator pos:line="174" pos:column="84">.</op:operator><name pos:line="174" pos:column="85">Now</name></name></expr></argument><op:operator pos:line="174" pos:column="88">,</op:operator> <argument><expr><name><name pos:line="174" pos:column="90">XmlDateTimeSerializationMode</name><op:operator pos:line="174" pos:column="118">.</op:operator><name pos:line="174" pos:column="119">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></foreach>

                    <foreach pos:line="177" pos:column="21">foreach (<init><decl><type><name pos:line="177" pos:column="30">var</name></type> <name pos:line="177" pos:column="34">fk</name> <init pos:line="177" pos:column="37">in <expr><name pos:line="177" pos:column="40">foreignKeys</name></expr></init></decl></init>)
                    <block pos:line="178" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="179" pos:column="25">var</name></type> <name pos:line="179" pos:column="29">f</name> =<init pos:line="179" pos:column="32"> <expr><call><name><name pos:line="179" pos:column="33">e</name><op:operator pos:line="179" pos:column="34">.</op:operator><name pos:line="179" pos:column="35">AppendChild</name></name><argument_list pos:line="179" pos:column="46">(<argument><expr><call><name><name pos:line="179" pos:column="47">parent</name><op:operator pos:line="179" pos:column="53">.</op:operator><name pos:line="179" pos:column="54">OwnerDocument</name><op:operator pos:line="179" pos:column="67">.</op:operator><name pos:line="179" pos:column="68">CreateElement</name></name><argument_list pos:line="179" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="179" pos:column="82">"object"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="179" pos:column="93">as</op:operator> <name pos:line="179" pos:column="96">XmlElement</name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name pos:line="180" pos:column="25">f</name><op:operator pos:line="180" pos:column="26">.</op:operator><name pos:line="180" pos:column="27">SetAttribute</name></name><argument_list pos:line="180" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="180" pos:column="40">"id"</lit:literal></expr></argument><op:operator pos:line="180" pos:column="44">,</op:operator> <argument><expr><name><name pos:line="180" pos:column="46">fk</name><op:operator pos:line="180" pos:column="48">.</op:operator><name pos:line="180" pos:column="49">ConstraintName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="181" pos:column="25">f</name><op:operator pos:line="181" pos:column="26">.</op:operator><name pos:line="181" pos:column="27">SetAttribute</name></name><argument_list pos:line="181" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="181" pos:column="40">"schema"</lit:literal></expr></argument><op:operator pos:line="181" pos:column="48">,</op:operator> <argument><expr><lit:literal type="string" pos:line="181" pos:column="50">"SqlCe"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="182" pos:column="25">f</name><op:operator pos:line="182" pos:column="26">.</op:operator><name pos:line="182" pos:column="27">SetAttribute</name></name><argument_list pos:line="182" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="40">"name"</lit:literal></expr></argument><op:operator pos:line="182" pos:column="46">,</op:operator> <argument><expr><name><name pos:line="182" pos:column="48">fk</name><op:operator pos:line="182" pos:column="50">.</op:operator><name pos:line="182" pos:column="51">ConstraintName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="183" pos:column="25">f</name><op:operator pos:line="183" pos:column="26">.</op:operator><name pos:line="183" pos:column="27">SetAttribute</name></name><argument_list pos:line="183" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="183" pos:column="40">"type"</lit:literal></expr></argument><op:operator pos:line="183" pos:column="46">,</op:operator> <argument><expr><lit:literal type="string" pos:line="183" pos:column="48">"FOREIGN_KEY_CONSTRAINT"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="184" pos:column="25">f</name><op:operator pos:line="184" pos:column="26">.</op:operator><name pos:line="184" pos:column="27">SetAttribute</name></name><argument_list pos:line="184" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="40">"dateCreated"</lit:literal></expr></argument><op:operator pos:line="184" pos:column="53">,</op:operator> <argument><expr><call><name><name pos:line="184" pos:column="55">XmlConvert</name><op:operator pos:line="184" pos:column="65">.</op:operator><name pos:line="184" pos:column="66">ToString</name></name><argument_list pos:line="184" pos:column="74">(<argument><expr><name><name pos:line="184" pos:column="75">DateTime</name><op:operator pos:line="184" pos:column="83">.</op:operator><name pos:line="184" pos:column="84">Now</name></name></expr></argument><op:operator pos:line="184" pos:column="87">,</op:operator> <argument><expr><name><name pos:line="184" pos:column="89">XmlDateTimeSerializationMode</name><op:operator pos:line="184" pos:column="117">.</op:operator><name pos:line="184" pos:column="118">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="185" pos:column="25">f</name><op:operator pos:line="185" pos:column="26">.</op:operator><name pos:line="185" pos:column="27">SetAttribute</name></name><argument_list pos:line="185" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="40">"dateModified"</lit:literal></expr></argument><op:operator pos:line="185" pos:column="54">,</op:operator> <argument><expr><call><name><name pos:line="185" pos:column="56">XmlConvert</name><op:operator pos:line="185" pos:column="66">.</op:operator><name pos:line="185" pos:column="67">ToString</name></name><argument_list pos:line="185" pos:column="75">(<argument><expr><name><name pos:line="185" pos:column="76">DateTime</name><op:operator pos:line="185" pos:column="84">.</op:operator><name pos:line="185" pos:column="85">Now</name></name></expr></argument><op:operator pos:line="185" pos:column="88">,</op:operator> <argument><expr><name><name pos:line="185" pos:column="90">XmlDateTimeSerializationMode</name><op:operator pos:line="185" pos:column="118">.</op:operator><name pos:line="185" pos:column="119">RoundtripKind</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></foreach>
                }</block></foreach>
            }</block></function>

            <if pos:line="190" pos:column="13">if <condition pos:line="190" pos:column="16">(<expr><call><name><name pos:line="190" pos:column="17">format</name><op:operator pos:line="190" pos:column="23">.</op:operator><name pos:line="190" pos:column="24">Equals</name></name><argument_list pos:line="190" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="190" pos:column="31">"xml"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="190" pos:column="38">
            <block pos:line="191" pos:column="13">{
                <comment type="line" pos:line="192" pos:column="17">// Save raw XML</comment>
                <expr_stmt><expr><call><name><name pos:line="193" pos:column="17">doc</name><op:operator pos:line="193" pos:column="20">.</op:operator><name pos:line="193" pos:column="21">Save</name></name><argument_list pos:line="193" pos:column="25">(<argument><expr><name pos:line="193" pos:column="26">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="194" pos:column="17">return;</return>
            }</block></then></if>

            <comment type="line" pos:line="197" pos:column="13">// Read XSL template code</comment>
            <decl_stmt><decl><type><name pos:line="198" pos:column="13">string</name></type> <name pos:line="198" pos:column="20">xslt</name></decl>;</decl_stmt>
            <if pos:line="199" pos:column="13">if <condition pos:line="199" pos:column="16">(<expr><call><name><name pos:line="199" pos:column="17">format</name><op:operator pos:line="199" pos:column="23">.</op:operator><name pos:line="199" pos:column="24">Equals</name></name><argument_list pos:line="199" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="31">"html"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="199" pos:column="39">
            <block pos:line="200" pos:column="13">{
                <expr_stmt><expr><name pos:line="201" pos:column="17">xslt</name> <op:operator pos:line="201" pos:column="22">=</op:operator> <name><name pos:line="201" pos:column="24">Resources</name><op:operator pos:line="201" pos:column="33">.</op:operator><name pos:line="201" pos:column="34">Html</name></name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="203" pos:column="13">else
            <block pos:line="204" pos:column="13">{
                <expr_stmt><expr><name pos:line="205" pos:column="17">xslt</name> <op:operator pos:line="205" pos:column="22">=</op:operator> <name><name pos:line="205" pos:column="24">Resources</name><op:operator pos:line="205" pos:column="33">.</op:operator><name pos:line="205" pos:column="34">WikiPlex</name></name></expr>;</expr_stmt>
            }</block></else></if>

            <comment type="line" pos:line="208" pos:column="13">// Prepare XSL transformation</comment>
            <using pos:line="209" pos:column="13">using (var sr = <type><specifier pos:line="209" pos:column="29">new</specifier></type> <name pos:line="209" pos:column="33">StringReader</name><parameter_list pos:line="209" pos:column="45">(<param><decl><type><name pos:line="209" pos:column="46">xslt</name></type></decl></param>)</parameter_list></using>)</block>
            <using pos:line="210" pos:column="13">using (var xr = <name><name pos:line="210" pos:column="29">XmlReader</name><op:operator pos:line="210" pos:column="38">.</op:operator><name pos:line="210" pos:column="39">Create</name></name><parameter_list pos:line="210" pos:column="45">(<param><decl><type><name pos:line="210" pos:column="46">sr</name></type></decl></param>)</parameter_list></using></class>)</block>
            <block pos:line="211" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="212" pos:column="17">var</name></type> <name pos:line="212" pos:column="21">tran</name> =<init pos:line="212" pos:column="27"> <expr><op:operator pos:line="212" pos:column="28">new</op:operator> <call><name pos:line="212" pos:column="32">XslCompiledTransform</name><argument_list pos:line="212" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="213" pos:column="17">tran</name><op:operator pos:line="213" pos:column="21">.</op:operator><name pos:line="213" pos:column="22">Load</name></name><argument_list pos:line="213" pos:column="26">(<argument><expr><name pos:line="213" pos:column="27">xr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <using pos:line="215" pos:column="17">using (var fw = <name><name pos:line="215" pos:column="33">File</name><op:operator pos:line="215" pos:column="37">.</op:operator><name pos:line="215" pos:column="38">CreateText</name></name><parameter_list pos:line="215" pos:column="48">(<param><decl><type><name pos:line="215" pos:column="49">fileName</name></type></decl></param>)</parameter_list></using>)</block>
                <block pos:line="216" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="217" pos:column="21">tran</name><op:operator pos:line="217" pos:column="25">.</op:operator><name pos:line="217" pos:column="26">Transform</name></name><argument_list pos:line="217" pos:column="35">(<argument><expr><name pos:line="217" pos:column="36">doc</name></expr></argument><op:operator pos:line="217" pos:column="39">,</op:operator> <argument><expr><name pos:line="217" pos:column="41">null</name></expr></argument><op:operator pos:line="217" pos:column="45">,</op:operator> <argument><expr><name pos:line="217" pos:column="47">fw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></namespace>
            }
        }

    }
}
</unit>
