<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\temp\TestMethod.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Windows</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Windows</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Forms</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Collections</name><op:operator pos:line="4" pos:column="25">.</op:operator><name pos:line="4" pos:column="26">Generic</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">IO</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Diagnostics</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name pos:line="8" pos:column="11">RobotConfigServe2</name>
<block pos:line="9" pos:column="1">{ 
    <class><specifier pos:line="10" pos:column="5">public</specifier> <specifier pos:line="10" pos:column="12">partial</specifier> class <name pos:line="10" pos:column="26">ConfigManip</name>
    <block pos:line="11" pos:column="5">{       

        <constructor><specifier pos:line="13" pos:column="9">public</specifier> <name pos:line="13" pos:column="16">ConfigManip</name><parameter_list pos:line="13" pos:column="27">(<param><decl><type><name pos:line="13" pos:column="28">string</name></type> <name pos:line="13" pos:column="35">configListFileName</name></decl></param>)</parameter_list>
        <block pos:line="14" pos:column="9">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">configCnt</name> <op:operator pos:line="15" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="15" pos:column="25">0</lit:literal></expr>;</expr_stmt>

            <comment type="line" pos:line="17" pos:column="13">//get the "configWorkspaceRoot"</comment>
	        <decl_stmt><decl><type><name pos:line="18" pos:column="17">int</name></type> <name pos:line="18" pos:column="21">pos</name> =<init pos:line="18" pos:column="26"> <expr><call><name><name pos:line="18" pos:column="27">configListFileName</name><op:operator pos:line="18" pos:column="45">.</op:operator><name pos:line="18" pos:column="46">LastIndexOf</name></name><argument_list pos:line="18" pos:column="57">(<argument><expr><lit:literal type="char" pos:line="18" pos:column="58">'\\'</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	        <expr_stmt><expr><name pos:line="19" pos:column="17">configWorkspaceRoot</name> <op:operator pos:line="19" pos:column="37">=</op:operator> <call><name><name pos:line="19" pos:column="39">configListFileName</name><op:operator pos:line="19" pos:column="57">.</op:operator><name pos:line="19" pos:column="58">Substring</name></name><argument_list pos:line="19" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="19" pos:column="68">0</lit:literal></expr></argument><op:operator pos:line="19" pos:column="69">,</op:operator><argument><expr><name pos:line="19" pos:column="70">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><op:operator pos:line="21" pos:column="17">!</op:operator><call><name><name pos:line="21" pos:column="18">File</name><op:operator pos:line="21" pos:column="22">.</op:operator><name pos:line="21" pos:column="23">Exists</name></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">configListFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="21" pos:column="50">
            <block pos:line="22" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="23" pos:column="17">MessageBox</name><op:operator pos:line="23" pos:column="27">.</op:operator><name pos:line="23" pos:column="28">Show</name></name><argument_list pos:line="23" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="33">"Can't find file "</lit:literal> <op:operator pos:line="23" pos:column="52">+</op:operator> <name pos:line="23" pos:column="54">configListFileName</name></expr></argument><op:operator pos:line="23" pos:column="72">,</op:operator> <argument><expr><lit:literal type="string" pos:line="23" pos:column="74">"ERROR"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="24" pos:column="17">return;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="27" pos:column="13">StreamReader</name></type> <name pos:line="27" pos:column="26">configListFile</name> =<init pos:line="27" pos:column="42"> <expr><op:operator pos:line="27" pos:column="43">new</op:operator> <call><name pos:line="27" pos:column="47">StreamReader</name><argument_list pos:line="27" pos:column="59">(<argument><expr><name pos:line="27" pos:column="60">configListFileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <block pos:line="28" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="29" pos:column="17">string</name></type> <name pos:line="29" pos:column="24">line</name></decl>;</decl_stmt>
	            <comment type="line" pos:line="30" pos:column="21">//read through the configListFile</comment>
                <while pos:line="31" pos:column="17">while<condition pos:line="31" pos:column="22">(<expr><op:operator pos:line="31" pos:column="23">(</op:operator><name pos:line="31" pos:column="24">line</name> <op:operator pos:line="31" pos:column="29">=</op:operator> <call><name><name pos:line="31" pos:column="31">configListFile</name><op:operator pos:line="31" pos:column="45">.</op:operator><name pos:line="31" pos:column="46">ReadLine</name></name><argument_list pos:line="31" pos:column="54">()</argument_list></call><op:operator pos:line="31" pos:column="56">)</op:operator> <op:operator pos:line="31" pos:column="58">!=</op:operator> <name pos:line="31" pos:column="61">null</name></expr>)</condition>
                <block pos:line="32" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="33" pos:column="21">string</name></type> <name pos:line="33" pos:column="28">configuration</name> =<init pos:line="33" pos:column="43"> <expr><name pos:line="33" pos:column="44">line</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="34" pos:column="21">configList</name><op:operator pos:line="34" pos:column="31">.</op:operator><name pos:line="34" pos:column="32">Add</name></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">configuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="35" pos:column="21">configCnt</name><op:operator pos:line="35" pos:column="30">++</op:operator></expr>;</expr_stmt>
                }</block></while>	            

	            <expr_stmt><expr><call><name><name pos:line="38" pos:column="21">configListFile</name><op:operator pos:line="38" pos:column="35">.</op:operator><name pos:line="38" pos:column="36">Close</name></name><argument_list pos:line="38" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
            }</block>
        }</block></constructor>

        <cpp:region pos:line="42" pos:column="9">#<cpp:directive pos:line="42" pos:column="10">region</cpp:directive> class members definition</cpp:region>
        <decl_stmt><decl><type><specifier pos:line="43" pos:column="9">private</specifier> <name pos:line="43" pos:column="17">string</name></type> <name pos:line="43" pos:column="24">configWorkspaceRoot</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <name><name pos:line="44" pos:column="17">List</name><argument_list pos:line="44" pos:column="21">&lt;<argument><name pos:line="44" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="44" pos:column="30">configList</name> =<init pos:line="44" pos:column="42"> <expr><op:operator pos:line="44" pos:column="43">new</op:operator> <call><name><name pos:line="44" pos:column="47">List</name><argument_list pos:line="44" pos:column="51">&lt;<argument><name pos:line="44" pos:column="52">string</name></argument>&gt;</argument_list></name><argument_list pos:line="44" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">private</specifier> <name><name pos:line="45" pos:column="17">List</name><argument_list pos:line="45" pos:column="21">&lt;<argument><name pos:line="45" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="45" pos:column="30">configSelect</name> =<init pos:line="45" pos:column="44"> <expr><op:operator pos:line="45" pos:column="45">new</op:operator> <call><name><name pos:line="45" pos:column="49">List</name><argument_list pos:line="45" pos:column="53">&lt;<argument><name pos:line="45" pos:column="54">string</name></argument>&gt;</argument_list></name><argument_list pos:line="45" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">private</specifier> <name><name pos:line="46" pos:column="17">List</name><argument_list pos:line="46" pos:column="21">&lt;<argument><name pos:line="46" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="46" pos:column="30">files_in_build</name> =<init pos:line="46" pos:column="46"> <expr><op:operator pos:line="46" pos:column="47">new</op:operator> <call><name><name pos:line="46" pos:column="51">List</name><argument_list pos:line="46" pos:column="55">&lt;<argument><name pos:line="46" pos:column="56">string</name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="47" pos:column="9">private</specifier> <name><name pos:line="47" pos:column="17">List</name><argument_list pos:line="47" pos:column="21">&lt;<argument><name pos:line="47" pos:column="22">int</name></argument>&gt;</argument_list></name></type> <name pos:line="47" pos:column="27">allSelections</name> =<init pos:line="47" pos:column="42"> <expr><op:operator pos:line="47" pos:column="43">new</op:operator> <call><name><name pos:line="47" pos:column="47">List</name><argument_list pos:line="47" pos:column="51">&lt;<argument><name pos:line="47" pos:column="52">int</name></argument>&gt;</argument_list></name><argument_list pos:line="47" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <name pos:line="48" pos:column="17">uint</name></type> <name pos:line="48" pos:column="22">configCnt</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">private</specifier> <name><name pos:line="50" pos:column="17">List</name><argument_list pos:line="50" pos:column="21">&lt;<argument><name pos:line="50" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="30">fileImpacted</name> =<init pos:line="50" pos:column="44"> <expr><op:operator pos:line="50" pos:column="45">new</op:operator> <call><name><name pos:line="50" pos:column="49">List</name><argument_list pos:line="50" pos:column="53">&lt;<argument><name pos:line="50" pos:column="54">string</name></argument>&gt;</argument_list></name><argument_list pos:line="50" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="51" pos:column="9">private</specifier> <name><name pos:line="51" pos:column="17">List</name><argument_list pos:line="51" pos:column="21">&lt;<argument><name pos:line="51" pos:column="22">int</name></argument>&gt;</argument_list></name></type> <name pos:line="51" pos:column="27">lineCntImpactedPerFile</name> =<init pos:line="51" pos:column="51"> <expr><op:operator pos:line="51" pos:column="52">new</op:operator> <call><name><name pos:line="51" pos:column="56">List</name><argument_list pos:line="51" pos:column="60">&lt;<argument><name pos:line="51" pos:column="61">int</name></argument>&gt;</argument_list></name><argument_list pos:line="51" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="53" pos:column="9">private</specifier> <name><name pos:line="53" pos:column="17">List</name><argument_list pos:line="53" pos:column="21">&lt;<argument><name pos:line="53" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="30">funcImpacted</name> =<init pos:line="53" pos:column="44"> <expr><op:operator pos:line="53" pos:column="45">new</op:operator> <call><name><name pos:line="53" pos:column="49">List</name><argument_list pos:line="53" pos:column="53">&lt;<argument><name pos:line="53" pos:column="54">string</name></argument>&gt;</argument_list></name><argument_list pos:line="53" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">private</specifier> <name><name pos:line="54" pos:column="17">List</name><argument_list pos:line="54" pos:column="21">&lt;<argument><name pos:line="54" pos:column="22">int</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="27">lineCntImpactedPerFunc</name> =<init pos:line="54" pos:column="51"> <expr><op:operator pos:line="54" pos:column="52">new</op:operator> <call><name><name pos:line="54" pos:column="56">List</name><argument_list pos:line="54" pos:column="60">&lt;<argument><name pos:line="54" pos:column="61">int</name></argument>&gt;</argument_list></name><argument_list pos:line="54" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">string</name></type> <name pos:line="56" pos:column="24">code_change_imp_file</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="57" pos:column="9">private</specifier> <name><name pos:line="57" pos:column="17">List</name><argument_list pos:line="57" pos:column="21">&lt;<argument><name pos:line="57" pos:column="22">int</name></argument>&gt;</argument_list></name></type> <name pos:line="57" pos:column="27">configIndexImpacted</name> =<init pos:line="57" pos:column="48"> <expr><op:operator pos:line="57" pos:column="49">new</op:operator> <call><name><name pos:line="57" pos:column="53">List</name><argument_list pos:line="57" pos:column="57">&lt;<argument><name pos:line="57" pos:column="58">int</name></argument>&gt;</argument_list></name><argument_list pos:line="57" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="58" pos:column="9">private</specifier> <name><name pos:line="58" pos:column="17">List</name><argument_list pos:line="58" pos:column="21">&lt;<argument><name pos:line="58" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="58" pos:column="30">configImpacted</name> =<init pos:line="58" pos:column="46"> <expr><op:operator pos:line="58" pos:column="47">new</op:operator> <call><name><name pos:line="58" pos:column="51">List</name><argument_list pos:line="58" pos:column="55">&lt;<argument><name pos:line="58" pos:column="56">string</name></argument>&gt;</argument_list></name><argument_list pos:line="58" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <cpp:endregion pos:line="59" pos:column="9">#<cpp:directive pos:line="59" pos:column="10">endregion</cpp:directive></cpp:endregion>             

    }</block></class>

}</block></namespace>








</unit>
