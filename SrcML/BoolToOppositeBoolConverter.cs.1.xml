<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\View\Search\Converters\BoolToOppositeBoolConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Globalization</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Windows</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Data</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Sando</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">UI</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">View</name><op:operator pos:line="5" pos:column="24">.</op:operator><name pos:line="5" pos:column="25">Search</name><op:operator pos:line="5" pos:column="31">.</op:operator><name pos:line="5" pos:column="32">Converters</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">BoolToOppositeBoolConverter</name> <super pos:line="7" pos:column="46">: <name pos:line="7" pos:column="48">IValueConverter</name></super>
    <block pos:line="8" pos:column="5">{
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">object</name></type> <name pos:line="9" pos:column="23">Convert</name><parameter_list pos:line="9" pos:column="30">(<param><decl><type><name pos:line="9" pos:column="31">object</name></type> <name pos:line="9" pos:column="38">value</name></decl></param><op:operator pos:line="9" pos:column="43">,</op:operator> <param><decl><type><name pos:line="9" pos:column="45">Type</name></type> <name pos:line="9" pos:column="50">targetType</name></decl></param><op:operator pos:line="9" pos:column="60">,</op:operator> <param><decl><type><name pos:line="9" pos:column="62">object</name></type> <name pos:line="9" pos:column="69">parameter</name></decl></param><op:operator pos:line="9" pos:column="78">,</op:operator> <param><decl><type><name pos:line="9" pos:column="80">CultureInfo</name></type> <name pos:line="9" pos:column="92">culture</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><name pos:line="11" pos:column="17">targetType</name> <op:operator pos:line="11" pos:column="28">!=</op:operator> <call><name pos:line="11" pos:column="31">typeof</name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">bool</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="11" pos:column="44">
                <throw pos:line="12" pos:column="17">throw <expr><op:operator pos:line="12" pos:column="23">new</op:operator> <call><name pos:line="12" pos:column="27">InvalidOperationException</name><argument_list pos:line="12" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="12" pos:column="53">"The target must be a boolean"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

            <return pos:line="14" pos:column="13">return <expr><op:operator pos:line="14" pos:column="20">!</op:operator><op:operator pos:line="14" pos:column="21">(</op:operator><name pos:line="14" pos:column="22">bool</name><op:operator pos:line="14" pos:column="26">)</op:operator><name pos:line="14" pos:column="27">value</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">object</name></type> <name pos:line="17" pos:column="23">ConvertBack</name><parameter_list pos:line="17" pos:column="34">(<param><decl><type><name pos:line="17" pos:column="35">object</name></type> <name pos:line="17" pos:column="42">value</name></decl></param><op:operator pos:line="17" pos:column="47">,</op:operator> <param><decl><type><name pos:line="17" pos:column="49">Type</name></type> <name pos:line="17" pos:column="54">targetType</name></decl></param><op:operator pos:line="17" pos:column="64">,</op:operator> <param><decl><type><name pos:line="17" pos:column="66">object</name></type> <name pos:line="17" pos:column="73">parameter</name></decl></param><op:operator pos:line="17" pos:column="82">,</op:operator> <param><decl><type><name pos:line="17" pos:column="84">CultureInfo</name></type> <name pos:line="17" pos:column="96">culture</name></decl></param>)</parameter_list>
        <block pos:line="18" pos:column="9">{
            <throw pos:line="19" pos:column="13">throw <expr><op:operator pos:line="19" pos:column="19">new</op:operator> <call><name pos:line="19" pos:column="23">NotSupportedException</name><argument_list pos:line="19" pos:column="44">()</argument_list></call></expr>;</throw>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
