<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Search Engine\SearchEngine.UnitTests\CodeSearcherFixture.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Lucene</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Net</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Analysis</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">NUnit</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Framework</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Core</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">ExtensionContracts</name><op:operator pos:line="8" pos:column="31">.</op:operator><name pos:line="8" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">ExtensionContracts</name><op:operator pos:line="9" pos:column="31">.</op:operator><name pos:line="9" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">Indexer</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Indexer</name><op:operator pos:line="11" pos:column="20">.</op:operator><name pos:line="11" pos:column="21">Documents</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">Indexer</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">Searching</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">UnitTestHelpers</name></name>;</using>
<using pos:line="14" pos:column="1">using <name pos:line="14" pos:column="7">UnitTestHelpers</name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">ABB</name><op:operator pos:line="15" pos:column="10">.</op:operator><name pos:line="15" pos:column="11">SrcML</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">VisualStudio</name><op:operator pos:line="15" pos:column="29">.</op:operator><name pos:line="15" pos:column="30">SolutionMonitor</name></name>;</using>

<namespace pos:line="17" pos:column="1">namespace <name><name pos:line="17" pos:column="11">Sando</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">SearchEngine</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">UnitTests</name></name>
<block pos:line="18" pos:column="1">{

    <class><attribute pos:line="20" pos:column="5">[<expr><name pos:line="20" pos:column="6">TestFixture</name></expr>]</attribute>
    <specifier pos:line="21" pos:column="5">public</specifier> class <name pos:line="21" pos:column="18">CodeSearcherFixture</name>
    <block pos:line="22" pos:column="5">{
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">private</specifier> <name pos:line="23" pos:column="25">DocumentIndexer</name></type> <name pos:line="23" pos:column="41">_indexer</name></decl>;</decl_stmt>
    	<decl_stmt><decl><type><specifier pos:line="24" pos:column="9">private</specifier> <name pos:line="24" pos:column="17">string</name></type> <name pos:line="24" pos:column="24">_indexerPath</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="25" pos:column="17">private</specifier> <name pos:line="25" pos:column="25">SolutionKey</name></type> <name pos:line="25" pos:column="37">_solutionKey</name></decl>;</decl_stmt>


    	<function><type><attribute pos:line="28" pos:column="9">[<expr><name pos:line="28" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="29" pos:column="9">public</specifier> <name pos:line="29" pos:column="16">void</name></type> <name pos:line="29" pos:column="21">TestCreateCodeSearcher</name><parameter_list pos:line="29" pos:column="43">()</parameter_list>
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">DoesNotThrow</name></name><argument_list pos:line="31" pos:column="32">(<argument><expr><op:operator pos:line="31" pos:column="33">(</op:operator><op:operator pos:line="31" pos:column="34">)</op:operator> <op:operator pos:line="31" pos:column="36">=&gt;</op:operator> <op:operator pos:line="31" pos:column="39">new</op:operator> <call><name pos:line="31" pos:column="43">CodeSearcher</name><argument_list pos:line="31" pos:column="55">( <argument><expr><name pos:line="31" pos:column="57">null</name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>            
        }</block></function>

        <function><type><attribute pos:line="34" pos:column="9">[<expr><name pos:line="34" pos:column="10">Test</name></expr>]</attribute>     
        <specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">void</name></type> <name pos:line="35" pos:column="21">PerformBasicSearch</name><parameter_list pos:line="35" pos:column="39">()</parameter_list>
        <block pos:line="36" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">var</name></type> <name pos:line="37" pos:column="29">indexerSearcher</name> =<init pos:line="37" pos:column="46"> <expr><op:operator pos:line="37" pos:column="47">new</op:operator> <call><name pos:line="37" pos:column="51">IndexerSearcher</name><argument_list pos:line="37" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
        	<decl_stmt><decl><type><name pos:line="38" pos:column="17">CodeSearcher</name></type> <name pos:line="38" pos:column="30">cs</name> =<init pos:line="38" pos:column="34"> <expr><op:operator pos:line="38" pos:column="35">new</op:operator> <call><name pos:line="38" pos:column="39">CodeSearcher</name><argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">indexerSearcher</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>            
            <decl_stmt><decl><type><name><name pos:line="39" pos:column="13">List</name><argument_list pos:line="39" pos:column="17">&lt;<argument><name pos:line="39" pos:column="18">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="39" pos:column="36">result</name> =<init pos:line="39" pos:column="44"> <expr><call><name><name pos:line="39" pos:column="45">cs</name><op:operator pos:line="39" pos:column="47">.</op:operator><name pos:line="39" pos:column="48">Search</name></name><argument_list pos:line="39" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="55">"SimpleName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Assert</name><op:operator pos:line="40" pos:column="19">.</op:operator><name pos:line="40" pos:column="20">True</name></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">result</name><op:operator pos:line="40" pos:column="31">.</op:operator><name pos:line="40" pos:column="32">Count</name></name> <op:operator pos:line="40" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="40" pos:column="40">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                                 
        }</block></function>

		<function><type><attribute pos:line="43" pos:column="17">[<expr><name pos:line="43" pos:column="18">TestFixtureSetUp</name></expr>]</attribute>
    	<specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">void</name></type> <name pos:line="44" pos:column="21">CreateIndexer</name><parameter_list pos:line="44" pos:column="34">()</parameter_list>
		<block pos:line="45" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="46" pos:column="25">TestUtils</name><op:operator pos:line="46" pos:column="34">.</op:operator><name pos:line="46" pos:column="35">InitializeDefaultExtensionPoints</name></name><argument_list pos:line="46" pos:column="67">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="48" pos:column="25">_indexerPath</name> <op:operator pos:line="48" pos:column="38">=</op:operator> <call><name><name pos:line="48" pos:column="40">Path</name><op:operator pos:line="48" pos:column="44">.</op:operator><name pos:line="48" pos:column="45">GetTempPath</name></name><argument_list pos:line="48" pos:column="56">()</argument_list></call> <op:operator pos:line="48" pos:column="59">+</op:operator> <lit:literal type="string" pos:line="48" pos:column="61">"luceneindexer"</lit:literal></expr>;</expr_stmt>
		    <expr_stmt><expr><call><name><name pos:line="49" pos:column="21">Directory</name><op:operator pos:line="49" pos:column="30">.</op:operator><name pos:line="49" pos:column="31">CreateDirectory</name></name><argument_list pos:line="49" pos:column="46">(<argument><expr><name pos:line="49" pos:column="47">_indexerPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">_solutionKey</name> <op:operator pos:line="50" pos:column="38">=</op:operator> <op:operator pos:line="50" pos:column="40">new</op:operator> <call><name pos:line="50" pos:column="44">SolutionKey</name><argument_list pos:line="50" pos:column="55">(<argument><expr><call><name><name pos:line="50" pos:column="56">Guid</name><op:operator pos:line="50" pos:column="60">.</op:operator><name pos:line="50" pos:column="61">NewGuid</name></name><argument_list pos:line="50" pos:column="68">()</argument_list></call></expr></argument><op:operator pos:line="50" pos:column="70">,</op:operator> <argument><expr><lit:literal type="string" pos:line="50" pos:column="72">"C:/SolutionPath"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">ServiceLocator</name><op:operator pos:line="51" pos:column="27">.</op:operator><name pos:line="51" pos:column="28">RegisterInstance</name></name><argument_list pos:line="51" pos:column="44">(<argument><expr><name pos:line="51" pos:column="45">_solutionKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">ServiceLocator</name><op:operator pos:line="52" pos:column="27">.</op:operator><name><name pos:line="52" pos:column="28">RegisterInstance</name><argument_list pos:line="52" pos:column="44">&lt;<argument><name pos:line="52" pos:column="45">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="52" pos:column="54">(<argument><expr><op:operator pos:line="52" pos:column="55">new</op:operator> <call><name pos:line="52" pos:column="59">SimpleAnalyzer</name><argument_list pos:line="52" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="53" pos:column="13">_indexer</name> <op:operator pos:line="53" pos:column="22">=</op:operator> <op:operator pos:line="53" pos:column="24">new</op:operator> <call><name pos:line="53" pos:column="28">DocumentIndexer</name><argument_list pos:line="53" pos:column="43">(<argument><expr><call><name><name pos:line="53" pos:column="44">TimeSpan</name><op:operator pos:line="53" pos:column="52">.</op:operator><name pos:line="53" pos:column="53">FromSeconds</name></name><argument_list pos:line="53" pos:column="64">(<argument><expr><lit:literal type="number" pos:line="53" pos:column="65">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">ServiceLocator</name><op:operator pos:line="54" pos:column="27">.</op:operator><name pos:line="54" pos:column="28">RegisterInstance</name></name><argument_list pos:line="54" pos:column="44">(<argument><expr><name pos:line="54" pos:column="45">_indexer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    		<decl_stmt><decl><type><name pos:line="56" pos:column="17">ClassElement</name></type> <name pos:line="56" pos:column="30">classElement</name> =<init pos:line="56" pos:column="44"> <expr><call><name><name pos:line="56" pos:column="45">SampleProgramElementFactory</name><op:operator pos:line="56" pos:column="72">.</op:operator><name pos:line="56" pos:column="73">GetSampleClassElement</name></name><argument_list pos:line="56" pos:column="94">(
				<argument><expr><name pos:line="57" pos:column="33">accessLevel</name><op:operator pos:line="57" pos:column="44">:</op:operator> <name><name pos:line="57" pos:column="46">AccessLevel</name><op:operator pos:line="57" pos:column="57">.</op:operator><name pos:line="57" pos:column="58">Public</name></name></expr></argument><op:operator pos:line="57" pos:column="64">,</op:operator>
				<argument><expr><name pos:line="58" pos:column="33">definitionLineNumber</name><op:operator pos:line="58" pos:column="53">:</op:operator> <lit:literal type="number" pos:line="58" pos:column="55">11</lit:literal></expr></argument><op:operator pos:line="58" pos:column="57">,</op:operator>
				<argument><expr><name pos:line="59" pos:column="33">extendedClasses</name><op:operator pos:line="59" pos:column="48">:</op:operator> <lit:literal type="string" pos:line="59" pos:column="50">"SimpleClassBase"</lit:literal></expr></argument><op:operator pos:line="59" pos:column="67">,</op:operator>
				<argument><expr><name pos:line="60" pos:column="33">fullFilePath</name><op:operator pos:line="60" pos:column="45">:</op:operator> <lit:literal type="string" pos:line="60" pos:column="47">"C:/Projects/SimpleClass.cs"</lit:literal></expr></argument><op:operator pos:line="60" pos:column="75">,</op:operator>
				<argument><expr><name pos:line="61" pos:column="33">implementedInterfaces</name><op:operator pos:line="61" pos:column="54">:</op:operator> <lit:literal type="string" pos:line="61" pos:column="56">"IDisposable"</lit:literal></expr></argument><op:operator pos:line="61" pos:column="69">,</op:operator>
				<argument><expr><name pos:line="62" pos:column="33">name</name><op:operator pos:line="62" pos:column="37">:</op:operator> <lit:literal type="string" pos:line="62" pos:column="39">"SimpleName"</lit:literal></expr></argument><op:operator pos:line="62" pos:column="51">,</op:operator>
				<argument><expr><name pos:line="63" pos:column="33">namespaceName</name><op:operator pos:line="63" pos:column="46">:</op:operator> <lit:literal type="string" pos:line="63" pos:column="48">"Sanod.Indexer.UnitTests"</lit:literal></expr></argument>
    		)</argument_list></call></expr></init></decl>;</decl_stmt>
    		<decl_stmt><decl><type><name pos:line="65" pos:column="17">SandoDocument</name></type> <name pos:line="65" pos:column="31">sandoDocument</name> =<init pos:line="65" pos:column="46"> <expr><call><name><name pos:line="65" pos:column="47">DocumentFactory</name><op:operator pos:line="65" pos:column="62">.</op:operator><name pos:line="65" pos:column="63">Create</name></name><argument_list pos:line="65" pos:column="69">(<argument><expr><name pos:line="65" pos:column="70">classElement</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    		<expr_stmt><expr><call><name><name pos:line="66" pos:column="17">_indexer</name><op:operator pos:line="66" pos:column="25">.</op:operator><name pos:line="66" pos:column="26">AddDocument</name></name><argument_list pos:line="66" pos:column="37">(<argument><expr><name pos:line="66" pos:column="38">sandoDocument</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="67" pos:column="25">MethodElement</name></type> <name pos:line="67" pos:column="39">methodElement</name> =<init pos:line="67" pos:column="54"> <expr><call><name><name pos:line="67" pos:column="55">SampleProgramElementFactory</name><op:operator pos:line="67" pos:column="82">.</op:operator><name pos:line="67" pos:column="83">GetSampleMethodElement</name></name><argument_list pos:line="67" pos:column="105">(
				<argument><expr><name pos:line="68" pos:column="33">accessLevel</name><op:operator pos:line="68" pos:column="44">:</op:operator> <name><name pos:line="68" pos:column="46">AccessLevel</name><op:operator pos:line="68" pos:column="57">.</op:operator><name pos:line="68" pos:column="58">Protected</name></name></expr></argument><op:operator pos:line="68" pos:column="67">,</op:operator>
    		    <argument><expr><name pos:line="69" pos:column="21">name</name><op:operator pos:line="69" pos:column="25">:</op:operator> <lit:literal type="string" pos:line="69" pos:column="27">"SimpleName"</lit:literal></expr></argument><op:operator pos:line="69" pos:column="39">,</op:operator>
				<argument><expr><name pos:line="70" pos:column="33">returnType</name><op:operator pos:line="70" pos:column="43">:</op:operator> <lit:literal type="string" pos:line="70" pos:column="45">"Void"</lit:literal></expr></argument><op:operator pos:line="70" pos:column="51">,</op:operator>
				<argument><expr><name pos:line="71" pos:column="33">fullFilePath</name><op:operator pos:line="71" pos:column="45">:</op:operator> <lit:literal type="string" pos:line="71" pos:column="47">"C:/stuff"</lit:literal></expr></argument>
			)</argument_list></call></expr></init></decl>;</decl_stmt>
    		<expr_stmt><expr><name pos:line="73" pos:column="17">sandoDocument</name> <op:operator pos:line="73" pos:column="31">=</op:operator> <call><name><name pos:line="73" pos:column="33">DocumentFactory</name><op:operator pos:line="73" pos:column="48">.</op:operator><name pos:line="73" pos:column="49">Create</name></name><argument_list pos:line="73" pos:column="55">(<argument><expr><name pos:line="73" pos:column="56">methodElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    		<expr_stmt><expr><call><name><name pos:line="74" pos:column="17">_indexer</name><op:operator pos:line="74" pos:column="25">.</op:operator><name pos:line="74" pos:column="26">AddDocument</name></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">sandoDocument</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	}</block></function>

		<function><type><attribute pos:line="77" pos:column="17">[<expr><name pos:line="77" pos:column="18">TestFixtureTearDown</name></expr>]</attribute>
    	<specifier pos:line="78" pos:column="9">public</specifier> <name pos:line="78" pos:column="16">void</name></type> <name pos:line="78" pos:column="21">ShutdownIndexer</name><parameter_list pos:line="78" pos:column="36">()</parameter_list>
    	<block pos:line="79" pos:column="9">{
			<expr_stmt><expr><call><name><name pos:line="80" pos:column="25">_indexer</name><op:operator pos:line="80" pos:column="33">.</op:operator><name pos:line="80" pos:column="34">ClearIndex</name></name><argument_list pos:line="80" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="81" pos:column="25">_indexer</name><op:operator pos:line="81" pos:column="33">.</op:operator><name pos:line="81" pos:column="34">Dispose</name></name><argument_list pos:line="81" pos:column="41">(<argument><expr><lit:literal type="boolean" pos:line="81" pos:column="42">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   
    	}</block></function>
    }</block></class>
}</block></namespace>
</unit>
