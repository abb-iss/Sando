<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer.UnitTests\Documents\CustomFieldTest.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Documents</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">NUnit</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Framework</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">ExtensionContracts</name><op:operator pos:line="7" pos:column="31">.</op:operator><name pos:line="7" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Indexer</name><op:operator pos:line="8" pos:column="20">.</op:operator><name pos:line="8" pos:column="21">Documents</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">UnitTestHelpers</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">Indexer</name><op:operator pos:line="10" pos:column="20">.</op:operator><name pos:line="10" pos:column="21">Documents</name><op:operator pos:line="10" pos:column="30">.</op:operator><name pos:line="10" pos:column="31">Converters</name></name>;</using>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">Sando</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">Indexer</name><op:operator pos:line="12" pos:column="24">.</op:operator><name pos:line="12" pos:column="25">UnitTests</name><op:operator pos:line="12" pos:column="34">.</op:operator><name pos:line="12" pos:column="35">Documents</name></name>
<block pos:line="13" pos:column="1">{
    <class><attribute pos:line="14" pos:column="5">[<expr><name pos:line="14" pos:column="6">TestFixture</name></expr>]</attribute>
    <specifier pos:line="15" pos:column="5">public</specifier> class <name pos:line="15" pos:column="18">CustomFieldTest</name>
    <block pos:line="16" pos:column="5">{
        <function><type><attribute pos:line="17" pos:column="9">[<expr><name pos:line="17" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="18" pos:column="9">public</specifier> <name pos:line="18" pos:column="16">void</name></type> <name pos:line="18" pos:column="21">LuceneDocToCustomProgramElementForMethod</name><parameter_list pos:line="18" pos:column="61">()</parameter_list>
        <block pos:line="19" pos:column="9">{
            <comment type="line" pos:line="20" pos:column="13">//test Create  </comment>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">var</name></type> <name pos:line="21" pos:column="17">document</name> =<init pos:line="21" pos:column="27"> <expr><call><name><name pos:line="21" pos:column="28">MyCustomMethodElementForTesting</name><op:operator pos:line="21" pos:column="59">.</op:operator><name pos:line="21" pos:column="60">GetLuceneDocument</name></name><argument_list pos:line="21" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">customProgramElement</name> =<init pos:line="22" pos:column="39"> <expr><call><name><name pos:line="22" pos:column="40">ConverterFromHitToProgramElement</name><op:operator pos:line="22" pos:column="72">.</op:operator><name pos:line="22" pos:column="73">Create</name></name><argument_list pos:line="22" pos:column="79">(<argument><expr><name pos:line="22" pos:column="80">document</name></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="89">.</op:operator><call><name pos:line="22" pos:column="90">Convert</name><argument_list pos:line="22" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">myCustomProgramElementForTesting</name> =<init pos:line="23" pos:column="51"> <expr><name pos:line="23" pos:column="52">customProgramElement</name> <op:operator pos:line="23" pos:column="73">as</op:operator> <name pos:line="23" pos:column="76">MyCustomMethodElementForTesting</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">IsTrue</name></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">myCustomProgramElementForTesting</name> <op:operator pos:line="24" pos:column="60">!=</op:operator> <name pos:line="24" pos:column="63">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Assert</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">IsTrue</name></name><argument_list pos:line="25" pos:column="26">(<argument><expr><call><name><name pos:line="25" pos:column="27">myCustomProgramElementForTesting</name><op:operator pos:line="25" pos:column="59">.</op:operator><name pos:line="25" pos:column="60">Boom</name><op:operator pos:line="25" pos:column="64">.</op:operator><name pos:line="25" pos:column="65">Equals</name></name><argument_list pos:line="25" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="72">"Ba dow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>



        <function><type><attribute pos:line="30" pos:column="9">[<expr><name pos:line="30" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">CustomDocumentToLuceneDocumentForMethod</name><parameter_list pos:line="31" pos:column="60">()</parameter_list>
        <block pos:line="32" pos:column="9">{
            <comment type="line" pos:line="33" pos:column="13">//test AddDocumentFields</comment>
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">customSandoDocument</name> =<init pos:line="34" pos:column="38"> <expr><op:operator pos:line="34" pos:column="39">new</op:operator> <call><name pos:line="34" pos:column="43">MethodDocument</name><argument_list pos:line="34" pos:column="57">(<argument><expr><call><name><name pos:line="34" pos:column="58">MyCustomMethodElementForTesting</name><op:operator pos:line="34" pos:column="89">.</op:operator><name pos:line="34" pos:column="90">GetMethodElement</name></name><argument_list pos:line="34" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">var</name></type> <name pos:line="35" pos:column="17">luceneDocumentWithCustomFields</name> =<init pos:line="35" pos:column="49"> <expr><call><name><name pos:line="35" pos:column="50">customSandoDocument</name><op:operator pos:line="35" pos:column="69">.</op:operator><name pos:line="35" pos:column="70">GetDocument</name></name><argument_list pos:line="35" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Assert</name><op:operator pos:line="36" pos:column="19">.</op:operator><name pos:line="36" pos:column="20">IsTrue</name></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">luceneDocumentWithCustomFields</name> <op:operator pos:line="36" pos:column="58">!=</op:operator> <name pos:line="36" pos:column="61">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">Assert</name><op:operator pos:line="37" pos:column="19">.</op:operator><name pos:line="37" pos:column="20">IsTrue</name></name><argument_list pos:line="37" pos:column="26">(<argument><expr><call><name><name pos:line="37" pos:column="27">luceneDocumentWithCustomFields</name><op:operator pos:line="37" pos:column="57">.</op:operator><name pos:line="37" pos:column="58">GetField</name></name><argument_list pos:line="37" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="67">"Boom"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="37" pos:column="75">!=</op:operator> <name pos:line="37" pos:column="78">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">IsTrue</name></name><argument_list pos:line="38" pos:column="26">(<argument><expr><call><name><name pos:line="38" pos:column="27">luceneDocumentWithCustomFields</name><op:operator pos:line="38" pos:column="57">.</op:operator><name pos:line="38" pos:column="58">GetField</name></name><argument_list pos:line="38" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="67">"Boom"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="74">.</op:operator><call><name pos:line="38" pos:column="75">StringValue</name><argument_list pos:line="38" pos:column="86">()</argument_list></call><op:operator pos:line="38" pos:column="88">.</op:operator><call><name pos:line="38" pos:column="89">Equals</name><argument_list pos:line="38" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="96">"Ba dow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="41" pos:column="9">[<expr><name pos:line="41" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">void</name></type> <name pos:line="42" pos:column="21">LuceneDocToCustomProgramElementForClass</name><parameter_list pos:line="42" pos:column="60">()</parameter_list>
        <block pos:line="43" pos:column="9">{
            <comment type="line" pos:line="44" pos:column="13">//test Create  </comment>
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">var</name></type> <name pos:line="45" pos:column="17">document</name> =<init pos:line="45" pos:column="27"> <expr><call><name><name pos:line="45" pos:column="28">MyCustomClassForTesting</name><op:operator pos:line="45" pos:column="51">.</op:operator><name pos:line="45" pos:column="52">GetLuceneDocument</name></name><argument_list pos:line="45" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">var</name></type> <name pos:line="46" pos:column="17">customProgramElement</name> =<init pos:line="46" pos:column="39"> <expr><call><name><name pos:line="46" pos:column="40">ConverterFromHitToProgramElement</name><op:operator pos:line="46" pos:column="72">.</op:operator><name pos:line="46" pos:column="73">Create</name></name><argument_list pos:line="46" pos:column="79">(<argument><expr><name pos:line="46" pos:column="80">document</name></expr></argument>)</argument_list></call><op:operator pos:line="46" pos:column="89">.</op:operator><call><name pos:line="46" pos:column="90">Convert</name><argument_list pos:line="46" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">var</name></type> <name pos:line="47" pos:column="17">myCustomProgramElementForTesting</name> =<init pos:line="47" pos:column="51"> <expr><name pos:line="47" pos:column="52">customProgramElement</name> <op:operator pos:line="47" pos:column="73">as</op:operator> <name pos:line="47" pos:column="76">MyCustomClassForTesting</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Assert</name><op:operator pos:line="48" pos:column="19">.</op:operator><name pos:line="48" pos:column="20">IsTrue</name></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">myCustomProgramElementForTesting</name> <op:operator pos:line="48" pos:column="60">!=</op:operator> <name pos:line="48" pos:column="63">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">Assert</name><op:operator pos:line="49" pos:column="19">.</op:operator><name pos:line="49" pos:column="20">IsTrue</name></name><argument_list pos:line="49" pos:column="26">(<argument><expr><call><name><name pos:line="49" pos:column="27">myCustomProgramElementForTesting</name><op:operator pos:line="49" pos:column="59">.</op:operator><name pos:line="49" pos:column="60">Bam</name><op:operator pos:line="49" pos:column="63">.</op:operator><name pos:line="49" pos:column="64">Equals</name></name><argument_list pos:line="49" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="71">"Zaow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>



        <function><type><attribute pos:line="54" pos:column="9">[<expr><name pos:line="54" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="55" pos:column="9">public</specifier> <name pos:line="55" pos:column="16">void</name></type> <name pos:line="55" pos:column="21">CustomDocumentToLuceneDocumentForClass</name><parameter_list pos:line="55" pos:column="59">()</parameter_list>
        <block pos:line="56" pos:column="9">{
            <comment type="line" pos:line="57" pos:column="13">//test AddDocumentFields</comment>
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">var</name></type> <name pos:line="58" pos:column="17">customSandoDocument</name> =<init pos:line="58" pos:column="38"> <expr><op:operator pos:line="58" pos:column="39">new</op:operator> <call><name pos:line="58" pos:column="43">ClassDocument</name><argument_list pos:line="58" pos:column="56">(<argument><expr><call><name><name pos:line="58" pos:column="57">MyCustomClassForTesting</name><op:operator pos:line="58" pos:column="80">.</op:operator><name pos:line="58" pos:column="81">GetClassElement</name></name><argument_list pos:line="58" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="59" pos:column="13">var</name></type> <name pos:line="59" pos:column="17">luceneDocumentWithCustomFields</name> =<init pos:line="59" pos:column="49"> <expr><call><name><name pos:line="59" pos:column="50">customSandoDocument</name><op:operator pos:line="59" pos:column="69">.</op:operator><name pos:line="59" pos:column="70">GetDocument</name></name><argument_list pos:line="59" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">Assert</name><op:operator pos:line="60" pos:column="19">.</op:operator><name pos:line="60" pos:column="20">IsTrue</name></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">luceneDocumentWithCustomFields</name> <op:operator pos:line="60" pos:column="58">!=</op:operator> <name pos:line="60" pos:column="61">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">Assert</name><op:operator pos:line="61" pos:column="19">.</op:operator><name pos:line="61" pos:column="20">IsTrue</name></name><argument_list pos:line="61" pos:column="26">(<argument><expr><call><name><name pos:line="61" pos:column="27">luceneDocumentWithCustomFields</name><op:operator pos:line="61" pos:column="57">.</op:operator><name pos:line="61" pos:column="58">GetField</name></name><argument_list pos:line="61" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="67">"Bam"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="61" pos:column="74">!=</op:operator> <name pos:line="61" pos:column="77">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">Assert</name><op:operator pos:line="62" pos:column="19">.</op:operator><name pos:line="62" pos:column="20">IsTrue</name></name><argument_list pos:line="62" pos:column="26">(<argument><expr><call><name><name pos:line="62" pos:column="27">luceneDocumentWithCustomFields</name><op:operator pos:line="62" pos:column="57">.</op:operator><name pos:line="62" pos:column="58">GetField</name></name><argument_list pos:line="62" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="67">"Bam"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="62" pos:column="73">.</op:operator><call><name pos:line="62" pos:column="74">StringValue</name><argument_list pos:line="62" pos:column="85">()</argument_list></call><op:operator pos:line="62" pos:column="87">.</op:operator><call><name pos:line="62" pos:column="88">Equals</name><argument_list pos:line="62" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="95">"Zaow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

    }</block></class>

    <class><specifier pos:line="67" pos:column="5">public</specifier> class <name pos:line="67" pos:column="18">MyCustomClassForTesting</name> <super pos:line="67" pos:column="42">: <name pos:line="67" pos:column="44">ClassElement</name></super>
    <block pos:line="68" pos:column="5">{
        <constructor><specifier pos:line="69" pos:column="9">public</specifier> <name pos:line="69" pos:column="16">MyCustomClassForTesting</name><parameter_list pos:line="69" pos:column="39">(<param><decl><type><name pos:line="69" pos:column="40">string</name></type> <name pos:line="69" pos:column="47">name</name></decl></param><op:operator pos:line="69" pos:column="51">,</op:operator> <param><decl><type><name pos:line="69" pos:column="53">int</name></type> <name pos:line="69" pos:column="57">definitionLineNumber</name></decl></param><op:operator pos:line="69" pos:column="77">,</op:operator> <param><decl><type><name pos:line="69" pos:column="79">string</name></type> <name pos:line="69" pos:column="86">fullFilePath</name></decl></param><op:operator pos:line="69" pos:column="98">,</op:operator> <param><decl><type><name pos:line="69" pos:column="100">string</name></type> <name pos:line="69" pos:column="107">snippet</name></decl></param><op:operator pos:line="69" pos:column="114">,</op:operator> <param><decl><type><name pos:line="69" pos:column="116">AccessLevel</name></type> <name pos:line="69" pos:column="128">accessLevel</name></decl></param><op:operator pos:line="69" pos:column="139">,</op:operator> <param><decl><type><name pos:line="69" pos:column="141">string</name></type> <name pos:line="69" pos:column="148">namespaceName</name></decl></param><op:operator pos:line="69" pos:column="161">,</op:operator> <param><decl><type><name pos:line="69" pos:column="163">string</name></type> <name pos:line="69" pos:column="170">extendedClasses</name></decl></param><op:operator pos:line="69" pos:column="185">,</op:operator> <param><decl><type><name pos:line="69" pos:column="187">string</name></type> <name pos:line="69" pos:column="194">implementedInterfaces</name></decl></param><op:operator pos:line="69" pos:column="215">,</op:operator> <param><decl><type><name pos:line="69" pos:column="217">string</name></type> <name pos:line="69" pos:column="224">modifiers</name></decl></param><op:operator pos:line="69" pos:column="233">,</op:operator> <param><decl><type><name pos:line="69" pos:column="235">string</name></type> <name pos:line="69" pos:column="242">junk</name></decl></param>)</parameter_list> <member_list pos:line="69" pos:column="248">: <call><name pos:line="69" pos:column="250">base</name><argument_list pos:line="69" pos:column="254">(<argument><expr><name pos:line="69" pos:column="255">name</name></expr></argument><op:operator pos:line="69" pos:column="259">,</op:operator> <argument><expr><name pos:line="69" pos:column="261">definitionLineNumber</name></expr></argument><op:operator pos:line="69" pos:column="281">,</op:operator> <argument><expr><name pos:line="69" pos:column="283">fullFilePath</name></expr></argument><op:operator pos:line="69" pos:column="295">,</op:operator> <argument><expr><name pos:line="69" pos:column="297">snippet</name></expr></argument><op:operator pos:line="69" pos:column="304">,</op:operator> <argument><expr><name pos:line="69" pos:column="306">accessLevel</name></expr></argument><op:operator pos:line="69" pos:column="317">,</op:operator> <argument><expr><name pos:line="69" pos:column="319">namespaceName</name></expr></argument><op:operator pos:line="69" pos:column="332">,</op:operator> <argument><expr><name pos:line="69" pos:column="334">extendedClasses</name></expr></argument><op:operator pos:line="69" pos:column="349">,</op:operator> <argument><expr><name pos:line="69" pos:column="351">implementedInterfaces</name></expr></argument><op:operator pos:line="69" pos:column="372">,</op:operator> <argument><expr><name pos:line="69" pos:column="374">modifiers</name></expr></argument><op:operator pos:line="69" pos:column="383">,</op:operator><argument><expr><name pos:line="69" pos:column="384">junk</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="70" pos:column="9">{
        }</block></constructor>
        
        <decl_stmt><decl><type><attribute pos:line="73" pos:column="9">[<expr><call><name pos:line="73" pos:column="10">CustomIndexFieldAttribute</name><argument_list pos:line="73" pos:column="35">()</argument_list></call></expr>]</attribute>
        <specifier pos:line="74" pos:column="9">public</specifier> <name pos:line="74" pos:column="16">string</name></type> <name pos:line="74" pos:column="23">Bam</name> <block pos:line="74" pos:column="27">{ <function><name pos:line="74" pos:column="29">get</name>;</function> <function><name pos:line="74" pos:column="34">set</name>;</function> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="76" pos:column="9">public</specifier> <specifier pos:line="76" pos:column="16">static</specifier> <name pos:line="76" pos:column="23">Document</name></type> <name pos:line="76" pos:column="32">GetLuceneDocument</name><parameter_list pos:line="76" pos:column="49">()</parameter_list>
        <block pos:line="77" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="78" pos:column="13">ClassElement</name></type> <name pos:line="78" pos:column="26">element</name> =<init pos:line="78" pos:column="35"> <expr><call><name><name pos:line="78" pos:column="36">SampleProgramElementFactory</name><op:operator pos:line="78" pos:column="63">.</op:operator><name pos:line="78" pos:column="64">GetSampleClassElement</name></name><argument_list pos:line="78" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">Document</name></type> <name pos:line="79" pos:column="22">document</name> =<init pos:line="79" pos:column="32"> <expr><call><name><name pos:line="79" pos:column="33">DocumentFactory</name><op:operator pos:line="79" pos:column="48">.</op:operator><name pos:line="79" pos:column="49">Create</name></name><argument_list pos:line="79" pos:column="55">(<argument><expr><name pos:line="79" pos:column="56">element</name></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="64">.</op:operator><call><name pos:line="79" pos:column="65">GetDocument</name><argument_list pos:line="79" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">document</name><op:operator pos:line="80" pos:column="21">.</op:operator><name pos:line="80" pos:column="22">Add</name></name><argument_list pos:line="80" pos:column="25">(<argument><expr><op:operator pos:line="80" pos:column="26">new</op:operator> <call><name pos:line="80" pos:column="30">Field</name><argument_list pos:line="80" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="80" pos:column="36">"Bam"</lit:literal></expr></argument><op:operator pos:line="80" pos:column="41">,</op:operator> <argument><expr><lit:literal type="string" pos:line="80" pos:column="43">"Zaow"</lit:literal></expr></argument><op:operator pos:line="80" pos:column="49">,</op:operator> <argument><expr><name><name pos:line="80" pos:column="51">Field</name><op:operator pos:line="80" pos:column="56">.</op:operator><name pos:line="80" pos:column="57">Store</name><op:operator pos:line="80" pos:column="62">.</op:operator><name pos:line="80" pos:column="63">YES</name></name></expr></argument><op:operator pos:line="80" pos:column="66">,</op:operator> <argument><expr><name><name pos:line="80" pos:column="68">Field</name><op:operator pos:line="80" pos:column="73">.</op:operator><name pos:line="80" pos:column="74">Index</name><op:operator pos:line="80" pos:column="79">.</op:operator><name pos:line="80" pos:column="80">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="81" pos:column="13">document</name><op:operator pos:line="81" pos:column="21">.</op:operator><name pos:line="81" pos:column="22">RemoveField</name></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name><name pos:line="81" pos:column="34">ProgramElement</name><op:operator pos:line="81" pos:column="48">.</op:operator><name pos:line="81" pos:column="49">CustomTypeTag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="82" pos:column="13">document</name><op:operator pos:line="82" pos:column="21">.</op:operator><name pos:line="82" pos:column="22">Add</name></name><argument_list pos:line="82" pos:column="25">(<argument><expr><op:operator pos:line="82" pos:column="26">new</op:operator> <call><name pos:line="82" pos:column="30">Field</name><argument_list pos:line="82" pos:column="35">(<argument><expr><name><name pos:line="82" pos:column="36">ProgramElement</name><op:operator pos:line="82" pos:column="50">.</op:operator><name pos:line="82" pos:column="51">CustomTypeTag</name></name></expr></argument><op:operator pos:line="82" pos:column="64">,</op:operator> <argument><expr><call><name pos:line="82" pos:column="66">typeof</name><argument_list pos:line="82" pos:column="72">(<argument><expr><name pos:line="82" pos:column="73">MyCustomClassForTesting</name></expr></argument>)</argument_list></call><op:operator pos:line="82" pos:column="97">.</op:operator><name pos:line="82" pos:column="98">AssemblyQualifiedName</name></expr></argument><op:operator pos:line="82" pos:column="119">,</op:operator> <argument><expr><name><name pos:line="82" pos:column="121">Field</name><op:operator pos:line="82" pos:column="126">.</op:operator><name pos:line="82" pos:column="127">Store</name><op:operator pos:line="82" pos:column="132">.</op:operator><name pos:line="82" pos:column="133">YES</name></name></expr></argument><op:operator pos:line="82" pos:column="136">,</op:operator> <argument><expr><name><name pos:line="82" pos:column="138">Field</name><op:operator pos:line="82" pos:column="143">.</op:operator><name pos:line="82" pos:column="144">Index</name><op:operator pos:line="82" pos:column="149">.</op:operator><name pos:line="82" pos:column="150">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="83" pos:column="13">return <expr><name pos:line="83" pos:column="20">document</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="86" pos:column="9">public</specifier> <specifier pos:line="86" pos:column="16">static</specifier> <name pos:line="86" pos:column="23">ClassElement</name></type> <name pos:line="86" pos:column="36">GetSampleClassElement</name><parameter_list pos:line="86" pos:column="57">(
            <param><decl><type><name pos:line="87" pos:column="13">AccessLevel</name></type> <name pos:line="87" pos:column="25">accessLevel</name> =<init pos:line="87" pos:column="38"> <expr><name><name pos:line="87" pos:column="39">AccessLevel</name><op:operator pos:line="87" pos:column="50">.</op:operator><name pos:line="87" pos:column="51">Public</name></name></expr></init></decl></param><op:operator pos:line="87" pos:column="57">,</op:operator>
            <param><decl><type><name pos:line="88" pos:column="13">int</name></type> <name pos:line="88" pos:column="17">definitionLineNumber</name> =<init pos:line="88" pos:column="39"> <expr><lit:literal type="number" pos:line="88" pos:column="40">11</lit:literal></expr></init></decl></param><op:operator pos:line="88" pos:column="42">,</op:operator>
            <param><decl><type><name pos:line="89" pos:column="13">string</name></type> <name pos:line="89" pos:column="20">extendedClasses</name> =<init pos:line="89" pos:column="37"> <expr><lit:literal type="string" pos:line="89" pos:column="38">"SimpleClassBase"</lit:literal></expr></init></decl></param><op:operator pos:line="89" pos:column="55">,</op:operator>
            <param><decl><type><name pos:line="90" pos:column="13">string</name></type> <name pos:line="90" pos:column="20">fullFilePath</name> =<init pos:line="90" pos:column="34"> <expr><lit:literal type="string" pos:line="90" pos:column="35">"C:/Projects/SampleClass.cs"</lit:literal></expr></init></decl></param><op:operator pos:line="90" pos:column="63">,</op:operator>
            <param><decl><type><name pos:line="91" pos:column="13">string</name></type> <name pos:line="91" pos:column="20">implementedInterfaces</name> =<init pos:line="91" pos:column="43"> <expr><lit:literal type="string" pos:line="91" pos:column="44">"IDisposable"</lit:literal></expr></init></decl></param><op:operator pos:line="91" pos:column="57">,</op:operator>
            <param><decl><type><name pos:line="92" pos:column="13">string</name></type> <name pos:line="92" pos:column="20">name</name> =<init pos:line="92" pos:column="26"> <expr><lit:literal type="string" pos:line="92" pos:column="27">"SimpleClassName"</lit:literal></expr></init></decl></param><op:operator pos:line="92" pos:column="44">,</op:operator>
            <param><decl><type><name pos:line="93" pos:column="13">string</name></type> <name pos:line="93" pos:column="20">namespaceName</name> =<init pos:line="93" pos:column="35"> <expr><lit:literal type="string" pos:line="93" pos:column="36">"Sando.Indexer.UnitTests"</lit:literal></expr></init></decl></param><op:operator pos:line="93" pos:column="61">,</op:operator>
            <param><decl><type><name pos:line="94" pos:column="13">string</name></type> <name pos:line="94" pos:column="20">snippet</name> =<init pos:line="94" pos:column="29"> <expr><lit:literal type="string" pos:line="94" pos:column="30">"public class SimpleClass\n{private int field1;\nprotected void method(){}\n}"</lit:literal></expr></init></decl></param><op:operator pos:line="94" pos:column="108">,</op:operator>
            <param><decl><type><name pos:line="95" pos:column="13">string</name></type> <name pos:line="95" pos:column="20">modifiers</name> =<init pos:line="95" pos:column="31"> <expr><lit:literal type="string" pos:line="95" pos:column="32">""</lit:literal></expr></init></decl></param>
        )</parameter_list>
        <block pos:line="97" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="98" pos:column="13">var</name></type> <name pos:line="98" pos:column="17">classElement</name> =<init pos:line="98" pos:column="31"> <expr><op:operator pos:line="98" pos:column="32">new</op:operator> <call><name pos:line="98" pos:column="36">MyCustomClassForTesting</name><argument_list pos:line="98" pos:column="59">(<argument><expr><name pos:line="98" pos:column="60">name</name></expr></argument><op:operator pos:line="98" pos:column="64">,</op:operator> <argument><expr><name pos:line="98" pos:column="66">definitionLineNumber</name></expr></argument><op:operator pos:line="98" pos:column="86">,</op:operator> <argument><expr><name pos:line="98" pos:column="88">fullFilePath</name></expr></argument><op:operator pos:line="98" pos:column="100">,</op:operator> <argument><expr><name pos:line="98" pos:column="102">snippet</name></expr></argument><op:operator pos:line="98" pos:column="109">,</op:operator> <argument><expr><name pos:line="98" pos:column="111">accessLevel</name></expr></argument><op:operator pos:line="98" pos:column="122">,</op:operator> <argument><expr><name pos:line="98" pos:column="124">namespaceName</name></expr></argument><op:operator pos:line="98" pos:column="137">,</op:operator> <argument><expr><name pos:line="98" pos:column="139">extendedClasses</name></expr></argument><op:operator pos:line="98" pos:column="154">,</op:operator> <argument><expr><name pos:line="98" pos:column="156">implementedInterfaces</name></expr></argument><op:operator pos:line="98" pos:column="177">,</op:operator> <argument><expr><name pos:line="98" pos:column="179">modifiers</name></expr></argument><op:operator pos:line="98" pos:column="188">,</op:operator> <argument><expr><lit:literal type="string" pos:line="98" pos:column="190">"junk body"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">classElement</name><op:operator pos:line="99" pos:column="25">.</op:operator><name pos:line="99" pos:column="26">Bam</name></name> <op:operator pos:line="99" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="99" pos:column="32">"Zaow"</lit:literal></expr>;</expr_stmt>
            <return pos:line="100" pos:column="13">return <expr><name pos:line="100" pos:column="20">classElement</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="103" pos:column="9">public</specifier> <specifier pos:line="103" pos:column="16">static</specifier> <name pos:line="103" pos:column="23">ClassElement</name></type> <name pos:line="103" pos:column="36">GetClassElement</name><parameter_list pos:line="103" pos:column="51">()</parameter_list>
        <block pos:line="104" pos:column="9">{
            <return pos:line="105" pos:column="13">return <expr><call><name pos:line="105" pos:column="20">GetSampleClassElement</name><argument_list pos:line="105" pos:column="41">()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <class><specifier pos:line="109" pos:column="5">public</specifier> class <name pos:line="109" pos:column="18">MyCustomMethodElementForTesting</name> <super pos:line="109" pos:column="50">: <name pos:line="109" pos:column="52">MethodElement</name></super>
    <block pos:line="110" pos:column="5">{



        <constructor><specifier pos:line="114" pos:column="9">public</specifier> <name pos:line="114" pos:column="16">MyCustomMethodElementForTesting</name><parameter_list pos:line="114" pos:column="47">(<param><decl><type><name pos:line="114" pos:column="48">string</name></type> <name pos:line="114" pos:column="55">name</name></decl></param><op:operator pos:line="114" pos:column="59">,</op:operator> <param><decl><type><name pos:line="114" pos:column="61">int</name></type> <name pos:line="114" pos:column="65">definitionLineNumber</name></decl></param><op:operator pos:line="114" pos:column="85">,</op:operator> <param><decl><type><name pos:line="114" pos:column="87">string</name></type> <name pos:line="114" pos:column="94">fullFilePath</name></decl></param><op:operator pos:line="114" pos:column="106">,</op:operator> <param><decl><type><name pos:line="114" pos:column="108">string</name></type> <name pos:line="114" pos:column="115">snippet</name></decl></param><op:operator pos:line="114" pos:column="122">,</op:operator> <param><decl><type><name pos:line="114" pos:column="124">AccessLevel</name></type> <name pos:line="114" pos:column="136">accessLevel</name></decl></param><op:operator pos:line="114" pos:column="147">,</op:operator> <param><decl><type><name pos:line="114" pos:column="149">string</name></type> <name pos:line="114" pos:column="156">arguments</name></decl></param><op:operator pos:line="114" pos:column="165">,</op:operator> <param><decl><type><name pos:line="114" pos:column="167">string</name></type> <name pos:line="114" pos:column="174">returnType</name></decl></param><op:operator pos:line="114" pos:column="184">,</op:operator> <param><decl><type><name pos:line="114" pos:column="186">string</name></type> <name pos:line="114" pos:column="193">body</name></decl></param><op:operator pos:line="114" pos:column="197">,</op:operator> <param><decl><type><name pos:line="114" pos:column="199">Guid</name></type> <name pos:line="114" pos:column="204">classId</name></decl></param><op:operator pos:line="114" pos:column="211">,</op:operator> <param><decl><type><name pos:line="114" pos:column="213">string</name></type> <name pos:line="114" pos:column="220">className</name></decl></param><op:operator pos:line="114" pos:column="229">,</op:operator> <param><decl><type><name pos:line="114" pos:column="231">string</name></type> <name pos:line="114" pos:column="238">modifiers</name></decl></param><op:operator pos:line="114" pos:column="247">,</op:operator> <param><decl><type><name pos:line="114" pos:column="249">bool</name></type> <name pos:line="114" pos:column="254">isConstructor</name></decl></param>)</parameter_list> 
            <member_list pos:line="115" pos:column="13">: <call><name pos:line="115" pos:column="15">base</name><argument_list pos:line="115" pos:column="19">(<argument><expr><name pos:line="115" pos:column="20">name</name></expr></argument><op:operator pos:line="115" pos:column="24">,</op:operator> <argument><expr><name pos:line="115" pos:column="26">definitionLineNumber</name></expr></argument><op:operator pos:line="115" pos:column="46">,</op:operator> <argument><expr><name pos:line="115" pos:column="48">fullFilePath</name></expr></argument><op:operator pos:line="115" pos:column="60">,</op:operator> <argument><expr><name pos:line="115" pos:column="62">snippet</name></expr></argument><op:operator pos:line="115" pos:column="69">,</op:operator> <argument><expr><name pos:line="115" pos:column="71">accessLevel</name></expr></argument><op:operator pos:line="115" pos:column="82">,</op:operator> <argument><expr><name pos:line="115" pos:column="84">arguments</name></expr></argument><op:operator pos:line="115" pos:column="93">,</op:operator> <argument><expr><name pos:line="115" pos:column="95">returnType</name></expr></argument><op:operator pos:line="115" pos:column="105">,</op:operator> <argument><expr><name pos:line="115" pos:column="107">body</name></expr></argument><op:operator pos:line="115" pos:column="111">,</op:operator> <argument><expr><name pos:line="115" pos:column="113">classId</name></expr></argument><op:operator pos:line="115" pos:column="120">,</op:operator> <argument><expr><name pos:line="115" pos:column="122">className</name></expr></argument><op:operator pos:line="115" pos:column="131">,</op:operator> <argument><expr><name pos:line="115" pos:column="133">modifiers</name></expr></argument><op:operator pos:line="115" pos:column="142">,</op:operator> <argument><expr><name pos:line="115" pos:column="144">isConstructor</name></expr></argument>)</argument_list></call> 
        </member_list><block pos:line="116" pos:column="9">{
        }</block></constructor>

    

        <decl_stmt><decl><type><attribute pos:line="121" pos:column="9">[<expr><call><name pos:line="121" pos:column="10">CustomIndexFieldAttribute</name><argument_list pos:line="121" pos:column="35">()</argument_list></call></expr>]</attribute>
        <specifier pos:line="122" pos:column="9">public</specifier> <name pos:line="122" pos:column="16">string</name></type> <name pos:line="122" pos:column="23">Boom</name> <block pos:line="122" pos:column="28">{ <function><name pos:line="122" pos:column="30">get</name>;</function> <function><name pos:line="122" pos:column="35">set</name>;</function> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="124" pos:column="9">public</specifier> <specifier pos:line="124" pos:column="16">static</specifier> <name pos:line="124" pos:column="23">MethodElement</name></type> <name pos:line="124" pos:column="37">GetMethodElement</name><parameter_list pos:line="124" pos:column="53">()</parameter_list>
        <block pos:line="125" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="126" pos:column="13">var</name></type> <name pos:line="126" pos:column="17">methodElement</name> =<init pos:line="126" pos:column="32"> <expr><op:operator pos:line="126" pos:column="33">new</op:operator> <call><name pos:line="126" pos:column="37">MyCustomMethodElementForTesting</name><argument_list pos:line="126" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="69">"multiply"</lit:literal></expr></argument><op:operator pos:line="126" pos:column="79">,</op:operator> <argument><expr><lit:literal type="number" pos:line="126" pos:column="81">12</lit:literal></expr></argument><op:operator pos:line="126" pos:column="83">,</op:operator> <argument><expr><lit:literal type="string" pos:line="126" pos:column="85">"C:/Projects/SampleClass.cs"</lit:literal></expr></argument><op:operator pos:line="126" pos:column="113">,</op:operator>
                                                <argument><expr><lit:literal type="string" pos:line="127" pos:column="49">"private int multiply(int number, int factor)\n{\nreturn number * factor;\n};"</lit:literal></expr></argument><op:operator pos:line="127" pos:column="127">,</op:operator>
                                                <argument><expr><name><name pos:line="128" pos:column="49">AccessLevel</name><op:operator pos:line="128" pos:column="60">.</op:operator><name pos:line="128" pos:column="61">Public</name></name></expr></argument><op:operator pos:line="128" pos:column="67">,</op:operator> <argument><expr><lit:literal type="string" pos:line="128" pos:column="69">"int number, int factor"</lit:literal></expr></argument><op:operator pos:line="128" pos:column="93">,</op:operator> <argument><expr><lit:literal type="string" pos:line="128" pos:column="95">"int"</lit:literal></expr></argument><op:operator pos:line="128" pos:column="100">,</op:operator>
                                                <argument><expr><lit:literal type="string" pos:line="129" pos:column="49">"return number * factor;"</lit:literal></expr></argument><op:operator pos:line="129" pos:column="74">,</op:operator> <argument><expr><op:operator pos:line="129" pos:column="76">new</op:operator> <call><name pos:line="129" pos:column="80">Guid</name><argument_list pos:line="129" pos:column="84">()</argument_list></call></expr></argument><op:operator pos:line="129" pos:column="86">,</op:operator>
                                                            <argument><expr><lit:literal type="string" pos:line="130" pos:column="61">"SampleCLass"</lit:literal></expr></argument><op:operator pos:line="130" pos:column="74">,</op:operator> <argument><expr><lit:literal type="string" pos:line="130" pos:column="76">""</lit:literal></expr></argument><op:operator pos:line="130" pos:column="78">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="130" pos:column="80">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="131" pos:column="13">methodElement</name><op:operator pos:line="131" pos:column="26">.</op:operator><name pos:line="131" pos:column="27">Boom</name></name> <op:operator pos:line="131" pos:column="32">=</op:operator> <lit:literal type="string" pos:line="131" pos:column="34">"Ba dow"</lit:literal></expr>;</expr_stmt>
            <return pos:line="132" pos:column="13">return <expr><name pos:line="132" pos:column="20">methodElement</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="135" pos:column="9">public</specifier> <specifier pos:line="135" pos:column="16">static</specifier> <name pos:line="135" pos:column="23">Document</name></type> <name pos:line="135" pos:column="32">GetLuceneDocument</name><parameter_list pos:line="135" pos:column="49">()</parameter_list>
        <block pos:line="136" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="137" pos:column="13">var</name></type> <name pos:line="137" pos:column="17">document</name> =<init pos:line="137" pos:column="27"> <expr><op:operator pos:line="137" pos:column="28">new</op:operator> <call><name pos:line="137" pos:column="32">Document</name><argument_list pos:line="137" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="138" pos:column="13">document</name><op:operator pos:line="138" pos:column="21">.</op:operator><name pos:line="138" pos:column="22">Add</name></name><argument_list pos:line="138" pos:column="25">(<argument><expr><op:operator pos:line="138" pos:column="26">new</op:operator> <call><name pos:line="138" pos:column="30">Field</name><argument_list pos:line="138" pos:column="35">(<argument><expr><call><name><name pos:line="138" pos:column="36">SandoField</name><op:operator pos:line="138" pos:column="46">.</op:operator><name pos:line="138" pos:column="47">Id</name><op:operator pos:line="138" pos:column="49">.</op:operator><name pos:line="138" pos:column="50">ToString</name></name><argument_list pos:line="138" pos:column="58">()</argument_list></call></expr></argument><op:operator pos:line="138" pos:column="60">,</op:operator> <argument><expr><lit:literal type="string" pos:line="138" pos:column="62">"xycasdf3k34"</lit:literal></expr></argument><op:operator pos:line="138" pos:column="75">,</op:operator> <argument><expr><name><name pos:line="138" pos:column="77">Field</name><op:operator pos:line="138" pos:column="82">.</op:operator><name pos:line="138" pos:column="83">Store</name><op:operator pos:line="138" pos:column="88">.</op:operator><name pos:line="138" pos:column="89">YES</name></name></expr></argument><op:operator pos:line="138" pos:column="92">,</op:operator> <argument><expr><name><name pos:line="138" pos:column="94">Field</name><op:operator pos:line="138" pos:column="99">.</op:operator><name pos:line="138" pos:column="100">Index</name><op:operator pos:line="138" pos:column="105">.</op:operator><name pos:line="138" pos:column="106">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">document</name><op:operator pos:line="139" pos:column="21">.</op:operator><name pos:line="139" pos:column="22">Add</name></name><argument_list pos:line="139" pos:column="25">(<argument><expr><op:operator pos:line="139" pos:column="26">new</op:operator> <call><name pos:line="139" pos:column="30">Field</name><argument_list pos:line="139" pos:column="35">(<argument><expr><call><name><name pos:line="139" pos:column="36">SandoField</name><op:operator pos:line="139" pos:column="46">.</op:operator><name pos:line="139" pos:column="47">Name</name><op:operator pos:line="139" pos:column="51">.</op:operator><name pos:line="139" pos:column="52">ToString</name></name><argument_list pos:line="139" pos:column="60">()</argument_list></call></expr></argument><op:operator pos:line="139" pos:column="62">,</op:operator> <argument><expr><lit:literal type="string" pos:line="139" pos:column="64">"customThingName"</lit:literal></expr></argument><op:operator pos:line="139" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="139" pos:column="83">Field</name><op:operator pos:line="139" pos:column="88">.</op:operator><name pos:line="139" pos:column="89">Store</name><op:operator pos:line="139" pos:column="94">.</op:operator><name pos:line="139" pos:column="95">YES</name></name></expr></argument><op:operator pos:line="139" pos:column="98">,</op:operator> <argument><expr><name><name pos:line="139" pos:column="100">Field</name><op:operator pos:line="139" pos:column="105">.</op:operator><name pos:line="139" pos:column="106">Index</name><op:operator pos:line="139" pos:column="111">.</op:operator><name pos:line="139" pos:column="112">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">document</name><op:operator pos:line="140" pos:column="21">.</op:operator><name pos:line="140" pos:column="22">Add</name></name><argument_list pos:line="140" pos:column="25">(<argument><expr><op:operator pos:line="140" pos:column="26">new</op:operator> <call><name pos:line="140" pos:column="30">Field</name><argument_list pos:line="140" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="36">"Boom"</lit:literal></expr></argument><op:operator pos:line="140" pos:column="42">,</op:operator> <argument><expr><lit:literal type="string" pos:line="140" pos:column="44">"Ba dow"</lit:literal></expr></argument><op:operator pos:line="140" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="140" pos:column="54">Field</name><op:operator pos:line="140" pos:column="59">.</op:operator><name pos:line="140" pos:column="60">Store</name><op:operator pos:line="140" pos:column="65">.</op:operator><name pos:line="140" pos:column="66">YES</name></name></expr></argument><op:operator pos:line="140" pos:column="69">,</op:operator> <argument><expr><name><name pos:line="140" pos:column="71">Field</name><op:operator pos:line="140" pos:column="76">.</op:operator><name pos:line="140" pos:column="77">Index</name><op:operator pos:line="140" pos:column="82">.</op:operator><name pos:line="140" pos:column="83">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="141" pos:column="13">document</name><op:operator pos:line="141" pos:column="21">.</op:operator><name pos:line="141" pos:column="22">Add</name></name><argument_list pos:line="141" pos:column="25">(<argument><expr><op:operator pos:line="141" pos:column="26">new</op:operator> <call><name pos:line="141" pos:column="30">Field</name><argument_list pos:line="141" pos:column="35">(<argument><expr><call><name><name pos:line="141" pos:column="36">SandoField</name><op:operator pos:line="141" pos:column="46">.</op:operator><name pos:line="141" pos:column="47">ProgramElementType</name><op:operator pos:line="141" pos:column="65">.</op:operator><name pos:line="141" pos:column="66">ToString</name></name><argument_list pos:line="141" pos:column="74">()</argument_list></call></expr></argument><op:operator pos:line="141" pos:column="76">,</op:operator> <argument><expr><call><name><name pos:line="141" pos:column="78">ProgramElementType</name><op:operator pos:line="141" pos:column="96">.</op:operator><name pos:line="141" pos:column="97">Custom</name><op:operator pos:line="141" pos:column="103">.</op:operator><name pos:line="141" pos:column="104">ToString</name></name><argument_list pos:line="141" pos:column="112">()</argument_list></call></expr></argument><op:operator pos:line="141" pos:column="114">,</op:operator> <argument><expr><name><name pos:line="141" pos:column="116">Field</name><op:operator pos:line="141" pos:column="121">.</op:operator><name pos:line="141" pos:column="122">Store</name><op:operator pos:line="141" pos:column="127">.</op:operator><name pos:line="141" pos:column="128">YES</name></name></expr></argument><op:operator pos:line="141" pos:column="131">,</op:operator> <argument><expr><name><name pos:line="141" pos:column="133">Field</name><op:operator pos:line="141" pos:column="138">.</op:operator><name pos:line="141" pos:column="139">Index</name><op:operator pos:line="141" pos:column="144">.</op:operator><name pos:line="141" pos:column="145">NOT_ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="142" pos:column="13">document</name><op:operator pos:line="142" pos:column="21">.</op:operator><name pos:line="142" pos:column="22">Add</name></name><argument_list pos:line="142" pos:column="25">(<argument><expr><op:operator pos:line="142" pos:column="26">new</op:operator> <call><name pos:line="142" pos:column="30">Field</name><argument_list pos:line="142" pos:column="35">(<argument><expr><call><name><name pos:line="142" pos:column="36">SandoField</name><op:operator pos:line="142" pos:column="46">.</op:operator><name pos:line="142" pos:column="47">FullFilePath</name><op:operator pos:line="142" pos:column="59">.</op:operator><name pos:line="142" pos:column="60">ToString</name></name><argument_list pos:line="142" pos:column="68">()</argument_list></call></expr></argument><op:operator pos:line="142" pos:column="70">,</op:operator> <argument><expr><lit:literal type="string" pos:line="142" pos:column="72">@"C:\stuff\place.txt"</lit:literal></expr></argument><op:operator pos:line="142" pos:column="93">,</op:operator> <argument><expr><name><name pos:line="142" pos:column="95">Field</name><op:operator pos:line="142" pos:column="100">.</op:operator><name pos:line="142" pos:column="101">Store</name><op:operator pos:line="142" pos:column="106">.</op:operator><name pos:line="142" pos:column="107">YES</name></name></expr></argument><op:operator pos:line="142" pos:column="110">,</op:operator> <argument><expr><name><name pos:line="142" pos:column="112">Field</name><op:operator pos:line="142" pos:column="117">.</op:operator><name pos:line="142" pos:column="118">Index</name><op:operator pos:line="142" pos:column="123">.</op:operator><name pos:line="142" pos:column="124">NOT_ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="143" pos:column="13">document</name><op:operator pos:line="143" pos:column="21">.</op:operator><name pos:line="143" pos:column="22">Add</name></name><argument_list pos:line="143" pos:column="25">(<argument><expr><op:operator pos:line="143" pos:column="26">new</op:operator> <call><name pos:line="143" pos:column="30">Field</name><argument_list pos:line="143" pos:column="35">(<argument><expr><call><name><name pos:line="143" pos:column="36">SandoField</name><op:operator pos:line="143" pos:column="46">.</op:operator><name pos:line="143" pos:column="47">DefinitionLineNumber</name><op:operator pos:line="143" pos:column="67">.</op:operator><name pos:line="143" pos:column="68">ToString</name></name><argument_list pos:line="143" pos:column="76">()</argument_list></call></expr></argument><op:operator pos:line="143" pos:column="78">,</op:operator> <argument><expr><lit:literal type="string" pos:line="143" pos:column="80">"123"</lit:literal></expr></argument><op:operator pos:line="143" pos:column="85">,</op:operator> <argument><expr><name><name pos:line="143" pos:column="87">Field</name><op:operator pos:line="143" pos:column="92">.</op:operator><name pos:line="143" pos:column="93">Store</name><op:operator pos:line="143" pos:column="98">.</op:operator><name pos:line="143" pos:column="99">YES</name></name></expr></argument><op:operator pos:line="143" pos:column="102">,</op:operator> <argument><expr><name><name pos:line="143" pos:column="104">Field</name><op:operator pos:line="143" pos:column="109">.</op:operator><name pos:line="143" pos:column="110">Index</name><op:operator pos:line="143" pos:column="115">.</op:operator><name pos:line="143" pos:column="116">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="144" pos:column="13">document</name><op:operator pos:line="144" pos:column="21">.</op:operator><name pos:line="144" pos:column="22">Add</name></name><argument_list pos:line="144" pos:column="25">(<argument><expr><op:operator pos:line="144" pos:column="26">new</op:operator> <call><name pos:line="144" pos:column="30">Field</name><argument_list pos:line="144" pos:column="35">(<argument><expr><call><name><name pos:line="144" pos:column="36">SandoField</name><op:operator pos:line="144" pos:column="46">.</op:operator><name pos:line="144" pos:column="47">Source</name><op:operator pos:line="144" pos:column="53">.</op:operator><name pos:line="144" pos:column="54">ToString</name></name><argument_list pos:line="144" pos:column="62">()</argument_list></call></expr></argument><op:operator pos:line="144" pos:column="64">,</op:operator> <argument><expr><lit:literal type="string" pos:line="144" pos:column="66">"The text of the custom thing."</lit:literal></expr></argument><op:operator pos:line="144" pos:column="97">,</op:operator> <argument><expr><name><name pos:line="144" pos:column="99">Field</name><op:operator pos:line="144" pos:column="104">.</op:operator><name pos:line="144" pos:column="105">Store</name><op:operator pos:line="144" pos:column="110">.</op:operator><name pos:line="144" pos:column="111">YES</name></name></expr></argument><op:operator pos:line="144" pos:column="114">,</op:operator> <argument><expr><name><name pos:line="144" pos:column="116">Field</name><op:operator pos:line="144" pos:column="121">.</op:operator><name pos:line="144" pos:column="122">Index</name><op:operator pos:line="144" pos:column="127">.</op:operator><name pos:line="144" pos:column="128">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="145" pos:column="13">document</name><op:operator pos:line="145" pos:column="21">.</op:operator><name pos:line="145" pos:column="22">Add</name></name><argument_list pos:line="145" pos:column="25">(<argument><expr><op:operator pos:line="145" pos:column="26">new</op:operator> <call><name pos:line="145" pos:column="30">Field</name><argument_list pos:line="145" pos:column="35">(<argument><expr><call><name><name pos:line="145" pos:column="36">SandoField</name><op:operator pos:line="145" pos:column="46">.</op:operator><name pos:line="145" pos:column="47">AccessLevel</name><op:operator pos:line="145" pos:column="58">.</op:operator><name pos:line="145" pos:column="59">ToString</name></name><argument_list pos:line="145" pos:column="67">()</argument_list></call></expr></argument><op:operator pos:line="145" pos:column="69">,</op:operator> <argument><expr><lit:literal type="string" pos:line="145" pos:column="71">"Public"</lit:literal></expr></argument><op:operator pos:line="145" pos:column="79">,</op:operator> <argument><expr><name><name pos:line="145" pos:column="81">Field</name><op:operator pos:line="145" pos:column="86">.</op:operator><name pos:line="145" pos:column="87">Store</name><op:operator pos:line="145" pos:column="92">.</op:operator><name pos:line="145" pos:column="93">YES</name></name></expr></argument><op:operator pos:line="145" pos:column="96">,</op:operator> <argument><expr><name><name pos:line="145" pos:column="98">Field</name><op:operator pos:line="145" pos:column="103">.</op:operator><name pos:line="145" pos:column="104">Index</name><op:operator pos:line="145" pos:column="109">.</op:operator><name pos:line="145" pos:column="110">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="146" pos:column="13">document</name><op:operator pos:line="146" pos:column="21">.</op:operator><name pos:line="146" pos:column="22">Add</name></name><argument_list pos:line="146" pos:column="25">(<argument><expr><op:operator pos:line="146" pos:column="26">new</op:operator> <call><name pos:line="146" pos:column="30">Field</name><argument_list pos:line="146" pos:column="35">(<argument><expr><call><name><name pos:line="146" pos:column="36">SandoField</name><op:operator pos:line="146" pos:column="46">.</op:operator><name pos:line="146" pos:column="47">Arguments</name><op:operator pos:line="146" pos:column="56">.</op:operator><name pos:line="146" pos:column="57">ToString</name></name><argument_list pos:line="146" pos:column="65">()</argument_list></call></expr></argument><op:operator pos:line="146" pos:column="67">,</op:operator> <argument><expr><lit:literal type="string" pos:line="146" pos:column="69">"int number, int factor"</lit:literal></expr></argument><op:operator pos:line="146" pos:column="93">,</op:operator> <argument><expr><name><name pos:line="146" pos:column="95">Field</name><op:operator pos:line="146" pos:column="100">.</op:operator><name pos:line="146" pos:column="101">Store</name><op:operator pos:line="146" pos:column="106">.</op:operator><name pos:line="146" pos:column="107">YES</name></name></expr></argument><op:operator pos:line="146" pos:column="110">,</op:operator> <argument><expr><name><name pos:line="146" pos:column="112">Field</name><op:operator pos:line="146" pos:column="117">.</op:operator><name pos:line="146" pos:column="118">Index</name><op:operator pos:line="146" pos:column="123">.</op:operator><name pos:line="146" pos:column="124">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">document</name><op:operator pos:line="147" pos:column="21">.</op:operator><name pos:line="147" pos:column="22">Add</name></name><argument_list pos:line="147" pos:column="25">(<argument><expr><op:operator pos:line="147" pos:column="26">new</op:operator> <call><name pos:line="147" pos:column="30">Field</name><argument_list pos:line="147" pos:column="35">(<argument><expr><call><name><name pos:line="147" pos:column="36">SandoField</name><op:operator pos:line="147" pos:column="46">.</op:operator><name pos:line="147" pos:column="47">Body</name><op:operator pos:line="147" pos:column="51">.</op:operator><name pos:line="147" pos:column="52">ToString</name></name><argument_list pos:line="147" pos:column="60">()</argument_list></call></expr></argument><op:operator pos:line="147" pos:column="62">,</op:operator> <argument><expr><lit:literal type="string" pos:line="147" pos:column="64">"return number * factor;"</lit:literal></expr></argument><op:operator pos:line="147" pos:column="89">,</op:operator> <argument><expr><name><name pos:line="147" pos:column="91">Field</name><op:operator pos:line="147" pos:column="96">.</op:operator><name pos:line="147" pos:column="97">Store</name><op:operator pos:line="147" pos:column="102">.</op:operator><name pos:line="147" pos:column="103">YES</name></name></expr></argument><op:operator pos:line="147" pos:column="106">,</op:operator> <argument><expr><name><name pos:line="147" pos:column="108">Field</name><op:operator pos:line="147" pos:column="113">.</op:operator><name pos:line="147" pos:column="114">Index</name><op:operator pos:line="147" pos:column="119">.</op:operator><name pos:line="147" pos:column="120">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="148" pos:column="13">document</name><op:operator pos:line="148" pos:column="21">.</op:operator><name pos:line="148" pos:column="22">Add</name></name><argument_list pos:line="148" pos:column="25">(<argument><expr><op:operator pos:line="148" pos:column="26">new</op:operator> <call><name pos:line="148" pos:column="30">Field</name><argument_list pos:line="148" pos:column="35">(<argument><expr><call><name><name pos:line="148" pos:column="36">SandoField</name><op:operator pos:line="148" pos:column="46">.</op:operator><name pos:line="148" pos:column="47">ClassId</name><op:operator pos:line="148" pos:column="54">.</op:operator><name pos:line="148" pos:column="55">ToString</name></name><argument_list pos:line="148" pos:column="63">()</argument_list></call></expr></argument><op:operator pos:line="148" pos:column="65">,</op:operator> <argument><expr><lit:literal type="string" pos:line="148" pos:column="67">"0f8fad5b-d9cb-469f-a165-70867728950e"</lit:literal></expr></argument><op:operator pos:line="148" pos:column="105">,</op:operator> <argument><expr><name><name pos:line="148" pos:column="107">Field</name><op:operator pos:line="148" pos:column="112">.</op:operator><name pos:line="148" pos:column="113">Store</name><op:operator pos:line="148" pos:column="118">.</op:operator><name pos:line="148" pos:column="119">YES</name></name></expr></argument><op:operator pos:line="148" pos:column="122">,</op:operator> <argument><expr><name><name pos:line="148" pos:column="124">Field</name><op:operator pos:line="148" pos:column="129">.</op:operator><name pos:line="148" pos:column="130">Index</name><op:operator pos:line="148" pos:column="135">.</op:operator><name pos:line="148" pos:column="136">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="149" pos:column="13">document</name><op:operator pos:line="149" pos:column="21">.</op:operator><name pos:line="149" pos:column="22">Add</name></name><argument_list pos:line="149" pos:column="25">(<argument><expr><op:operator pos:line="149" pos:column="26">new</op:operator> <call><name pos:line="149" pos:column="30">Field</name><argument_list pos:line="149" pos:column="35">(<argument><expr><call><name><name pos:line="149" pos:column="36">SandoField</name><op:operator pos:line="149" pos:column="46">.</op:operator><name pos:line="149" pos:column="47">ClassName</name><op:operator pos:line="149" pos:column="56">.</op:operator><name pos:line="149" pos:column="57">ToString</name></name><argument_list pos:line="149" pos:column="65">()</argument_list></call></expr></argument><op:operator pos:line="149" pos:column="67">,</op:operator> <argument><expr><lit:literal type="string" pos:line="149" pos:column="69">"SampleCLass"</lit:literal></expr></argument><op:operator pos:line="149" pos:column="82">,</op:operator> <argument><expr><name><name pos:line="149" pos:column="84">Field</name><op:operator pos:line="149" pos:column="89">.</op:operator><name pos:line="149" pos:column="90">Store</name><op:operator pos:line="149" pos:column="95">.</op:operator><name pos:line="149" pos:column="96">YES</name></name></expr></argument><op:operator pos:line="149" pos:column="99">,</op:operator> <argument><expr><name><name pos:line="149" pos:column="101">Field</name><op:operator pos:line="149" pos:column="106">.</op:operator><name pos:line="149" pos:column="107">Index</name><op:operator pos:line="149" pos:column="112">.</op:operator><name pos:line="149" pos:column="113">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="150" pos:column="13">document</name><op:operator pos:line="150" pos:column="21">.</op:operator><name pos:line="150" pos:column="22">Add</name></name><argument_list pos:line="150" pos:column="25">(<argument><expr><op:operator pos:line="150" pos:column="26">new</op:operator> <call><name pos:line="150" pos:column="30">Field</name><argument_list pos:line="150" pos:column="35">(<argument><expr><call><name><name pos:line="150" pos:column="36">SandoField</name><op:operator pos:line="150" pos:column="46">.</op:operator><name pos:line="150" pos:column="47">ReturnType</name><op:operator pos:line="150" pos:column="57">.</op:operator><name pos:line="150" pos:column="58">ToString</name></name><argument_list pos:line="150" pos:column="66">()</argument_list></call></expr></argument><op:operator pos:line="150" pos:column="68">,</op:operator> <argument><expr><lit:literal type="string" pos:line="150" pos:column="70">"int"</lit:literal></expr></argument><op:operator pos:line="150" pos:column="75">,</op:operator> <argument><expr><name><name pos:line="150" pos:column="77">Field</name><op:operator pos:line="150" pos:column="82">.</op:operator><name pos:line="150" pos:column="83">Store</name><op:operator pos:line="150" pos:column="88">.</op:operator><name pos:line="150" pos:column="89">YES</name></name></expr></argument><op:operator pos:line="150" pos:column="92">,</op:operator> <argument><expr><name><name pos:line="150" pos:column="94">Field</name><op:operator pos:line="150" pos:column="99">.</op:operator><name pos:line="150" pos:column="100">Index</name><op:operator pos:line="150" pos:column="105">.</op:operator><name pos:line="150" pos:column="106">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="151" pos:column="13">document</name><op:operator pos:line="151" pos:column="21">.</op:operator><name pos:line="151" pos:column="22">Add</name></name><argument_list pos:line="151" pos:column="25">(<argument><expr><op:operator pos:line="151" pos:column="26">new</op:operator> <call><name pos:line="151" pos:column="30">Field</name><argument_list pos:line="151" pos:column="35">(<argument><expr><call><name><name pos:line="151" pos:column="36">SandoField</name><op:operator pos:line="151" pos:column="46">.</op:operator><name pos:line="151" pos:column="47">Modifiers</name><op:operator pos:line="151" pos:column="56">.</op:operator><name pos:line="151" pos:column="57">ToString</name></name><argument_list pos:line="151" pos:column="65">()</argument_list></call></expr></argument><op:operator pos:line="151" pos:column="67">,</op:operator> <argument><expr><lit:literal type="string" pos:line="151" pos:column="69">""</lit:literal></expr></argument><op:operator pos:line="151" pos:column="71">,</op:operator> <argument><expr><name><name pos:line="151" pos:column="73">Field</name><op:operator pos:line="151" pos:column="78">.</op:operator><name pos:line="151" pos:column="79">Store</name><op:operator pos:line="151" pos:column="84">.</op:operator><name pos:line="151" pos:column="85">YES</name></name></expr></argument><op:operator pos:line="151" pos:column="88">,</op:operator> <argument><expr><name><name pos:line="151" pos:column="90">Field</name><op:operator pos:line="151" pos:column="95">.</op:operator><name pos:line="151" pos:column="96">Index</name><op:operator pos:line="151" pos:column="101">.</op:operator><name pos:line="151" pos:column="102">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="152" pos:column="13">document</name><op:operator pos:line="152" pos:column="21">.</op:operator><name pos:line="152" pos:column="22">Add</name></name><argument_list pos:line="152" pos:column="25">(<argument><expr><op:operator pos:line="152" pos:column="26">new</op:operator> <call><name pos:line="152" pos:column="30">Field</name><argument_list pos:line="152" pos:column="35">(<argument><expr><call><name><name pos:line="152" pos:column="36">SandoField</name><op:operator pos:line="152" pos:column="46">.</op:operator><name pos:line="152" pos:column="47">IsConstructor</name><op:operator pos:line="152" pos:column="60">.</op:operator><name pos:line="152" pos:column="61">ToString</name></name><argument_list pos:line="152" pos:column="69">()</argument_list></call></expr></argument><op:operator pos:line="152" pos:column="71">,</op:operator> <argument><expr><lit:literal type="string" pos:line="152" pos:column="73">"false"</lit:literal></expr></argument><op:operator pos:line="152" pos:column="80">,</op:operator> <argument><expr><name><name pos:line="152" pos:column="82">Field</name><op:operator pos:line="152" pos:column="87">.</op:operator><name pos:line="152" pos:column="88">Store</name><op:operator pos:line="152" pos:column="93">.</op:operator><name pos:line="152" pos:column="94">YES</name></name></expr></argument><op:operator pos:line="152" pos:column="97">,</op:operator> <argument><expr><name><name pos:line="152" pos:column="99">Field</name><op:operator pos:line="152" pos:column="104">.</op:operator><name pos:line="152" pos:column="105">Index</name><op:operator pos:line="152" pos:column="110">.</op:operator><name pos:line="152" pos:column="111">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="153" pos:column="13">document</name><op:operator pos:line="153" pos:column="21">.</op:operator><name pos:line="153" pos:column="22">Add</name></name><argument_list pos:line="153" pos:column="25">(<argument><expr><op:operator pos:line="153" pos:column="26">new</op:operator> <call><name pos:line="153" pos:column="30">Field</name><argument_list pos:line="153" pos:column="35">(<argument><expr><name><name pos:line="153" pos:column="36">ProgramElement</name><op:operator pos:line="153" pos:column="50">.</op:operator><name pos:line="153" pos:column="51">CustomTypeTag</name></name></expr></argument><op:operator pos:line="153" pos:column="64">,</op:operator> <argument><expr><call><name pos:line="153" pos:column="66">typeof</name><argument_list pos:line="153" pos:column="72">(<argument><expr><name pos:line="153" pos:column="73">MyCustomMethodElementForTesting</name></expr></argument>)</argument_list></call><op:operator pos:line="153" pos:column="105">.</op:operator><name pos:line="153" pos:column="106">AssemblyQualifiedName</name></expr></argument><op:operator pos:line="153" pos:column="127">,</op:operator> <argument><expr><name><name pos:line="153" pos:column="129">Field</name><op:operator pos:line="153" pos:column="134">.</op:operator><name pos:line="153" pos:column="135">Store</name><op:operator pos:line="153" pos:column="140">.</op:operator><name pos:line="153" pos:column="141">YES</name></name></expr></argument><op:operator pos:line="153" pos:column="144">,</op:operator> <argument><expr><name><name pos:line="153" pos:column="146">Field</name><op:operator pos:line="153" pos:column="151">.</op:operator><name pos:line="153" pos:column="152">Index</name><op:operator pos:line="153" pos:column="157">.</op:operator><name pos:line="153" pos:column="158">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="154" pos:column="13">return <expr><name pos:line="154" pos:column="20">document</name></expr>;</return>
        }</block></function>

    }</block></class>
}</block></namespace>
</unit>
