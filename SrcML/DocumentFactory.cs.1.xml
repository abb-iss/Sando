<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer\Documents\DocumentFactory.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Diagnostics</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Contracts</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Sando</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">ExtensionContracts</name><op:operator pos:line="2" pos:column="31">.</op:operator><name pos:line="2" pos:column="32">ProgramElementContracts</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Sando</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">Indexer</name><op:operator pos:line="4" pos:column="24">.</op:operator><name pos:line="4" pos:column="25">Documents</name></name>
<block pos:line="5" pos:column="1">{
	<class><specifier pos:line="6" pos:column="9">public</specifier> class <name pos:line="6" pos:column="22">DocumentFactory</name>
	<block pos:line="7" pos:column="9">{
		<function><type><specifier pos:line="8" pos:column="17">public</specifier> <specifier pos:line="8" pos:column="24">static</specifier> <name pos:line="8" pos:column="31">SandoDocument</name></type> <name pos:line="8" pos:column="45">Create</name><parameter_list pos:line="8" pos:column="51">(<param><decl><type><name pos:line="8" pos:column="52">ProgramElement</name></type> <name pos:line="8" pos:column="67">programElement</name></decl></param>)</parameter_list>
		<block pos:line="9" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="10" pos:column="25">Contract</name><op:operator pos:line="10" pos:column="33">.</op:operator><name pos:line="10" pos:column="34">Requires</name></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">programElement</name> <op:operator pos:line="10" pos:column="58">!=</op:operator> <name pos:line="10" pos:column="61">null</name></expr></argument><op:operator pos:line="10" pos:column="65">,</op:operator> <argument><expr><lit:literal type="string" pos:line="10" pos:column="67">"DocumentFactory:Create - programElement cannot be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="11" pos:column="25">Contract</name><op:operator pos:line="11" pos:column="33">.</op:operator><name pos:line="11" pos:column="34">Ensures</name></name><argument_list pos:line="11" pos:column="41">(<argument><expr><call><name><name pos:line="11" pos:column="42">Contract</name><op:operator pos:line="11" pos:column="50">.</op:operator><name><name pos:line="11" pos:column="51">Result</name><argument_list pos:line="11" pos:column="57">&lt;<argument><name pos:line="11" pos:column="58">SandoDocument</name></argument>&gt;</argument_list></name></name><argument_list pos:line="11" pos:column="72">()</argument_list></call> <op:operator pos:line="11" pos:column="75">!=</op:operator> <name pos:line="11" pos:column="78">null</name></expr></argument><op:operator pos:line="11" pos:column="82">,</op:operator> <argument><expr><lit:literal type="string" pos:line="11" pos:column="84">"DocumentFactory:Create - an object must be returned from this method!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="13" pos:column="25">if<condition pos:line="13" pos:column="27">(<expr><name pos:line="13" pos:column="28">programElement</name> <op:operator pos:line="13" pos:column="43">as</op:operator> <name pos:line="13" pos:column="46">ClassElement</name> <op:operator pos:line="13" pos:column="59">!=</op:operator> <name pos:line="13" pos:column="62">null</name></expr>)</condition><then pos:line="13" pos:column="67">
			<block pos:line="14" pos:column="25">{
				<return pos:line="15" pos:column="33">return <expr><op:operator pos:line="15" pos:column="40">new</op:operator> <call><name pos:line="15" pos:column="44">ClassDocument</name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">programElement</name> <op:operator pos:line="15" pos:column="73">as</op:operator> <name pos:line="15" pos:column="76">ClassElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<if pos:line="17" pos:column="25">if<condition pos:line="17" pos:column="27">(<expr><name pos:line="17" pos:column="28">programElement</name> <op:operator pos:line="17" pos:column="43">as</op:operator> <name pos:line="17" pos:column="46">CommentElement</name> <op:operator pos:line="17" pos:column="61">!=</op:operator> <name pos:line="17" pos:column="64">null</name></expr>)</condition><then pos:line="17" pos:column="69">
			<block pos:line="18" pos:column="25">{
				<return pos:line="19" pos:column="33">return <expr><op:operator pos:line="19" pos:column="40">new</op:operator> <call><name pos:line="19" pos:column="44">CommentDocument</name><argument_list pos:line="19" pos:column="59">(<argument><expr><name pos:line="19" pos:column="60">programElement</name> <op:operator pos:line="19" pos:column="75">as</op:operator> <name pos:line="19" pos:column="78">CommentElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<if pos:line="21" pos:column="25">if<condition pos:line="21" pos:column="27">(<expr><name pos:line="21" pos:column="28">programElement</name> <op:operator pos:line="21" pos:column="43">as</op:operator> <name pos:line="21" pos:column="46">EnumElement</name> <op:operator pos:line="21" pos:column="58">!=</op:operator> <name pos:line="21" pos:column="61">null</name></expr>)</condition><then pos:line="21" pos:column="66">
			<block pos:line="22" pos:column="25">{
				<return pos:line="23" pos:column="33">return <expr><op:operator pos:line="23" pos:column="40">new</op:operator> <call><name pos:line="23" pos:column="44">EnumDocument</name><argument_list pos:line="23" pos:column="56">(<argument><expr><name pos:line="23" pos:column="57">programElement</name> <op:operator pos:line="23" pos:column="72">as</op:operator> <name pos:line="23" pos:column="75">EnumElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<if pos:line="25" pos:column="25">if<condition pos:line="25" pos:column="27">(<expr><name pos:line="25" pos:column="28">programElement</name> <op:operator pos:line="25" pos:column="43">as</op:operator> <name pos:line="25" pos:column="46">FieldElement</name> <op:operator pos:line="25" pos:column="59">!=</op:operator> <name pos:line="25" pos:column="62">null</name></expr>)</condition><then pos:line="25" pos:column="67">
			<block pos:line="26" pos:column="25">{
				<return pos:line="27" pos:column="33">return <expr><op:operator pos:line="27" pos:column="40">new</op:operator> <call><name pos:line="27" pos:column="44">FieldDocument</name><argument_list pos:line="27" pos:column="57">(<argument><expr><name pos:line="27" pos:column="58">programElement</name> <op:operator pos:line="27" pos:column="73">as</op:operator> <name pos:line="27" pos:column="76">FieldElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<if pos:line="29" pos:column="25">if<condition pos:line="29" pos:column="27">(<expr><name pos:line="29" pos:column="28">programElement</name> <op:operator pos:line="29" pos:column="43">as</op:operator> <name pos:line="29" pos:column="46">MethodElement</name> <op:operator pos:line="29" pos:column="60">!=</op:operator> <name pos:line="29" pos:column="63">null</name></expr>)</condition><then pos:line="29" pos:column="68">
			<block pos:line="30" pos:column="25">{
				<return pos:line="31" pos:column="33">return <expr><op:operator pos:line="31" pos:column="40">new</op:operator> <call><name pos:line="31" pos:column="44">MethodDocument</name><argument_list pos:line="31" pos:column="58">(<argument><expr><name pos:line="31" pos:column="59">programElement</name> <op:operator pos:line="31" pos:column="74">as</op:operator> <name pos:line="31" pos:column="77">MethodElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<if pos:line="33" pos:column="25">if<condition pos:line="33" pos:column="27">(<expr><name pos:line="33" pos:column="28">programElement</name> <op:operator pos:line="33" pos:column="43">as</op:operator> <name pos:line="33" pos:column="46">MethodPrototypeElement</name> <op:operator pos:line="33" pos:column="69">!=</op:operator> <name pos:line="33" pos:column="72">null</name></expr>)</condition><then pos:line="33" pos:column="77">
			<block pos:line="34" pos:column="25">{
				<return pos:line="35" pos:column="33">return <expr><op:operator pos:line="35" pos:column="40">new</op:operator> <call><name pos:line="35" pos:column="44">MethodPrototypeDocument</name><argument_list pos:line="35" pos:column="67">(<argument><expr><name pos:line="35" pos:column="68">programElement</name> <op:operator pos:line="35" pos:column="83">as</op:operator> <name pos:line="35" pos:column="86">MethodPrototypeElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<if pos:line="37" pos:column="25">if<condition pos:line="37" pos:column="27">(<expr><name pos:line="37" pos:column="28">programElement</name> <op:operator pos:line="37" pos:column="43">as</op:operator> <name pos:line="37" pos:column="46">PropertyElement</name> <op:operator pos:line="37" pos:column="62">!=</op:operator> <name pos:line="37" pos:column="65">null</name></expr>)</condition><then pos:line="37" pos:column="70">
			<block pos:line="38" pos:column="25">{
				<return pos:line="39" pos:column="33">return <expr><op:operator pos:line="39" pos:column="40">new</op:operator> <call><name pos:line="39" pos:column="44">PropertyDocument</name><argument_list pos:line="39" pos:column="60">(<argument><expr><name pos:line="39" pos:column="61">programElement</name> <op:operator pos:line="39" pos:column="76">as</op:operator> <name pos:line="39" pos:column="79">PropertyElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">programElement</name> <op:operator pos:line="41" pos:column="32">as</op:operator> <name pos:line="41" pos:column="35">StructElement</name> <op:operator pos:line="41" pos:column="49">!=</op:operator> <name pos:line="41" pos:column="52">null</name></expr>)</condition><then pos:line="41" pos:column="57">
            <block pos:line="42" pos:column="13">{
                <return pos:line="43" pos:column="17">return <expr><op:operator pos:line="43" pos:column="24">new</op:operator> <call><name pos:line="43" pos:column="28">StructDocument</name><argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">programElement</name> <op:operator pos:line="43" pos:column="58">as</op:operator> <name pos:line="43" pos:column="61">StructElement</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></then></if>
			<if pos:line="45" pos:column="25">if<condition pos:line="45" pos:column="27">(<expr><name pos:line="45" pos:column="28">programElement</name> <op:operator pos:line="45" pos:column="43">as</op:operator> <name pos:line="45" pos:column="46">TextLineElement</name> <op:operator pos:line="45" pos:column="62">!=</op:operator> <name pos:line="45" pos:column="65">null</name></expr>)</condition><then pos:line="45" pos:column="70">
			<block pos:line="46" pos:column="25">{
				<return pos:line="47" pos:column="33">return <expr><op:operator pos:line="47" pos:column="40">new</op:operator> <call><name pos:line="47" pos:column="44">TextLineDocument</name><argument_list pos:line="47" pos:column="60">(<argument><expr><name pos:line="47" pos:column="61">programElement</name> <op:operator pos:line="47" pos:column="76">as</op:operator> <name pos:line="47" pos:column="79">TextLineElement</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
            <if pos:line="49" pos:column="13">if<condition pos:line="49" pos:column="15">(<expr><call><name><name pos:line="49" pos:column="16">programElement</name><op:operator pos:line="49" pos:column="30">.</op:operator><name pos:line="49" pos:column="31">GetCustomProperties</name></name><argument_list pos:line="49" pos:column="50">()</argument_list></call><op:operator pos:line="49" pos:column="52">.</op:operator><name pos:line="49" pos:column="53">Count</name><op:operator pos:line="49" pos:column="58">&gt;</op:operator><lit:literal type="number" pos:line="49" pos:column="59">0</lit:literal></expr>)</condition><then pos:line="49" pos:column="61">
            <block pos:line="50" pos:column="13">{
                <return pos:line="51" pos:column="17">return <expr><op:operator pos:line="51" pos:column="24">new</op:operator> <call><name pos:line="51" pos:column="28">SandoDocument</name><argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">programElement</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></then></if>

			<comment type="line" pos:line="54" pos:column="25">//if this code is reached, contract will fail</comment>
			<return pos:line="55" pos:column="25">return <expr><name pos:line="55" pos:column="32">null</name></expr>;</return>
		}</block></function>
	}</block></class>

  
}</block></namespace>
</unit>
