<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer.UnitTests\DocumentIndexerTest.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Diagnostics</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Contracts</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Threading</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Analysis</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Lucene</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Net</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">Search</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">NUnit</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Framework</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Core</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">ExtensionContracts</name><op:operator pos:line="10" pos:column="31">.</op:operator><name pos:line="10" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Indexer</name><op:operator pos:line="11" pos:column="20">.</op:operator><name pos:line="11" pos:column="21">Documents</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">UnitTestHelpers</name></name>;</using>
<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">UnitTestHelpers</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">ABB</name><op:operator pos:line="14" pos:column="10">.</op:operator><name pos:line="14" pos:column="11">SrcML</name><op:operator pos:line="14" pos:column="16">.</op:operator><name pos:line="14" pos:column="17">VisualStudio</name><op:operator pos:line="14" pos:column="29">.</op:operator><name pos:line="14" pos:column="30">SolutionMonitor</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Sando</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">Core</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">Tools</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Sando</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">Indexer</name><op:operator pos:line="16" pos:column="20">.</op:operator><name pos:line="16" pos:column="21">Searching</name><op:operator pos:line="16" pos:column="30">.</op:operator><name pos:line="16" pos:column="31">Criteria</name></name>;</using>

<namespace pos:line="18" pos:column="1">namespace <name><name pos:line="18" pos:column="11">Sando</name><op:operator pos:line="18" pos:column="16">.</op:operator><name pos:line="18" pos:column="17">Indexer</name><op:operator pos:line="18" pos:column="24">.</op:operator><name pos:line="18" pos:column="25">UnitTests</name></name>
<block pos:line="19" pos:column="1">{
    <class><attribute pos:line="20" pos:column="5">[<expr><name pos:line="20" pos:column="6">TestFixture</name></expr>]</attribute>
	<specifier pos:line="21" pos:column="9">public</specifier> class <name pos:line="21" pos:column="22">DocumentIndexerTest</name>
	<block pos:line="22" pos:column="9">{
    	<function><type><attribute pos:line="23" pos:column="9">[<expr><name pos:line="23" pos:column="10">Test</name></expr>]</attribute>
		<specifier pos:line="24" pos:column="17">public</specifier> <name pos:line="24" pos:column="24">void</name></type> <name pos:line="24" pos:column="29">DocumentIndexer_ConstructorDoesNotThrowWhenValidData</name><parameter_list pos:line="24" pos:column="81">()</parameter_list>
		<block pos:line="25" pos:column="17">{
			<try pos:line="26" pos:column="25">try
			<block pos:line="27" pos:column="25">{
				<expr_stmt><expr><name pos:line="28" pos:column="33">_documentIndexer</name> <op:operator pos:line="28" pos:column="50">=</op:operator> <op:operator pos:line="28" pos:column="52">new</op:operator> <call><name pos:line="28" pos:column="56">DocumentIndexer</name><argument_list pos:line="28" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
			}</block>
			<catch pos:line="30" pos:column="25">catch(<param><decl><type><name pos:line="30" pos:column="31">Exception</name></type> <name pos:line="30" pos:column="41">ex</name></decl></param>)
			<block pos:line="31" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="32" pos:column="33">Assert</name><op:operator pos:line="32" pos:column="39">.</op:operator><name pos:line="32" pos:column="40">Fail</name></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name><name pos:line="32" pos:column="45">ex</name><op:operator pos:line="32" pos:column="47">.</op:operator><name pos:line="32" pos:column="48">Message</name></name> <op:operator pos:line="32" pos:column="56">+</op:operator> <lit:literal type="string" pos:line="32" pos:column="58">". "</lit:literal> <op:operator pos:line="32" pos:column="63">+</op:operator> <name><name pos:line="32" pos:column="65">ex</name><op:operator pos:line="32" pos:column="67">.</op:operator><name pos:line="32" pos:column="68">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></function>

		<function><type><attribute pos:line="36" pos:column="17">[<expr><name pos:line="36" pos:column="18">Test</name></expr>]</attribute>
		<specifier pos:line="37" pos:column="17">public</specifier> <name pos:line="37" pos:column="24">void</name></type> <name pos:line="37" pos:column="29">DocumentIndexer_AddDocumentDoesNotThrowWhenValidData</name><parameter_list pos:line="37" pos:column="81">()</parameter_list>
		<block pos:line="38" pos:column="17">{
			<try pos:line="39" pos:column="25">try
			<block pos:line="40" pos:column="25">{
                <expr_stmt><expr><name pos:line="41" pos:column="17">_documentIndexer</name> <op:operator pos:line="41" pos:column="34">=</op:operator> <op:operator pos:line="41" pos:column="36">new</op:operator> <call><name pos:line="41" pos:column="40">DocumentIndexer</name><argument_list pos:line="41" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="42" pos:column="33">ClassElement</name></type> <name pos:line="42" pos:column="46">classElement</name> =<init pos:line="42" pos:column="60"> <expr><call><name><name pos:line="42" pos:column="61">SampleProgramElementFactory</name><op:operator pos:line="42" pos:column="88">.</op:operator><name pos:line="42" pos:column="89">GetSampleClassElement</name></name><argument_list pos:line="42" pos:column="110">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="43" pos:column="33">SandoDocument</name></type> <name pos:line="43" pos:column="47">sandoDocument</name> =<init pos:line="43" pos:column="62"> <expr><call><name><name pos:line="43" pos:column="63">DocumentFactory</name><op:operator pos:line="43" pos:column="78">.</op:operator><name pos:line="43" pos:column="79">Create</name></name><argument_list pos:line="43" pos:column="85">(<argument><expr><name pos:line="43" pos:column="86">classElement</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="44" pos:column="33">Assert</name><op:operator pos:line="44" pos:column="39">.</op:operator><name pos:line="44" pos:column="40">NotNull</name></name><argument_list pos:line="44" pos:column="47">(<argument><expr><name pos:line="44" pos:column="48">sandoDocument</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="45" pos:column="33">Assert</name><op:operator pos:line="45" pos:column="39">.</op:operator><name pos:line="45" pos:column="40">NotNull</name></name><argument_list pos:line="45" pos:column="47">(<argument><expr><call><name><name pos:line="45" pos:column="48">sandoDocument</name><op:operator pos:line="45" pos:column="61">.</op:operator><name pos:line="45" pos:column="62">GetDocument</name></name><argument_list pos:line="45" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="46" pos:column="33">_documentIndexer</name><op:operator pos:line="46" pos:column="49">.</op:operator><name pos:line="46" pos:column="50">AddDocument</name></name><argument_list pos:line="46" pos:column="61">(<argument><expr><name pos:line="46" pos:column="62">sandoDocument</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<catch pos:line="48" pos:column="25">catch(<param><decl><type><name pos:line="48" pos:column="31">Exception</name></type> <name pos:line="48" pos:column="41">ex</name></decl></param>)
			<block pos:line="49" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="50" pos:column="33">Assert</name><op:operator pos:line="50" pos:column="39">.</op:operator><name pos:line="50" pos:column="40">Fail</name></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name><name pos:line="50" pos:column="45">ex</name><op:operator pos:line="50" pos:column="47">.</op:operator><name pos:line="50" pos:column="48">Message</name></name> <op:operator pos:line="50" pos:column="56">+</op:operator> <lit:literal type="string" pos:line="50" pos:column="58">". "</lit:literal> <op:operator pos:line="50" pos:column="63">+</op:operator> <name><name pos:line="50" pos:column="65">ex</name><op:operator pos:line="50" pos:column="67">.</op:operator><name pos:line="50" pos:column="68">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></function>

		<function><type><attribute pos:line="54" pos:column="17">[<expr><name pos:line="54" pos:column="18">Test</name></expr>]</attribute>
		<specifier pos:line="55" pos:column="17">public</specifier> <name pos:line="55" pos:column="24">void</name></type> <name pos:line="55" pos:column="29">DocumentIndexer_AddDocumentThrowsWhenProgramElementIsNull</name><parameter_list pos:line="55" pos:column="86">()</parameter_list>
		<block pos:line="56" pos:column="17">{
			<expr_stmt><expr><name pos:line="57" pos:column="25">_documentIndexer</name> <op:operator pos:line="57" pos:column="42">=</op:operator> <op:operator pos:line="57" pos:column="44">new</op:operator> <call><name pos:line="57" pos:column="48">DocumentIndexer</name><argument_list pos:line="57" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
			<try pos:line="58" pos:column="25">try
			<block pos:line="59" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="60" pos:column="33">_documentIndexer</name><op:operator pos:line="60" pos:column="49">.</op:operator><name pos:line="60" pos:column="50">AddDocument</name></name><argument_list pos:line="60" pos:column="61">(<argument><expr><name pos:line="60" pos:column="62">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<catch pos:line="62" pos:column="25">catch
			<block pos:line="63" pos:column="25">{
				<comment type="line" pos:line="64" pos:column="33">//contract exception catched here</comment>
			}</block></catch></try>
			<expr_stmt><expr><call><name><name pos:line="66" pos:column="25">Assert</name><op:operator pos:line="66" pos:column="31">.</op:operator><name pos:line="66" pos:column="32">True</name></name><argument_list pos:line="66" pos:column="36">(<argument><expr><name pos:line="66" pos:column="37">_contractFailed</name></expr></argument><op:operator pos:line="66" pos:column="52">,</op:operator> <argument><expr><lit:literal type="string" pos:line="66" pos:column="54">"Contract should fail!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

        <function><type><attribute pos:line="69" pos:column="9">[<expr><name pos:line="69" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="70" pos:column="9">public</specifier> <name pos:line="70" pos:column="16">void</name></type> <name pos:line="70" pos:column="21">DocumentIndexer_DeleteDocuments</name><parameter_list pos:line="70" pos:column="52">()</parameter_list>
        <block pos:line="71" pos:column="9">{
            <try pos:line="72" pos:column="13">try
            <block pos:line="73" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="74" pos:column="17">TestUtils</name><op:operator pos:line="74" pos:column="26">.</op:operator><name pos:line="74" pos:column="27">ClearDirectory</name></name><argument_list pos:line="74" pos:column="41">(<argument><expr><call><name><name pos:line="74" pos:column="42">PathManager</name><op:operator pos:line="74" pos:column="53">.</op:operator><name pos:line="74" pos:column="54">Instance</name><op:operator pos:line="74" pos:column="62">.</op:operator><name pos:line="74" pos:column="63">GetIndexPath</name></name><argument_list pos:line="74" pos:column="75">(<argument><expr><call><name><name pos:line="74" pos:column="76">ServiceLocator</name><op:operator pos:line="74" pos:column="90">.</op:operator><name><name pos:line="74" pos:column="91">Resolve</name><argument_list pos:line="74" pos:column="98">&lt;<argument><name pos:line="74" pos:column="99">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="74" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">_documentIndexer</name> <op:operator pos:line="75" pos:column="34">=</op:operator> <op:operator pos:line="75" pos:column="36">new</op:operator> <call><name pos:line="75" pos:column="40">DocumentIndexer</name><argument_list pos:line="75" pos:column="55">(<argument><expr><call><name><name pos:line="75" pos:column="56">TimeSpan</name><op:operator pos:line="75" pos:column="64">.</op:operator><name pos:line="75" pos:column="65">FromSeconds</name></name><argument_list pos:line="75" pos:column="76">(<argument><expr><lit:literal type="number" pos:line="75" pos:column="77">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="76" pos:column="17">MethodElement</name></type> <name pos:line="76" pos:column="31">sampleMethodElement</name> =<init pos:line="76" pos:column="52"> <expr><call><name><name pos:line="76" pos:column="53">SampleProgramElementFactory</name><op:operator pos:line="76" pos:column="80">.</op:operator><name pos:line="76" pos:column="81">GetSampleMethodElement</name></name><argument_list pos:line="76" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="77" pos:column="17">_documentIndexer</name><op:operator pos:line="77" pos:column="33">.</op:operator><name pos:line="77" pos:column="34">AddDocument</name></name><argument_list pos:line="77" pos:column="45">(<argument><expr><call><name><name pos:line="77" pos:column="46">DocumentFactory</name><op:operator pos:line="77" pos:column="61">.</op:operator><name pos:line="77" pos:column="62">Create</name></name><argument_list pos:line="77" pos:column="68">(<argument><expr><name pos:line="77" pos:column="69">sampleMethodElement</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="78" pos:column="17">int</name></type> <name pos:line="78" pos:column="21">numDocs</name> =<init pos:line="78" pos:column="30"> <expr><call><name><name pos:line="78" pos:column="31">_documentIndexer</name><op:operator pos:line="78" pos:column="47">.</op:operator><name pos:line="78" pos:column="48">GetNumberOfIndexedDocuments</name></name><argument_list pos:line="78" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="79" pos:column="17">Assert</name><op:operator pos:line="79" pos:column="23">.</op:operator><name pos:line="79" pos:column="24">IsTrue</name></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name pos:line="79" pos:column="31">numDocs</name> <op:operator pos:line="79" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="79" pos:column="42">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="80" pos:column="17">_documentIndexer</name><op:operator pos:line="80" pos:column="33">.</op:operator><name pos:line="80" pos:column="34">DeleteDocuments</name></name><argument_list pos:line="80" pos:column="49">(<argument><expr><name><name pos:line="80" pos:column="50">sampleMethodElement</name><op:operator pos:line="80" pos:column="69">.</op:operator><name pos:line="80" pos:column="70">FullFilePath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="81" pos:column="17">int</name></type> <name pos:line="81" pos:column="21">docs</name> =<init pos:line="81" pos:column="27"> <expr><call><name><name pos:line="81" pos:column="28">_documentIndexer</name><op:operator pos:line="81" pos:column="44">.</op:operator><name pos:line="81" pos:column="45">GetNumberOfIndexedDocuments</name></name><argument_list pos:line="81" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="82" pos:column="17">Assert</name><op:operator pos:line="82" pos:column="23">.</op:operator><name pos:line="82" pos:column="24">IsTrue</name></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">docs</name> <op:operator pos:line="82" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="82" pos:column="39">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="84" pos:column="13">catch (<param><decl><type><name pos:line="84" pos:column="20">Exception</name></type> <name pos:line="84" pos:column="30">ex</name></decl></param>)
            <block pos:line="85" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="86" pos:column="17">Assert</name><op:operator pos:line="86" pos:column="23">.</op:operator><name pos:line="86" pos:column="24">Fail</name></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name><name pos:line="86" pos:column="29">ex</name><op:operator pos:line="86" pos:column="31">.</op:operator><name pos:line="86" pos:column="32">Message</name></name> <op:operator pos:line="86" pos:column="40">+</op:operator> <lit:literal type="string" pos:line="86" pos:column="42">". "</lit:literal> <op:operator pos:line="86" pos:column="47">+</op:operator> <name><name pos:line="86" pos:column="49">ex</name><op:operator pos:line="86" pos:column="51">.</op:operator><name pos:line="86" pos:column="52">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><attribute pos:line="90" pos:column="9">[<expr><name pos:line="90" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">void</name></type> <name pos:line="91" pos:column="21">GIVEN_DocumentIndexer_WHEN_IndexSearcherIsClosed_AND_SearchFailed_THEN_IndexSearcherIsRecreated_AND_SearchReturnsResults</name><parameter_list pos:line="91" pos:column="141">()</parameter_list>
        <block pos:line="92" pos:column="9">{
            <try pos:line="93" pos:column="13">try
            <block pos:line="94" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="95" pos:column="17">TestUtils</name><op:operator pos:line="95" pos:column="26">.</op:operator><name pos:line="95" pos:column="27">ClearDirectory</name></name><argument_list pos:line="95" pos:column="41">(<argument><expr><call><name><name pos:line="95" pos:column="42">PathManager</name><op:operator pos:line="95" pos:column="53">.</op:operator><name pos:line="95" pos:column="54">Instance</name><op:operator pos:line="95" pos:column="62">.</op:operator><name pos:line="95" pos:column="63">GetIndexPath</name></name><argument_list pos:line="95" pos:column="75">(<argument><expr><call><name><name pos:line="95" pos:column="76">ServiceLocator</name><op:operator pos:line="95" pos:column="90">.</op:operator><name><name pos:line="95" pos:column="91">Resolve</name><argument_list pos:line="95" pos:column="98">&lt;<argument><name pos:line="95" pos:column="99">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="95" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="96" pos:column="17">_documentIndexer</name> <op:operator pos:line="96" pos:column="34">=</op:operator> <op:operator pos:line="96" pos:column="36">new</op:operator> <call><name pos:line="96" pos:column="40">DocumentIndexer</name><argument_list pos:line="96" pos:column="55">(<argument><expr><call><name><name pos:line="96" pos:column="56">TimeSpan</name><op:operator pos:line="96" pos:column="64">.</op:operator><name pos:line="96" pos:column="65">FromMilliseconds</name></name><argument_list pos:line="96" pos:column="81">(<argument><expr><lit:literal type="number" pos:line="96" pos:column="82">500</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="97" pos:column="17">var</name></type> <name pos:line="97" pos:column="21">sampleMethodElement</name> =<init pos:line="97" pos:column="42"> <expr><call><name><name pos:line="97" pos:column="43">SampleProgramElementFactory</name><op:operator pos:line="97" pos:column="70">.</op:operator><name pos:line="97" pos:column="71">GetSampleMethodElement</name></name><argument_list pos:line="97" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="98" pos:column="17">_documentIndexer</name><op:operator pos:line="98" pos:column="33">.</op:operator><name pos:line="98" pos:column="34">AddDocument</name></name><argument_list pos:line="98" pos:column="45">(<argument><expr><call><name><name pos:line="98" pos:column="46">DocumentFactory</name><op:operator pos:line="98" pos:column="61">.</op:operator><name pos:line="98" pos:column="62">Create</name></name><argument_list pos:line="98" pos:column="68">(<argument><expr><name pos:line="98" pos:column="69">sampleMethodElement</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="99" pos:column="17">const</name> <name pos:line="99" pos:column="23">string</name></type> <name pos:line="99" pos:column="30">searchQueryString</name> =<init pos:line="99" pos:column="49"> <expr><lit:literal type="string" pos:line="99" pos:column="50">"body: sth"</lit:literal></expr></init></decl>;</decl_stmt>
			    <decl_stmt><decl><type><name pos:line="100" pos:column="29">var</name></type> <name pos:line="100" pos:column="33">query</name> =<init pos:line="100" pos:column="40"> <expr><call><name><name pos:line="100" pos:column="41">_documentIndexer</name><op:operator pos:line="100" pos:column="57">.</op:operator><name pos:line="100" pos:column="58">QueryParser</name><op:operator pos:line="100" pos:column="69">.</op:operator><name pos:line="100" pos:column="70">Parse</name></name><argument_list pos:line="100" pos:column="75">(<argument><expr><name pos:line="100" pos:column="76">searchQueryString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			    <decl_stmt><decl><type><name pos:line="101" pos:column="29">int</name></type> <name pos:line="101" pos:column="33">hitsPerPage</name> =<init pos:line="101" pos:column="46"> <expr><name><name pos:line="101" pos:column="47">SearchCriteria</name><op:operator pos:line="101" pos:column="61">.</op:operator><name pos:line="101" pos:column="62">DefaultNumberOfSearchResultsReturned</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="102" pos:column="17">var</name></type> <name pos:line="102" pos:column="21">collector</name> =<init pos:line="102" pos:column="32"> <expr><call><name><name pos:line="102" pos:column="33">TopScoreDocCollector</name><op:operator pos:line="102" pos:column="53">.</op:operator><name pos:line="102" pos:column="54">create</name></name><argument_list pos:line="102" pos:column="60">(<argument><expr><name pos:line="102" pos:column="61">hitsPerPage</name></expr></argument><op:operator pos:line="102" pos:column="72">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="102" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="103" pos:column="17">_documentIndexer</name><op:operator pos:line="103" pos:column="33">.</op:operator><name pos:line="103" pos:column="34">NUnit_CloseIndexSearcher</name></name><argument_list pos:line="103" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="104" pos:column="17">_documentIndexer</name><op:operator pos:line="104" pos:column="33">.</op:operator><name pos:line="104" pos:column="34">Search</name></name><argument_list pos:line="104" pos:column="40">(<argument><expr><name pos:line="104" pos:column="41">query</name></expr></argument><op:operator pos:line="104" pos:column="46">,</op:operator> <argument><expr><name pos:line="104" pos:column="48">collector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="106" pos:column="13">catch (<param><decl><type><name pos:line="106" pos:column="20">Exception</name></type> <name pos:line="106" pos:column="30">ex</name></decl></param>)
            <block pos:line="107" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="108" pos:column="17">Assert</name><op:operator pos:line="108" pos:column="23">.</op:operator><name pos:line="108" pos:column="24">Fail</name></name><argument_list pos:line="108" pos:column="28">(<argument><expr><name><name pos:line="108" pos:column="29">ex</name><op:operator pos:line="108" pos:column="31">.</op:operator><name pos:line="108" pos:column="32">Message</name></name> <op:operator pos:line="108" pos:column="40">+</op:operator> <lit:literal type="string" pos:line="108" pos:column="42">". "</lit:literal> <op:operator pos:line="108" pos:column="47">+</op:operator> <name><name pos:line="108" pos:column="49">ex</name><op:operator pos:line="108" pos:column="51">.</op:operator><name pos:line="108" pos:column="52">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><attribute pos:line="112" pos:column="9">[<expr><name pos:line="112" pos:column="10">Test</name></expr>]</attribute>
        <specifier pos:line="113" pos:column="9">public</specifier> <name pos:line="113" pos:column="16">void</name></type> <name pos:line="113" pos:column="21">GIVEN_DocumentIndexer_WHEN_IndexSearcherIsClosed_THEN_IndexSearcherIsRecreatedInBackgroundThread_AND_SearchReturnsResults</name><parameter_list pos:line="113" pos:column="142">()</parameter_list>
        <block pos:line="114" pos:column="9">{
            <try pos:line="115" pos:column="13">try
            <block pos:line="116" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="117" pos:column="17">TestUtils</name><op:operator pos:line="117" pos:column="26">.</op:operator><name pos:line="117" pos:column="27">ClearDirectory</name></name><argument_list pos:line="117" pos:column="41">(<argument><expr><call><name><name pos:line="117" pos:column="42">PathManager</name><op:operator pos:line="117" pos:column="53">.</op:operator><name pos:line="117" pos:column="54">Instance</name><op:operator pos:line="117" pos:column="62">.</op:operator><name pos:line="117" pos:column="63">GetIndexPath</name></name><argument_list pos:line="117" pos:column="75">(<argument><expr><call><name><name pos:line="117" pos:column="76">ServiceLocator</name><op:operator pos:line="117" pos:column="90">.</op:operator><name><name pos:line="117" pos:column="91">Resolve</name><argument_list pos:line="117" pos:column="98">&lt;<argument><name pos:line="117" pos:column="99">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="117" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="118" pos:column="17">_documentIndexer</name> <op:operator pos:line="118" pos:column="34">=</op:operator> <op:operator pos:line="118" pos:column="36">new</op:operator> <call><name pos:line="118" pos:column="40">DocumentIndexer</name><argument_list pos:line="118" pos:column="55">(<argument><expr><call><name><name pos:line="118" pos:column="56">TimeSpan</name><op:operator pos:line="118" pos:column="64">.</op:operator><name pos:line="118" pos:column="65">FromMilliseconds</name></name><argument_list pos:line="118" pos:column="81">(<argument><expr><lit:literal type="number" pos:line="118" pos:column="82">100</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="119" pos:column="17">var</name></type> <name pos:line="119" pos:column="21">sampleMethodElement</name> =<init pos:line="119" pos:column="42"> <expr><call><name><name pos:line="119" pos:column="43">SampleProgramElementFactory</name><op:operator pos:line="119" pos:column="70">.</op:operator><name pos:line="119" pos:column="71">GetSampleMethodElement</name></name><argument_list pos:line="119" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="120" pos:column="17">_documentIndexer</name><op:operator pos:line="120" pos:column="33">.</op:operator><name pos:line="120" pos:column="34">AddDocument</name></name><argument_list pos:line="120" pos:column="45">(<argument><expr><call><name><name pos:line="120" pos:column="46">DocumentFactory</name><op:operator pos:line="120" pos:column="61">.</op:operator><name pos:line="120" pos:column="62">Create</name></name><argument_list pos:line="120" pos:column="68">(<argument><expr><name pos:line="120" pos:column="69">sampleMethodElement</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="121" pos:column="17">const</name> <name pos:line="121" pos:column="23">string</name></type> <name pos:line="121" pos:column="30">searchQueryString</name> =<init pos:line="121" pos:column="49"> <expr><lit:literal type="string" pos:line="121" pos:column="50">"body: sth"</lit:literal></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="122" pos:column="17">var</name></type> <name pos:line="122" pos:column="21">query</name> =<init pos:line="122" pos:column="28"> <expr><call><name><name pos:line="122" pos:column="29">_documentIndexer</name><op:operator pos:line="122" pos:column="45">.</op:operator><name pos:line="122" pos:column="46">QueryParser</name><op:operator pos:line="122" pos:column="57">.</op:operator><name pos:line="122" pos:column="58">Parse</name></name><argument_list pos:line="122" pos:column="63">(<argument><expr><name pos:line="122" pos:column="64">searchQueryString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="123" pos:column="17">int</name></type> <name pos:line="123" pos:column="21">hitsPerPage</name> =<init pos:line="123" pos:column="34"> <expr><name><name pos:line="123" pos:column="35">SearchCriteria</name><op:operator pos:line="123" pos:column="49">.</op:operator><name pos:line="123" pos:column="50">DefaultNumberOfSearchResultsReturned</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="124" pos:column="17">var</name></type> <name pos:line="124" pos:column="21">collector</name> =<init pos:line="124" pos:column="32"> <expr><call><name><name pos:line="124" pos:column="33">TopScoreDocCollector</name><op:operator pos:line="124" pos:column="53">.</op:operator><name pos:line="124" pos:column="54">create</name></name><argument_list pos:line="124" pos:column="60">(<argument><expr><name pos:line="124" pos:column="61">hitsPerPage</name></expr></argument><op:operator pos:line="124" pos:column="72">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="124" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="125" pos:column="17">_documentIndexer</name><op:operator pos:line="125" pos:column="33">.</op:operator><name pos:line="125" pos:column="34">NUnit_CloseIndexSearcher</name></name><argument_list pos:line="125" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="126" pos:column="17">Thread</name><op:operator pos:line="126" pos:column="23">.</op:operator><name pos:line="126" pos:column="24">Sleep</name></name><argument_list pos:line="126" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="126" pos:column="30">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="127" pos:column="17">_documentIndexer</name><op:operator pos:line="127" pos:column="33">.</op:operator><name pos:line="127" pos:column="34">Search</name></name><argument_list pos:line="127" pos:column="40">(<argument><expr><name pos:line="127" pos:column="41">query</name></expr></argument><op:operator pos:line="127" pos:column="46">,</op:operator> <argument><expr><name pos:line="127" pos:column="48">collector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="129" pos:column="13">catch (<param><decl><type><name pos:line="129" pos:column="20">Exception</name></type> <name pos:line="129" pos:column="30">ex</name></decl></param>)
            <block pos:line="130" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="131" pos:column="17">Assert</name><op:operator pos:line="131" pos:column="23">.</op:operator><name pos:line="131" pos:column="24">Fail</name></name><argument_list pos:line="131" pos:column="28">(<argument><expr><name><name pos:line="131" pos:column="29">ex</name><op:operator pos:line="131" pos:column="31">.</op:operator><name pos:line="131" pos:column="32">Message</name></name> <op:operator pos:line="131" pos:column="40">+</op:operator> <lit:literal type="string" pos:line="131" pos:column="42">". "</lit:literal> <op:operator pos:line="131" pos:column="47">+</op:operator> <name><name pos:line="131" pos:column="49">ex</name><op:operator pos:line="131" pos:column="51">.</op:operator><name pos:line="131" pos:column="52">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><attribute pos:line="135" pos:column="9">[<expr><name pos:line="135" pos:column="10">SetUp</name></expr>]</attribute>
        <specifier pos:line="136" pos:column="9">public</specifier> <name pos:line="136" pos:column="16">void</name></type> <name pos:line="136" pos:column="21">ResetContract</name><parameter_list pos:line="136" pos:column="34">()</parameter_list>
        <block pos:line="137" pos:column="9">{
            <expr_stmt><expr><name pos:line="138" pos:column="13">_contractFailed</name> <op:operator pos:line="138" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="138" pos:column="31">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="139" pos:column="13">Contract</name><op:operator pos:line="139" pos:column="21">.</op:operator><name pos:line="139" pos:column="22">ContractFailed</name></name> <op:operator pos:line="139" pos:column="37">+=</op:operator> <op:operator pos:line="139" pos:column="40">(</op:operator><name pos:line="139" pos:column="41">sender</name><op:operator pos:line="139" pos:column="47">,</op:operator> <name pos:line="139" pos:column="49">e</name><op:operator pos:line="139" pos:column="50">)</op:operator> =&gt;
            <block pos:line="140" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="141" pos:column="17">e</name><op:operator pos:line="141" pos:column="18">.</op:operator><name pos:line="141" pos:column="19">SetHandled</name></name><argument_list pos:line="141" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="142" pos:column="17">e</name><op:operator pos:line="142" pos:column="18">.</op:operator><name pos:line="142" pos:column="19">SetUnwind</name></name><argument_list pos:line="142" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="143" pos:column="17">_contractFailed</name> <op:operator pos:line="143" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="143" pos:column="35">true</lit:literal></expr>;</expr_stmt>
            }</block></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="145" pos:column="13">ServiceLocator</name><op:operator pos:line="145" pos:column="27">.</op:operator><name><name pos:line="145" pos:column="28">RegisterType</name><argument_list pos:line="145" pos:column="40">&lt;<argument><name pos:line="145" pos:column="41">Analyzer</name></argument>, <argument><name pos:line="145" pos:column="51">SimpleAnalyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="145" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

		<function><type><attribute pos:line="148" pos:column="17">[<expr><name pos:line="148" pos:column="18">TestFixtureSetUp</name></expr>]</attribute>
		<specifier pos:line="149" pos:column="17">public</specifier> <name pos:line="149" pos:column="24">void</name></type> <name pos:line="149" pos:column="29">SetUp</name><parameter_list pos:line="149" pos:column="34">()</parameter_list>
		<block pos:line="150" pos:column="17">{
            <expr_stmt><expr><call><name><name pos:line="151" pos:column="13">TestUtils</name><op:operator pos:line="151" pos:column="22">.</op:operator><name pos:line="151" pos:column="23">InitializeDefaultExtensionPoints</name></name><argument_list pos:line="151" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		    <decl_stmt><decl><type><name pos:line="152" pos:column="21">var</name></type> <name pos:line="152" pos:column="25">solutionKey</name> =<init pos:line="152" pos:column="38"> <expr><call><name><name pos:line="152" pos:column="39">ServiceLocator</name><op:operator pos:line="152" pos:column="53">.</op:operator><name><name pos:line="152" pos:column="54">Resolve</name><argument_list pos:line="152" pos:column="61">&lt;<argument><name pos:line="152" pos:column="62">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="152" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		    <decl_stmt><decl><type><name pos:line="153" pos:column="21">var</name></type> <name pos:line="153" pos:column="25">newSolutionKey</name> =<init pos:line="153" pos:column="41"> <expr><op:operator pos:line="153" pos:column="42">new</op:operator> <call><name pos:line="153" pos:column="46">SolutionKey</name><argument_list pos:line="153" pos:column="57">(<argument><expr><call><name><name pos:line="153" pos:column="58">solutionKey</name><op:operator pos:line="153" pos:column="69">.</op:operator><name pos:line="153" pos:column="70">GetSolutionId</name></name><argument_list pos:line="153" pos:column="83">()</argument_list></call></expr></argument><op:operator pos:line="153" pos:column="85">,</op:operator> <argument><expr><call><name><name pos:line="153" pos:column="87">solutionKey</name><op:operator pos:line="153" pos:column="98">.</op:operator><name pos:line="153" pos:column="99">GetSolutionPath</name></name><argument_list pos:line="153" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		    <expr_stmt><expr><call><name><name pos:line="154" pos:column="21">ServiceLocator</name><op:operator pos:line="154" pos:column="35">.</op:operator><name pos:line="154" pos:column="36">RegisterInstance</name></name><argument_list pos:line="154" pos:column="52">(<argument><expr><name pos:line="154" pos:column="53">newSolutionKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		    <expr_stmt><expr><call><name><name pos:line="155" pos:column="21">ServiceLocator</name><op:operator pos:line="155" pos:column="35">.</op:operator><name><name pos:line="155" pos:column="36">RegisterType</name><argument_list pos:line="155" pos:column="48">&lt;<argument><name pos:line="155" pos:column="49">Analyzer</name></argument>, <argument><name pos:line="155" pos:column="59">SimpleAnalyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="155" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><attribute pos:line="158" pos:column="17">[<expr><name pos:line="158" pos:column="18">TearDown</name></expr>]</attribute>
		<specifier pos:line="159" pos:column="17">public</specifier> <name pos:line="159" pos:column="24">void</name></type> <name pos:line="159" pos:column="29">CloseDocumentIndexer</name><parameter_list pos:line="159" pos:column="49">()</parameter_list>
		<block pos:line="160" pos:column="17">{
			<if pos:line="161" pos:column="25">if<condition pos:line="161" pos:column="27">(<expr><name pos:line="161" pos:column="28">_documentIndexer</name> <op:operator pos:line="161" pos:column="45">!=</op:operator> <name pos:line="161" pos:column="48">null</name></expr>)</condition><then pos:line="161" pos:column="53">
                <expr_stmt><expr><call><name><name pos:line="162" pos:column="17">_documentIndexer</name><op:operator pos:line="162" pos:column="33">.</op:operator><name pos:line="162" pos:column="34">Dispose</name></name><argument_list pos:line="162" pos:column="41">(<argument><expr><lit:literal type="boolean" pos:line="162" pos:column="42">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></function>

        <function><type><attribute pos:line="165" pos:column="9">[<expr><name pos:line="165" pos:column="10">TestFixtureTearDown</name></expr>]</attribute>
        <specifier pos:line="166" pos:column="9">public</specifier> <name pos:line="166" pos:column="16">void</name></type> <name pos:line="166" pos:column="21">TearDown</name><parameter_list pos:line="166" pos:column="29">()</parameter_list>
        <block pos:line="167" pos:column="9">{
            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">(<expr><call><name><name pos:line="168" pos:column="17">Directory</name><op:operator pos:line="168" pos:column="26">.</op:operator><name pos:line="168" pos:column="27">Exists</name></name><argument_list pos:line="168" pos:column="33">(<argument><expr><call><name><name pos:line="168" pos:column="34">PathManager</name><op:operator pos:line="168" pos:column="45">.</op:operator><name pos:line="168" pos:column="46">Instance</name><op:operator pos:line="168" pos:column="54">.</op:operator><name pos:line="168" pos:column="55">GetIndexPath</name></name><argument_list pos:line="168" pos:column="67">(<argument><expr><call><name><name pos:line="168" pos:column="68">ServiceLocator</name><op:operator pos:line="168" pos:column="82">.</op:operator><name><name pos:line="168" pos:column="83">Resolve</name><argument_list pos:line="168" pos:column="90">&lt;<argument><name pos:line="168" pos:column="91">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="168" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="168" pos:column="108">
                <expr_stmt><expr><call><name><name pos:line="169" pos:column="17">Directory</name><op:operator pos:line="169" pos:column="26">.</op:operator><name pos:line="169" pos:column="27">Delete</name></name><argument_list pos:line="169" pos:column="33">(<argument><expr><call><name><name pos:line="169" pos:column="34">PathManager</name><op:operator pos:line="169" pos:column="45">.</op:operator><name pos:line="169" pos:column="46">Instance</name><op:operator pos:line="169" pos:column="54">.</op:operator><name pos:line="169" pos:column="55">GetIndexPath</name></name><argument_list pos:line="169" pos:column="67">(<argument><expr><call><name><name pos:line="169" pos:column="68">ServiceLocator</name><op:operator pos:line="169" pos:column="82">.</op:operator><name><name pos:line="169" pos:column="83">Resolve</name><argument_list pos:line="169" pos:column="90">&lt;<argument><name pos:line="169" pos:column="91">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="169" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="169" pos:column="106">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="169" pos:column="108">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>
        
        <comment type="line" pos:line="172" pos:column="9">//private string _luceneTempIndexesDirectory;</comment>
        <decl_stmt><decl><type><specifier pos:line="173" pos:column="9">private</specifier> <name pos:line="173" pos:column="17">bool</name></type> <name pos:line="173" pos:column="22">_contractFailed</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="174" pos:column="17">private</specifier> <name pos:line="174" pos:column="25">DocumentIndexer</name></type> <name pos:line="174" pos:column="41">_documentIndexer</name></decl>;</decl_stmt>
	}</block></class>
}</block></namespace>
</unit>
