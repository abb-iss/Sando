<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Core\Core\Extensions\Configuration\ExtensionPointsConfigurationFileReader.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Diagnostics</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Contracts</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Xml</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Serialization</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Configuration</name><op:operator pos:line="5" pos:column="20">.</op:operator><name pos:line="5" pos:column="21">OptionsPages</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">log4net</name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Sando</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">Core</name><op:operator pos:line="9" pos:column="21">.</op:operator><name pos:line="9" pos:column="22">Extensions</name><op:operator pos:line="9" pos:column="32">.</op:operator><name pos:line="9" pos:column="33">Configuration</name></name>
<block pos:line="10" pos:column="1">{
	<class><specifier pos:line="11" pos:column="9">public</specifier> <specifier pos:line="11" pos:column="16">static</specifier> class <name pos:line="11" pos:column="29">ExtensionPointsConfigurationFileReader</name>
	<block pos:line="12" pos:column="9">{
		<function><type><specifier pos:line="13" pos:column="17">public</specifier> <specifier pos:line="13" pos:column="24">static</specifier> <name pos:line="13" pos:column="31">ExtensionPointsConfiguration</name></type> <name pos:line="13" pos:column="60">ReadAndValidate</name><parameter_list pos:line="13" pos:column="75">(<param><decl><type><name pos:line="13" pos:column="76">ILog</name></type> <name pos:line="13" pos:column="81">logger</name></decl></param>)</parameter_list>
		<block pos:line="14" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="15" pos:column="25">Contract</name><op:operator pos:line="15" pos:column="33">.</op:operator><name pos:line="15" pos:column="34">Requires</name></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">logger</name> <op:operator pos:line="15" pos:column="50">!=</op:operator> <name pos:line="15" pos:column="53">null</name></expr></argument><op:operator pos:line="15" pos:column="57">,</op:operator> <argument><expr><lit:literal type="string" pos:line="15" pos:column="59">"ExtensionPointsConfigurationValidator:Validate - logger cannot be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="17" pos:column="25">logger</name><op:operator pos:line="17" pos:column="31">.</op:operator><name pos:line="17" pos:column="32">Info</name></name><argument_list pos:line="17" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="37">"Validating configuration started"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">ExtensionPointsConfiguration</name></type> <name pos:line="18" pos:column="54">extensionPointsConfiguration</name> =<init pos:line="18" pos:column="84"> <expr><name pos:line="18" pos:column="85">null</name></expr></init></decl>;</decl_stmt>
			<try pos:line="19" pos:column="25">try
			<block pos:line="20" pos:column="25">{
			    <expr_stmt><expr><name pos:line="21" pos:column="29">extensionPointsConfiguration</name> <op:operator pos:line="21" pos:column="58">=</op:operator> <call><name pos:line="21" pos:column="60">TryRetrieveConfigurationObject</name><argument_list pos:line="21" pos:column="90">()</argument_list></call></expr>;</expr_stmt>
			}</block>
			<catch pos:line="23" pos:column="25">catch(<param><decl><type><name pos:line="23" pos:column="31">Exception</name></type> <name pos:line="23" pos:column="41">ex</name></decl></param>)
			<block pos:line="24" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="25" pos:column="33">logger</name><op:operator pos:line="25" pos:column="39">.</op:operator><name pos:line="25" pos:column="40">Fatal</name></name><argument_list pos:line="25" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="46">"Validation failed: "</lit:literal> <op:operator pos:line="25" pos:column="68">+</op:operator> <name><name pos:line="25" pos:column="70">ex</name><op:operator pos:line="25" pos:column="72">.</op:operator><name pos:line="25" pos:column="73">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="26" pos:column="33">return <expr><name pos:line="26" pos:column="40">null</name></expr>;</return>
			}</block></catch></try>
			<expr_stmt><expr><call><name><name pos:line="28" pos:column="25">logger</name><op:operator pos:line="28" pos:column="31">.</op:operator><name pos:line="28" pos:column="32">Info</name></name><argument_list pos:line="28" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="37">"Validating configuration finished"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="29" pos:column="25">return <expr><name pos:line="29" pos:column="32">extensionPointsConfiguration</name></expr>;</return>
		}</block></function>

        <function><type><specifier pos:line="32" pos:column="9">public</specifier> <specifier pos:line="32" pos:column="16">static</specifier> <name pos:line="32" pos:column="23">void</name></type> <name pos:line="32" pos:column="28">WriteConfiguration</name><parameter_list pos:line="32" pos:column="46">(<param><decl><type><name pos:line="32" pos:column="47">ExtensionPointsConfiguration</name></type> <name pos:line="32" pos:column="76">configuration</name></decl></param>)</parameter_list>
        <block pos:line="33" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">StreamWriter</name></type> <name pos:line="34" pos:column="26">writer</name> =<init pos:line="34" pos:column="34"> <expr><name pos:line="34" pos:column="35">null</name></expr></init></decl>;</decl_stmt>
            <try pos:line="35" pos:column="13">try
            <block pos:line="36" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="37" pos:column="17">var</name></type> <name pos:line="37" pos:column="21">sandoOptions</name> =<init pos:line="37" pos:column="35"> <expr><call><name><name pos:line="37" pos:column="36">ServiceLocator</name><op:operator pos:line="37" pos:column="50">.</op:operator><name><name pos:line="37" pos:column="51">Resolve</name><argument_list pos:line="37" pos:column="58">&lt;<argument><name pos:line="37" pos:column="59">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="37" pos:column="81">()</argument_list></call><op:operator pos:line="37" pos:column="83">.</op:operator><call><name pos:line="37" pos:column="84">GetSandoOptions</name><argument_list pos:line="37" pos:column="99">()</argument_list></call></expr></init></decl>;</decl_stmt> <empty_stmt pos:line="37" pos:column="103">;</empty_stmt>
			    <expr_stmt><expr><name pos:line="38" pos:column="29">writer</name> <op:operator pos:line="38" pos:column="36">=</op:operator> <op:operator pos:line="38" pos:column="38">new</op:operator> <call><name pos:line="38" pos:column="42">StreamWriter</name><argument_list pos:line="38" pos:column="54">(<argument><expr><name><name pos:line="38" pos:column="55">sandoOptions</name><op:operator pos:line="38" pos:column="67">.</op:operator><name pos:line="38" pos:column="68">ExtensionPointsConfigurationFilePath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><op:operator pos:line="39" pos:column="17">new</op:operator> <call><name pos:line="39" pos:column="21">XmlSerializer</name><argument_list pos:line="39" pos:column="34">(<argument><expr><call><name pos:line="39" pos:column="35">typeof</name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">ExtensionPointsConfiguration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="72">.</op:operator><call><name pos:line="39" pos:column="73">Serialize</name><argument_list pos:line="39" pos:column="82">(<argument><expr><name pos:line="39" pos:column="83">writer</name></expr></argument><op:operator pos:line="39" pos:column="89">,</op:operator><argument><expr><name pos:line="39" pos:column="90">configuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="41" pos:column="13">catch (<param><decl><type><name pos:line="41" pos:column="20">Exception</name></type> <name pos:line="41" pos:column="30">ex</name></decl></param>)
            <block pos:line="42" pos:column="13">{
                <throw pos:line="43" pos:column="17">throw <expr><op:operator pos:line="43" pos:column="23">new</op:operator> <call><name pos:line="43" pos:column="27">Exception</name><argument_list pos:line="43" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="37">"Saving extension points configuration file failed! - "</lit:literal> <op:operator pos:line="43" pos:column="93">+</op:operator> <name><name pos:line="43" pos:column="95">ex</name><op:operator pos:line="43" pos:column="97">.</op:operator><name pos:line="43" pos:column="98">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></catch>
            <finally pos:line="45" pos:column="13">finally
            <block pos:line="46" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="47" pos:column="17">writer</name><op:operator pos:line="47" pos:column="23">.</op:operator><name pos:line="47" pos:column="24">Close</name></name><argument_list pos:line="47" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
            }</block></finally></try>

        }</block></function>

		<function><type><specifier pos:line="52" pos:column="17">private</specifier> <specifier pos:line="52" pos:column="25">static</specifier> <name pos:line="52" pos:column="32">ExtensionPointsConfiguration</name></type> <name pos:line="52" pos:column="61">TryRetrieveConfigurationObject</name><parameter_list pos:line="52" pos:column="91">()</parameter_list>
		<block pos:line="53" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">var</name></type> <name pos:line="54" pos:column="17">sandoOptions</name> =<init pos:line="54" pos:column="31"> <expr><call><name><name pos:line="54" pos:column="32">ServiceLocator</name><op:operator pos:line="54" pos:column="46">.</op:operator><name><name pos:line="54" pos:column="47">Resolve</name><argument_list pos:line="54" pos:column="54">&lt;<argument><name pos:line="54" pos:column="55">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="54" pos:column="77">()</argument_list></call><op:operator pos:line="54" pos:column="79">.</op:operator><call><name pos:line="54" pos:column="80">GetSandoOptions</name><argument_list pos:line="54" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="55" pos:column="25">if<condition pos:line="55" pos:column="27">(<expr><call><name><name pos:line="55" pos:column="28">String</name><op:operator pos:line="55" pos:column="34">.</op:operator><name pos:line="55" pos:column="35">IsNullOrWhiteSpace</name></name><argument_list pos:line="55" pos:column="53">(<argument><expr><name><name pos:line="55" pos:column="54">sandoOptions</name><op:operator pos:line="55" pos:column="66">.</op:operator><name pos:line="55" pos:column="67">ExtensionPointsConfigurationFilePath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="55" pos:column="105">
				<throw pos:line="56" pos:column="33">throw <expr><op:operator pos:line="56" pos:column="39">new</op:operator> <call><name pos:line="56" pos:column="43">Exception</name><argument_list pos:line="56" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="53">"Extension points configuration file path cannot be null or an empty string!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
			<if pos:line="57" pos:column="25">if<condition pos:line="57" pos:column="27">(<expr><op:operator pos:line="57" pos:column="28">!</op:operator><call><name><name pos:line="57" pos:column="29">File</name><op:operator pos:line="57" pos:column="33">.</op:operator><name pos:line="57" pos:column="34">Exists</name></name><argument_list pos:line="57" pos:column="40">(<argument><expr><name><name pos:line="57" pos:column="41">sandoOptions</name><op:operator pos:line="57" pos:column="53">.</op:operator><name pos:line="57" pos:column="54">ExtensionPointsConfigurationFilePath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="57" pos:column="92">
				<throw pos:line="58" pos:column="33">throw <expr><op:operator pos:line="58" pos:column="39">new</op:operator> <call><name pos:line="58" pos:column="43">Exception</name><argument_list pos:line="58" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="53">"Extension points configuration file wasn't found!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<decl_stmt><decl><type><name pos:line="60" pos:column="25">ExtensionPointsConfiguration</name></type> <name pos:line="60" pos:column="54">extensionPointsConfiguration</name> =<init pos:line="60" pos:column="84"> <expr><name pos:line="60" pos:column="85">null</name></expr></init></decl>;</decl_stmt>
		    <decl_stmt><decl><type><name pos:line="61" pos:column="21">TextReader</name></type> <name pos:line="61" pos:column="32">textReader</name> =<init pos:line="61" pos:column="44"> <expr><name pos:line="61" pos:column="45">null</name></expr></init></decl>;</decl_stmt>
			<try pos:line="62" pos:column="25">try
			<block pos:line="63" pos:column="25">{
				<expr_stmt><expr><name pos:line="64" pos:column="33">textReader</name> <op:operator pos:line="64" pos:column="44">=</op:operator> <op:operator pos:line="64" pos:column="46">new</op:operator> <call><name pos:line="64" pos:column="50">StreamReader</name><argument_list pos:line="64" pos:column="62">(<argument><expr><name><name pos:line="64" pos:column="63">sandoOptions</name><op:operator pos:line="64" pos:column="75">.</op:operator><name pos:line="64" pos:column="76">ExtensionPointsConfigurationFilePath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="65" pos:column="33">extensionPointsConfiguration</name> <op:operator pos:line="65" pos:column="62">=</op:operator> <op:operator pos:line="65" pos:column="64">(</op:operator><name pos:line="65" pos:column="65">ExtensionPointsConfiguration</name><op:operator pos:line="65" pos:column="93">)</op:operator><op:operator pos:line="65" pos:column="94">new</op:operator> <call><name pos:line="65" pos:column="98">XmlSerializer</name><argument_list pos:line="65" pos:column="111">(<argument><expr><call><name pos:line="65" pos:column="112">typeof</name><argument_list pos:line="65" pos:column="118">(<argument><expr><name pos:line="65" pos:column="119">ExtensionPointsConfiguration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="149">.</op:operator><call><name pos:line="65" pos:column="150">Deserialize</name><argument_list pos:line="65" pos:column="161">(<argument><expr><name pos:line="65" pos:column="162">textReader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<catch pos:line="67" pos:column="25">catch(<param><decl><type><name pos:line="67" pos:column="31">Exception</name></type> <name pos:line="67" pos:column="41">ex</name></decl></param>)
			<block pos:line="68" pos:column="25">{
				<throw pos:line="69" pos:column="33">throw <expr><op:operator pos:line="69" pos:column="39">new</op:operator> <call><name pos:line="69" pos:column="43">Exception</name><argument_list pos:line="69" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="53">"Reading extension points configuration file failed! - "</lit:literal> <op:operator pos:line="69" pos:column="110">+</op:operator> <name><name pos:line="69" pos:column="112">ex</name><op:operator pos:line="69" pos:column="114">.</op:operator><name pos:line="69" pos:column="115">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</throw>
			}</block></catch><finally pos:line="70" pos:column="26">finally
			<block pos:line="71" pos:column="25">{
			    <expr_stmt><expr><call><name><name pos:line="72" pos:column="29">textReader</name><op:operator pos:line="72" pos:column="39">.</op:operator><name pos:line="72" pos:column="40">Close</name></name><argument_list pos:line="72" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			}</block></finally></try>

			<if pos:line="75" pos:column="25">if<condition pos:line="75" pos:column="27">(<expr><call><name><name pos:line="75" pos:column="28">String</name><op:operator pos:line="75" pos:column="34">.</op:operator><name pos:line="75" pos:column="35">IsNullOrWhiteSpace</name></name><argument_list pos:line="75" pos:column="53">(<argument><expr><name><name pos:line="75" pos:column="54">extensionPointsConfiguration</name><op:operator pos:line="75" pos:column="82">.</op:operator><name pos:line="75" pos:column="83">PluginDirectoryPath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="75" pos:column="104">
				<throw pos:line="76" pos:column="33">throw <expr><op:operator pos:line="76" pos:column="39">new</op:operator> <call><name pos:line="76" pos:column="43">Exception</name><argument_list pos:line="76" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="53">"Plugin directory path must be set!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<if pos:line="78" pos:column="25">if<condition pos:line="78" pos:column="27">(<expr><op:operator pos:line="78" pos:column="28">!</op:operator><call><name><name pos:line="78" pos:column="29">Directory</name><op:operator pos:line="78" pos:column="38">.</op:operator><name pos:line="78" pos:column="39">Exists</name></name><argument_list pos:line="78" pos:column="45">(<argument><expr><name><name pos:line="78" pos:column="46">extensionPointsConfiguration</name><op:operator pos:line="78" pos:column="74">.</op:operator><name pos:line="78" pos:column="75">PluginDirectoryPath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="78" pos:column="96">
				<throw pos:line="79" pos:column="33">throw <expr><op:operator pos:line="79" pos:column="39">new</op:operator> <call><name pos:line="79" pos:column="43">Exception</name><argument_list pos:line="79" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="53">"Plugin directory wasn't found!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<return pos:line="81" pos:column="25">return <expr><name pos:line="81" pos:column="32">extensionPointsConfiguration</name></expr>;</return>
		}</block></function>
	}</block></class>
}</block></namespace>
</unit>
