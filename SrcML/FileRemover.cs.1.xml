<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\Actions\FileRemover.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Sando</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Sando</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">Indexer</name><op:operator pos:line="2" pos:column="20">.</op:operator><name pos:line="2" pos:column="21">IndexFiltering</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Sando</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">UI</name><op:operator pos:line="3" pos:column="15">.</op:operator><name pos:line="3" pos:column="16">Monitoring</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">System</name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Collections</name><op:operator pos:line="5" pos:column="25">.</op:operator><name pos:line="5" pos:column="26">Generic</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Linq</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Text</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Sando</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">UI</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Actions</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> <specifier pos:line="12" pos:column="12">static</specifier> class <name pos:line="12" pos:column="25">FileRemover</name>
    <block pos:line="13" pos:column="5">{        

        <function><type><specifier pos:line="15" pos:column="9">public</specifier> <specifier pos:line="15" pos:column="16">static</specifier> <name pos:line="15" pos:column="23">void</name></type> <name pos:line="15" pos:column="28">Remove</name><parameter_list pos:line="15" pos:column="34">(<param><decl><type><name pos:line="15" pos:column="35">string</name></type> <name pos:line="15" pos:column="42">path</name></decl></param><op:operator pos:line="15" pos:column="46">,</op:operator> <param><decl><type><name pos:line="15" pos:column="48">RunWorkerCompletedEventHandler</name></type> <name pos:line="15" pos:column="79">runworkerDone</name></decl></param>)</parameter_list>
        <block pos:line="16" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">var</name></type> <name pos:line="17" pos:column="17">bw</name> =<init pos:line="17" pos:column="21"> <expr><op:operator pos:line="17" pos:column="22">new</op:operator> <name pos:line="17" pos:column="26">BackgroundWorker</name> <block pos:line="17" pos:column="43">{ <expr><name pos:line="17" pos:column="45">WorkerReportsProgress</name> <op:operator pos:line="17" pos:column="67">=</op:operator> <lit:literal type="boolean" pos:line="17" pos:column="69">false</lit:literal></expr><op:operator pos:line="17" pos:column="74">,</op:operator> <expr><name pos:line="17" pos:column="76">WorkerSupportsCancellation</name> <op:operator pos:line="17" pos:column="103">=</op:operator> <lit:literal type="boolean" pos:line="17" pos:column="105">false</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">bw</name><op:operator pos:line="18" pos:column="15">.</op:operator><name pos:line="18" pos:column="16">DoWork</name></name> <op:operator pos:line="18" pos:column="23">+=</op:operator> <name pos:line="18" pos:column="26">RemoveFileFromIndex</name></expr>;</expr_stmt>            
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">bw</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">RunWorkerCompleted</name></name> <op:operator pos:line="19" pos:column="35">+=</op:operator> <name pos:line="19" pos:column="38">runworkerDone</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">bw</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">RunWorkerAsync</name></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
        }</block></function>

        <function><type><specifier pos:line="23" pos:column="9">private</specifier> <specifier pos:line="23" pos:column="17">static</specifier> <name pos:line="23" pos:column="24">void</name></type> <name pos:line="23" pos:column="29">RemoveFileFromIndex</name><parameter_list pos:line="23" pos:column="48">(<param><decl><type><name pos:line="23" pos:column="49">object</name></type> <name pos:line="23" pos:column="56">sender</name></decl></param><op:operator pos:line="23" pos:column="62">,</op:operator> <param><decl><type><name pos:line="23" pos:column="64">DoWorkEventArgs</name></type> <name pos:line="23" pos:column="80">e</name></decl></param>)</parameter_list>
        <block pos:line="24" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">var</name></type> <name pos:line="25" pos:column="17">path</name> =<init pos:line="25" pos:column="23"> <expr><name><name pos:line="25" pos:column="24">e</name><op:operator pos:line="25" pos:column="25">.</op:operator><name pos:line="25" pos:column="26">Argument</name></name> <op:operator pos:line="25" pos:column="35">as</op:operator> <name pos:line="25" pos:column="38">string</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">srcMLArchiveEventsHandlers</name> =<init pos:line="26" pos:column="45"> <expr><call><name><name pos:line="26" pos:column="46">ServiceLocator</name><op:operator pos:line="26" pos:column="60">.</op:operator><name><name pos:line="26" pos:column="61">Resolve</name><argument_list pos:line="26" pos:column="68">&lt;<argument><name pos:line="26" pos:column="69">SrcMLArchiveEventsHandlers</name></argument>&gt;</argument_list></name></name><argument_list pos:line="26" pos:column="96">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">var</name></type> <name pos:line="27" pos:column="17">deleteFile</name> =<init pos:line="27" pos:column="29"> <expr><op:operator pos:line="27" pos:column="30">new</op:operator> <call><name><name pos:line="27" pos:column="34">ABB</name><op:operator pos:line="27" pos:column="37">.</op:operator><name pos:line="27" pos:column="38">SrcML</name><op:operator pos:line="27" pos:column="43">.</op:operator><name pos:line="27" pos:column="44">FileEventRaisedArgs</name></name><argument_list pos:line="27" pos:column="63">(<argument><expr><name><name pos:line="27" pos:column="64">ABB</name><op:operator pos:line="27" pos:column="67">.</op:operator><name pos:line="27" pos:column="68">SrcML</name><op:operator pos:line="27" pos:column="73">.</op:operator><name pos:line="27" pos:column="74">FileEventType</name><op:operator pos:line="27" pos:column="87">.</op:operator><name pos:line="27" pos:column="88">FileDeleted</name></name></expr></argument><op:operator pos:line="27" pos:column="99">,</op:operator> <argument><expr><name pos:line="27" pos:column="101">path</name></expr></argument><op:operator pos:line="27" pos:column="105">,</op:operator> <argument><expr><name pos:line="27" pos:column="107">path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">srcMLArchiveEventsHandlers</name><op:operator pos:line="28" pos:column="39">.</op:operator><name pos:line="28" pos:column="40">SourceFileChanged</name></name><argument_list pos:line="28" pos:column="57">(<argument><expr><name pos:line="28" pos:column="58">null</name></expr></argument><op:operator pos:line="28" pos:column="62">,</op:operator> <argument><expr><name pos:line="28" pos:column="64">deleteFile</name></expr></argument><op:operator pos:line="28" pos:column="74">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="28" pos:column="76">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">ServiceLocator</name><op:operator pos:line="29" pos:column="27">.</op:operator><name><name pos:line="29" pos:column="28">Resolve</name><argument_list pos:line="29" pos:column="35">&lt;<argument><name pos:line="29" pos:column="36">IndexFilterManager</name></argument>&gt;</argument_list></name></name><argument_list pos:line="29" pos:column="55">()</argument_list></call><op:operator pos:line="29" pos:column="57">.</op:operator><call><name pos:line="29" pos:column="58">AddFileExclusion</name><argument_list pos:line="29" pos:column="74">(<argument><expr><name pos:line="29" pos:column="75">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

    }</block></class>
}</block></namespace>
</unit>
