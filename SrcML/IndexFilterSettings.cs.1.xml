<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\SandoExtensionContracts\IndexerContracts\IndexFilterSettings.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Sando</name><op:operator pos:line="3" pos:column="16">.</op:operator><name pos:line="3" pos:column="17">ExtensionContracts</name><op:operator pos:line="3" pos:column="35">.</op:operator><name pos:line="3" pos:column="36">IndexerContracts</name></name>
<block pos:line="4" pos:column="1">{
    <class><specifier pos:line="5" pos:column="5">public</specifier> class <name pos:line="5" pos:column="18">IndexFilterSettings</name>
    <block pos:line="6" pos:column="5">{
        <constructor><specifier pos:line="7" pos:column="9">public</specifier> <name pos:line="7" pos:column="16">IndexFilterSettings</name><parameter_list pos:line="7" pos:column="35">()</parameter_list>
        <block pos:line="8" pos:column="9">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">IgnoredExtensions</name> <op:operator pos:line="9" pos:column="31">=</op:operator> <op:operator pos:line="9" pos:column="33">new</op:operator> <call><name><name pos:line="9" pos:column="37">List</name><argument_list pos:line="9" pos:column="41">&lt;<argument><name pos:line="9" pos:column="42">string</name></argument>&gt;</argument_list></name><argument_list pos:line="9" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="10" pos:column="13">IgnoredFileNames</name> <op:operator pos:line="10" pos:column="30">=</op:operator> <op:operator pos:line="10" pos:column="32">new</op:operator> <call><name><name pos:line="10" pos:column="36">List</name><argument_list pos:line="10" pos:column="40">&lt;<argument><name pos:line="10" pos:column="41">string</name></argument>&gt;</argument_list></name><argument_list pos:line="10" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="11" pos:column="13">IgnoredDirectories</name> <op:operator pos:line="11" pos:column="32">=</op:operator> <op:operator pos:line="11" pos:column="34">new</op:operator> <call><name><name pos:line="11" pos:column="38">List</name><argument_list pos:line="11" pos:column="42">&lt;<argument><name pos:line="11" pos:column="43">string</name></argument>&gt;</argument_list></name><argument_list pos:line="11" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">IgnoredPathExpressions</name> <op:operator pos:line="12" pos:column="36">=</op:operator> <op:operator pos:line="12" pos:column="38">new</op:operator> <call><name><name pos:line="12" pos:column="42">List</name><argument_list pos:line="12" pos:column="46">&lt;<argument><name pos:line="12" pos:column="47">string</name></argument>&gt;</argument_list></name><argument_list pos:line="12" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="13" pos:column="13">IgnoredPathRegularExpressions</name> <op:operator pos:line="13" pos:column="43">=</op:operator> <op:operator pos:line="13" pos:column="45">new</op:operator> <call><name><name pos:line="13" pos:column="49">List</name><argument_list pos:line="13" pos:column="53">&lt;<argument><name pos:line="13" pos:column="54">string</name></argument>&gt;</argument_list></name><argument_list pos:line="13" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">public</specifier> <name><name pos:line="16" pos:column="16">List</name><argument_list pos:line="16" pos:column="20">&lt;<argument><name pos:line="16" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="16" pos:column="29">IgnoredExtensions</name> <block pos:line="16" pos:column="47">{ <function><name pos:line="16" pos:column="49">get</name>;</function> <function><name pos:line="16" pos:column="54">set</name>;</function> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">public</specifier> <name><name pos:line="18" pos:column="16">List</name><argument_list pos:line="18" pos:column="20">&lt;<argument><name pos:line="18" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="18" pos:column="29">IgnoredFileNames</name> <block pos:line="18" pos:column="46">{ <function><name pos:line="18" pos:column="48">get</name>;</function> <function><name pos:line="18" pos:column="53">set</name>;</function> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <name><name pos:line="20" pos:column="16">List</name><argument_list pos:line="20" pos:column="20">&lt;<argument><name pos:line="20" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="29">IgnoredDirectories</name> <block pos:line="20" pos:column="48">{ <function><name pos:line="20" pos:column="50">get</name>;</function> <function><name pos:line="20" pos:column="55">set</name>;</function> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">public</specifier> <name><name pos:line="22" pos:column="16">List</name><argument_list pos:line="22" pos:column="20">&lt;<argument><name pos:line="22" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="29">IgnoredPathExpressions</name> <block pos:line="22" pos:column="52">{ <function><name pos:line="22" pos:column="54">get</name>;</function> <function><name pos:line="22" pos:column="59">set</name>;</function> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">public</specifier> <name><name pos:line="24" pos:column="16">List</name><argument_list pos:line="24" pos:column="20">&lt;<argument><name pos:line="24" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="24" pos:column="29">IgnoredPathRegularExpressions</name> <block pos:line="24" pos:column="59">{ <function><name pos:line="24" pos:column="61">get</name>;</function> <function><name pos:line="24" pos:column="66">set</name>;</function> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace></unit>
