<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer\IndexState\IndexState.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Sando</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">Indexer</name><op:operator pos:line="5" pos:column="24">.</op:operator><name pos:line="5" pos:column="25">IndexState</name></name>
<block pos:line="6" pos:column="1">{
	<class><specifier pos:line="7" pos:column="9">public</specifier> class <name pos:line="7" pos:column="22">IndexState</name>
	<block pos:line="8" pos:column="9">{
		<constructor><specifier pos:line="9" pos:column="17">public</specifier> <name pos:line="9" pos:column="24">IndexState</name><parameter_list pos:line="9" pos:column="34">()</parameter_list>
		<block pos:line="10" pos:column="17">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">RelevantFilesInfo</name> <op:operator pos:line="11" pos:column="43">=</op:operator> <op:operator pos:line="11" pos:column="45">new</op:operator> <call><name><name pos:line="11" pos:column="49">List</name><argument_list pos:line="11" pos:column="53">&lt;<argument><name pos:line="11" pos:column="54">RelevantFileInfo</name></argument>&gt;</argument_list></name><argument_list pos:line="11" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
		}</block></constructor>

		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">public</specifier> <name><name pos:line="14" pos:column="24">List</name><argument_list pos:line="14" pos:column="28">&lt;<argument><name pos:line="14" pos:column="29">RelevantFileInfo</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="47">RelevantFilesInfo</name> <block pos:line="14" pos:column="65">{ <function><name pos:line="14" pos:column="67">get</name>;</function> <function><name pos:line="14" pos:column="72">set</name>;</function> }</block></decl></decl_stmt>

		<function><type><specifier pos:line="16" pos:column="17">public</specifier> <specifier pos:line="16" pos:column="24">override</specifier> <name pos:line="16" pos:column="33">bool</name></type> <name pos:line="16" pos:column="38">Equals</name><parameter_list pos:line="16" pos:column="44">(<param><decl><type><name pos:line="16" pos:column="45">object</name></type> <name pos:line="16" pos:column="52">obj</name></decl></param>)</parameter_list>
		<block pos:line="17" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">IndexState</name></type> <name pos:line="18" pos:column="36">indexState</name> =<init pos:line="18" pos:column="48"> <expr><name pos:line="18" pos:column="49">obj</name> <op:operator pos:line="18" pos:column="53">as</op:operator> <name pos:line="18" pos:column="56">IndexState</name></expr></init></decl>;</decl_stmt>
			<if pos:line="19" pos:column="25">if<condition pos:line="19" pos:column="27">(<expr><name pos:line="19" pos:column="28">indexState</name> <op:operator pos:line="19" pos:column="39">==</op:operator> <name pos:line="19" pos:column="42">null</name></expr>)</condition><then pos:line="19" pos:column="47">
				<return pos:line="20" pos:column="33">return <expr><lit:literal type="boolean" pos:line="20" pos:column="40">false</lit:literal></expr>;</return></then></if>
			
			<if pos:line="22" pos:column="25">if<condition pos:line="22" pos:column="27">(<expr><name><name pos:line="22" pos:column="28">RelevantFilesInfo</name><op:operator pos:line="22" pos:column="45">.</op:operator><name pos:line="22" pos:column="46">Count</name></name> <op:operator pos:line="22" pos:column="52">!=</op:operator> <name><name pos:line="22" pos:column="55">indexState</name><op:operator pos:line="22" pos:column="65">.</op:operator><name pos:line="22" pos:column="66">RelevantFilesInfo</name><op:operator pos:line="22" pos:column="83">.</op:operator><name pos:line="22" pos:column="84">Count</name></name></expr>)</condition><then pos:line="22" pos:column="90">
				<return pos:line="23" pos:column="33">return <expr><lit:literal type="boolean" pos:line="23" pos:column="40">false</lit:literal></expr>;</return></then></if>
			<if pos:line="24" pos:column="25">if<condition pos:line="24" pos:column="27">(<expr><call><name><name pos:line="24" pos:column="28">RelevantFilesInfo</name><op:operator pos:line="24" pos:column="45">.</op:operator><name pos:line="24" pos:column="46">Count</name></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">f</name> <op:operator pos:line="24" pos:column="54">=&gt;</op:operator> <op:operator pos:line="24" pos:column="57">!</op:operator><call><name><name pos:line="24" pos:column="58">indexState</name><op:operator pos:line="24" pos:column="68">.</op:operator><name pos:line="24" pos:column="69">RelevantFilesInfo</name><op:operator pos:line="24" pos:column="86">.</op:operator><name pos:line="24" pos:column="87">Exists</name></name><argument_list pos:line="24" pos:column="93">(<argument><expr><name pos:line="24" pos:column="94">f2</name> <op:operator pos:line="24" pos:column="97">=&gt;</op:operator> <name><name pos:line="24" pos:column="100">f</name><op:operator pos:line="24" pos:column="101">.</op:operator><name pos:line="24" pos:column="102">FullName</name></name> <op:operator pos:line="24" pos:column="111">==</op:operator> <name><name pos:line="24" pos:column="114">f2</name><op:operator pos:line="24" pos:column="116">.</op:operator><name pos:line="24" pos:column="117">FullName</name></name> <op:operator pos:line="24" pos:column="126">&amp;&amp;</op:operator> <name><name pos:line="24" pos:column="129">f</name><op:operator pos:line="24" pos:column="130">.</op:operator><name pos:line="24" pos:column="131">LastWriteTime</name></name> <op:operator pos:line="24" pos:column="145">==</op:operator> <name><name pos:line="24" pos:column="148">f2</name><op:operator pos:line="24" pos:column="150">.</op:operator><name pos:line="24" pos:column="151">LastWriteTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="24" pos:column="167">&gt;</op:operator> <lit:literal type="number" pos:line="24" pos:column="169">0</lit:literal></expr>)</condition><then pos:line="24" pos:column="171">
				<return pos:line="25" pos:column="33">return <expr><lit:literal type="boolean" pos:line="25" pos:column="40">false</lit:literal></expr>;</return></then></if>

			<return pos:line="27" pos:column="25">return <expr><lit:literal type="boolean" pos:line="27" pos:column="32">true</lit:literal></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="30" pos:column="17">public</specifier> <specifier pos:line="30" pos:column="24">override</specifier> <name pos:line="30" pos:column="33">int</name></type> <name pos:line="30" pos:column="37">GetHashCode</name><parameter_list pos:line="30" pos:column="48">()</parameter_list>
		<block pos:line="31" pos:column="17">{
			<return pos:line="32" pos:column="25">return <expr><call><name><name pos:line="32" pos:column="32">base</name><op:operator pos:line="32" pos:column="36">.</op:operator><name pos:line="32" pos:column="37">GetHashCode</name></name><argument_list pos:line="32" pos:column="48">()</argument_list></call></expr>;</return>
		}</block></function>
	}</block></class>

	<class><specifier pos:line="36" pos:column="9">public</specifier> class <name pos:line="36" pos:column="22">RelevantFileInfo</name>
	<block pos:line="37" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="38" pos:column="17">public</specifier> <name pos:line="38" pos:column="24">string</name></type> <name pos:line="38" pos:column="31">FullName</name> <block pos:line="38" pos:column="40">{ <function><name pos:line="38" pos:column="42">get</name>;</function> <function><name pos:line="38" pos:column="47">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="39" pos:column="17">public</specifier> <name pos:line="39" pos:column="24">DateTime</name></type> <name pos:line="39" pos:column="33">LastWriteTime</name> <block pos:line="39" pos:column="47">{ <function><name pos:line="39" pos:column="49">get</name>;</function> <function><name pos:line="39" pos:column="54">set</name>;</function> }</block></decl></decl_stmt>
	}</block></class>
}</block></namespace>
</unit>
