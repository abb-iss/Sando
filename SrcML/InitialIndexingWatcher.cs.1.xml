<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\Monitoring\InitialIndexingWatcher.cs" pos:tabs="8"><namespace pos:line="1" pos:column="1">namespace <name><name pos:line="1" pos:column="11">Sando</name><op:operator pos:line="1" pos:column="16">.</op:operator><name pos:line="1" pos:column="17">UI</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">Monitoring</name></name>
<block pos:line="2" pos:column="1">{
    <class><specifier pos:line="3" pos:column="5">public</specifier> class <name pos:line="3" pos:column="18">InitialIndexingWatcher</name>
    <block pos:line="4" pos:column="5">{
        <constructor><specifier pos:line="5" pos:column="9">public</specifier> <name pos:line="5" pos:column="16">InitialIndexingWatcher</name><parameter_list pos:line="5" pos:column="38">()</parameter_list>
        <block pos:line="6" pos:column="9">{
            <expr_stmt><expr><name pos:line="7" pos:column="13">_isInitialIndexingInProgress</name> <op:operator pos:line="7" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="7" pos:column="44">true</lit:literal></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="10" pos:column="9">public</specifier> <name pos:line="10" pos:column="16">void</name></type> <name pos:line="10" pos:column="21">InitialIndexingStarted</name><parameter_list pos:line="10" pos:column="43">()</parameter_list>
        <block pos:line="11" pos:column="9">{
            <expr_stmt><expr><name pos:line="12" pos:column="13">_isInitialIndexingInProgress</name> <op:operator pos:line="12" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="12" pos:column="44">true</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">void</name></type> <name pos:line="15" pos:column="21">InitialIndexingCompleted</name><parameter_list pos:line="15" pos:column="45">()</parameter_list>
        <block pos:line="16" pos:column="9">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">_isInitialIndexingInProgress</name> <op:operator pos:line="17" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="17" pos:column="44">false</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">bool</name></type> <name pos:line="20" pos:column="21">IsInitialIndexingInProgress</name><parameter_list pos:line="20" pos:column="48">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">_isInitialIndexingInProgress</name></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <name pos:line="25" pos:column="17">bool</name></type> <name pos:line="25" pos:column="22">_isInitialIndexingInProgress</name></decl>;</decl_stmt>
    }</block></class>
}</block></namespace></unit>
