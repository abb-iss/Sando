<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\SandoExtensionContracts\ProgramElementContracts\MethodElement.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Diagnostics</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Contracts</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Sando</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">ExtensionContracts</name><op:operator pos:line="4" pos:column="35">.</op:operator><name pos:line="4" pos:column="36">ProgramElementContracts</name></name>
<block pos:line="5" pos:column="1">{
	<class><specifier pos:line="6" pos:column="9">public</specifier> class <name pos:line="6" pos:column="22">MethodElement</name> <super pos:line="6" pos:column="36">: <name pos:line="6" pos:column="38">ProgramElement</name></super>
	<block pos:line="7" pos:column="9">{
		<constructor><specifier pos:line="8" pos:column="17">public</specifier> <name pos:line="8" pos:column="24">MethodElement</name><parameter_list pos:line="8" pos:column="37">(<param><decl><type><name pos:line="8" pos:column="38">string</name></type> <name pos:line="8" pos:column="45">name</name></decl></param><op:operator pos:line="8" pos:column="49">,</op:operator> <param><decl><type><name pos:line="8" pos:column="51">int</name></type> <name pos:line="8" pos:column="55">definitionLineNumber</name></decl></param><op:operator pos:line="8" pos:column="75">,</op:operator> <param><decl><type><name pos:line="8" pos:column="77">string</name></type> <name pos:line="8" pos:column="84">fullFilePath</name></decl></param><op:operator pos:line="8" pos:column="96">,</op:operator> <param><decl><type><name pos:line="8" pos:column="98">string</name></type> <name pos:line="8" pos:column="105">snippet</name></decl></param><op:operator pos:line="8" pos:column="112">,</op:operator> <param><decl><type><name pos:line="8" pos:column="114">AccessLevel</name></type> <name pos:line="8" pos:column="126">accessLevel</name></decl></param><op:operator pos:line="8" pos:column="137">,</op:operator>
			<param><decl><type><name pos:line="9" pos:column="25">string</name></type> <name pos:line="9" pos:column="32">arguments</name></decl></param><op:operator pos:line="9" pos:column="41">,</op:operator> <param><decl><type><name pos:line="9" pos:column="43">string</name></type> <name pos:line="9" pos:column="50">returnType</name></decl></param><op:operator pos:line="9" pos:column="60">,</op:operator> <param><decl><type><name pos:line="9" pos:column="62">string</name></type> <name pos:line="9" pos:column="69">body</name></decl></param><op:operator pos:line="9" pos:column="73">,</op:operator> <param><decl><type><name pos:line="9" pos:column="75">Guid</name></type> <name pos:line="9" pos:column="80">classId</name></decl></param><op:operator pos:line="9" pos:column="87">,</op:operator> <param><decl><type><name pos:line="9" pos:column="89">string</name></type> <name pos:line="9" pos:column="96">className</name></decl></param><op:operator pos:line="9" pos:column="105">,</op:operator> <param><decl><type><name pos:line="9" pos:column="107">string</name></type> <name pos:line="9" pos:column="114">modifiers</name></decl></param><op:operator pos:line="9" pos:column="123">,</op:operator> <param><decl><type><name pos:line="9" pos:column="125">bool</name></type> <name pos:line="9" pos:column="130">isConstructor</name></decl></param>)</parameter_list> 
			<member_list pos:line="10" pos:column="25">: <call><name pos:line="10" pos:column="27">base</name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">name</name></expr></argument><op:operator pos:line="10" pos:column="36">,</op:operator> <argument><expr><name pos:line="10" pos:column="38">definitionLineNumber</name></expr></argument><op:operator pos:line="10" pos:column="58">,</op:operator> <argument><expr><name pos:line="10" pos:column="60">fullFilePath</name></expr></argument><op:operator pos:line="10" pos:column="72">,</op:operator> <argument><expr><name pos:line="10" pos:column="74">snippet</name></expr></argument>)</argument_list></call>
		</member_list><block pos:line="11" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="12" pos:column="25">Contract</name><op:operator pos:line="12" pos:column="33">.</op:operator><name pos:line="12" pos:column="34">Requires</name></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">arguments</name> <op:operator pos:line="12" pos:column="53">!=</op:operator> <name pos:line="12" pos:column="56">null</name></expr></argument><op:operator pos:line="12" pos:column="60">,</op:operator> <argument><expr><lit:literal type="string" pos:line="12" pos:column="62">"MethodElement:Constructor - arguments cannot be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="13" pos:column="25">Contract</name><op:operator pos:line="13" pos:column="33">.</op:operator><name pos:line="13" pos:column="34">Requires</name></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">isConstructor</name> <op:operator pos:line="13" pos:column="57">||</op:operator> <op:operator pos:line="13" pos:column="60">!</op:operator><call><name><name pos:line="13" pos:column="61">String</name><op:operator pos:line="13" pos:column="67">.</op:operator><name pos:line="13" pos:column="68">IsNullOrWhiteSpace</name></name><argument_list pos:line="13" pos:column="86">(<argument><expr><name pos:line="13" pos:column="87">returnType</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="13" pos:column="98">,</op:operator> <argument><expr><lit:literal type="string" pos:line="13" pos:column="100">"MethodElement:Constructor - return type cannot be null or an empty string!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="14" pos:column="25">Contract</name><op:operator pos:line="14" pos:column="33">.</op:operator><name pos:line="14" pos:column="34">Requires</name></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">body</name> <op:operator pos:line="14" pos:column="48">!=</op:operator> <name pos:line="14" pos:column="51">null</name></expr></argument><op:operator pos:line="14" pos:column="55">,</op:operator> <argument><expr><lit:literal type="string" pos:line="14" pos:column="57">"MethodElement:Constructor - body cannot be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="15" pos:column="25">Contract</name><op:operator pos:line="15" pos:column="33">.</op:operator><name pos:line="15" pos:column="34">Requires</name></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">classId</name> <op:operator pos:line="15" pos:column="51">!=</op:operator> <name pos:line="15" pos:column="54">null</name></expr></argument><op:operator pos:line="15" pos:column="58">,</op:operator> <argument><expr><lit:literal type="string" pos:line="15" pos:column="60">"MethodElement:Constructor - class id cannot be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="16" pos:column="25">//Contract.Requires(classId != Guid.Empty, "MethodElement:Constructor - class id cannot be an empty Guid!");</comment>
			<expr_stmt><expr><call><name><name pos:line="17" pos:column="25">Contract</name><op:operator pos:line="17" pos:column="33">.</op:operator><name pos:line="17" pos:column="34">Requires</name></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">className</name> <op:operator pos:line="17" pos:column="53">!=</op:operator> <name pos:line="17" pos:column="56">null</name></expr></argument><op:operator pos:line="17" pos:column="60">,</op:operator> <argument><expr><lit:literal type="string" pos:line="17" pos:column="62">"MethodElement:Constructor - class name cannot be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="19" pos:column="25">AccessLevel</name> <op:operator pos:line="19" pos:column="37">=</op:operator> <name pos:line="19" pos:column="39">accessLevel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">Arguments</name> <op:operator pos:line="20" pos:column="35">=</op:operator> <name pos:line="20" pos:column="37">arguments</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">ReturnType</name> <op:operator pos:line="21" pos:column="36">=</op:operator> <name pos:line="21" pos:column="38">returnType</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">Body</name> <op:operator pos:line="22" pos:column="30">=</op:operator> <name pos:line="22" pos:column="32">body</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">ClassId</name> <op:operator pos:line="23" pos:column="33">=</op:operator> <name pos:line="23" pos:column="35">classId</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">ClassName</name> <op:operator pos:line="24" pos:column="35">=</op:operator> <name pos:line="24" pos:column="37">className</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">Modifiers</name> <op:operator pos:line="25" pos:column="35">=</op:operator> <name pos:line="25" pos:column="37">modifiers</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">IsConstructor</name> <op:operator pos:line="26" pos:column="39">=</op:operator> <name pos:line="26" pos:column="41">isConstructor</name></expr>;</expr_stmt>
		}</block></constructor>

		<decl_stmt><decl><type><specifier pos:line="29" pos:column="17">public</specifier> <specifier pos:line="29" pos:column="24">virtual</specifier> <name pos:line="29" pos:column="32">AccessLevel</name></type> <name pos:line="29" pos:column="44">AccessLevel</name> <block pos:line="29" pos:column="56">{ <function><name pos:line="29" pos:column="58">get</name>;</function> private <function><name pos:line="29" pos:column="71">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="30" pos:column="17">public</specifier> <specifier pos:line="30" pos:column="24">virtual</specifier> <name pos:line="30" pos:column="32">string</name></type> <name pos:line="30" pos:column="39">Arguments</name> <block pos:line="30" pos:column="49">{ <function><name pos:line="30" pos:column="51">get</name>;</function> private <function><name pos:line="30" pos:column="64">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="31" pos:column="17">public</specifier> <specifier pos:line="31" pos:column="24">virtual</specifier> <name pos:line="31" pos:column="32">string</name></type> <name pos:line="31" pos:column="39">ReturnType</name> <block pos:line="31" pos:column="50">{ <function><name pos:line="31" pos:column="52">get</name>;</function> private <function><name pos:line="31" pos:column="65">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="32" pos:column="17">public</specifier> <specifier pos:line="32" pos:column="24">virtual</specifier> <name pos:line="32" pos:column="32">string</name></type> <name pos:line="32" pos:column="39">Body</name> <block pos:line="32" pos:column="44">{ <function><name pos:line="32" pos:column="46">get</name>;</function>  <function><name pos:line="32" pos:column="52">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="33" pos:column="17">public</specifier> <specifier pos:line="33" pos:column="24">virtual</specifier> <name pos:line="33" pos:column="32">Guid</name></type> <name pos:line="33" pos:column="37">ClassId</name> <block pos:line="33" pos:column="45">{ <function><name pos:line="33" pos:column="47">get</name>;</function> private <function><name pos:line="33" pos:column="60">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="34" pos:column="17">public</specifier> <specifier pos:line="34" pos:column="24">virtual</specifier> <name pos:line="34" pos:column="32">string</name></type> <name pos:line="34" pos:column="39">ClassName</name> <block pos:line="34" pos:column="49">{ <function><name pos:line="34" pos:column="51">get</name>;</function> private <function><name pos:line="34" pos:column="64">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">public</specifier> <specifier pos:line="35" pos:column="24">virtual</specifier> <name pos:line="35" pos:column="32">string</name></type> <name pos:line="35" pos:column="39">Modifiers</name> <block pos:line="35" pos:column="49">{ <function><name pos:line="35" pos:column="51">get</name>;</function> private <function><name pos:line="35" pos:column="64">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="36" pos:column="17">public</specifier> <specifier pos:line="36" pos:column="24">virtual</specifier> <name pos:line="36" pos:column="32">bool</name></type> <name pos:line="36" pos:column="37">IsConstructor</name> <block pos:line="36" pos:column="51">{ <function><name pos:line="36" pos:column="53">get</name>;</function> private <function><name pos:line="36" pos:column="66">set</name>;</function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="37" pos:column="17">public</specifier> <specifier pos:line="37" pos:column="24">override</specifier> <name pos:line="37" pos:column="33">ProgramElementType</name></type> <name pos:line="37" pos:column="52">ProgramElementType</name> <block pos:line="37" pos:column="71">{ <function><name pos:line="37" pos:column="73">get</name> <block pos:line="37" pos:column="77">{ <return pos:line="37" pos:column="79">return <expr><name><name pos:line="37" pos:column="86">ProgramElementType</name><op:operator pos:line="37" pos:column="104">.</op:operator><name pos:line="37" pos:column="105">Method</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>
	}</block></class>
}</block></namespace>
</unit>
