<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer.UnitTests\Documents\MyCustomProgramElementForTesting.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Documents</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">ExtensionContracts</name><op:operator pos:line="6" pos:column="31">.</op:operator><name pos:line="6" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Indexer</name><op:operator pos:line="7" pos:column="20">.</op:operator><name pos:line="7" pos:column="21">Documents</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Sando</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">Indexer</name><op:operator pos:line="9" pos:column="24">.</op:operator><name pos:line="9" pos:column="25">UnitTests</name><op:operator pos:line="9" pos:column="34">.</op:operator><name pos:line="9" pos:column="35">Documents</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">MyCustomProgramElementForTesting</name><super pos:line="11" pos:column="50">: <name pos:line="11" pos:column="52">ProgramElement</name></super> 
    <block pos:line="12" pos:column="5">{
        <constructor><specifier pos:line="13" pos:column="9">public</specifier> <name pos:line="13" pos:column="16">MyCustomProgramElementForTesting</name><parameter_list pos:line="13" pos:column="48">(<param><decl><type><name pos:line="13" pos:column="49">string</name></type> <name pos:line="13" pos:column="56">name</name></decl></param><op:operator pos:line="13" pos:column="60">,</op:operator> <param><decl><type><name pos:line="13" pos:column="62">int</name></type> <name pos:line="13" pos:column="66">definitionLineNumber</name></decl></param><op:operator pos:line="13" pos:column="86">,</op:operator> <param><decl><type><name pos:line="13" pos:column="88">string</name></type> <name pos:line="13" pos:column="95">fullFilePath</name></decl></param><op:operator pos:line="13" pos:column="107">,</op:operator> <param><decl><type><name pos:line="13" pos:column="109">string</name></type> <name pos:line="13" pos:column="116">snippet</name></decl></param>)</parameter_list> <member_list pos:line="13" pos:column="125">: <call><name pos:line="13" pos:column="127">base</name><argument_list pos:line="13" pos:column="131">(<argument><expr><name pos:line="13" pos:column="132">name</name></expr></argument><op:operator pos:line="13" pos:column="136">,</op:operator> <argument><expr><name pos:line="13" pos:column="138">definitionLineNumber</name></expr></argument><op:operator pos:line="13" pos:column="158">,</op:operator> <argument><expr><name pos:line="13" pos:column="160">fullFilePath</name></expr></argument><op:operator pos:line="13" pos:column="172">,</op:operator> <argument><expr><name pos:line="13" pos:column="174">snippet</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="14" pos:column="9">{
        }</block></constructor>
        
        <decl_stmt><decl><type><attribute pos:line="17" pos:column="9">[<expr><name pos:line="17" pos:column="10">CustomIndexField</name></expr>]</attribute>
        <specifier pos:line="18" pos:column="9">public</specifier> <name pos:line="18" pos:column="16">String</name></type> <name pos:line="18" pos:column="23">A</name> <block pos:line="18" pos:column="25">{ <function><name pos:line="18" pos:column="27">get</name>;</function> <function><name pos:line="18" pos:column="32">set</name>;</function> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><attribute pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">CustomIndexField</name></expr>]</attribute>
        <specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">String</name></type> <name pos:line="20" pos:column="23">B</name> <block pos:line="20" pos:column="25">{ <function><name pos:line="20" pos:column="27">get</name>;</function> <function><name pos:line="20" pos:column="32">set</name>;</function> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><attribute pos:line="21" pos:column="9">[<expr><name pos:line="21" pos:column="10">CustomIndexField</name></expr>]</attribute>
        <specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">String</name></type> <name pos:line="22" pos:column="23">C</name> <block pos:line="22" pos:column="25">{ <function><name pos:line="22" pos:column="27">get</name>;</function> <function><name pos:line="22" pos:column="32">set</name>;</function> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="24" pos:column="9">public</specifier> <specifier pos:line="24" pos:column="16">static</specifier> <name pos:line="24" pos:column="23">Document</name></type> <name pos:line="24" pos:column="32">GetLuceneDocument</name><parameter_list pos:line="24" pos:column="49">()</parameter_list>
        <block pos:line="25" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">document</name> =<init pos:line="26" pos:column="27"> <expr><op:operator pos:line="26" pos:column="28">new</op:operator> <call><name pos:line="26" pos:column="32">Document</name><argument_list pos:line="26" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">document</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">Add</name></name><argument_list pos:line="27" pos:column="25">(<argument><expr><op:operator pos:line="27" pos:column="26">new</op:operator> <call><name pos:line="27" pos:column="30">Field</name><argument_list pos:line="27" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="36">"A"</lit:literal></expr></argument><op:operator pos:line="27" pos:column="39">,</op:operator> <argument><expr><lit:literal type="string" pos:line="27" pos:column="41">"A's value"</lit:literal></expr></argument><op:operator pos:line="27" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="27" pos:column="54">Field</name><op:operator pos:line="27" pos:column="59">.</op:operator><name pos:line="27" pos:column="60">Store</name><op:operator pos:line="27" pos:column="65">.</op:operator><name pos:line="27" pos:column="66">YES</name></name></expr></argument><op:operator pos:line="27" pos:column="69">,</op:operator> <argument><expr><name><name pos:line="27" pos:column="71">Field</name><op:operator pos:line="27" pos:column="76">.</op:operator><name pos:line="27" pos:column="77">Index</name><op:operator pos:line="27" pos:column="82">.</op:operator><name pos:line="27" pos:column="83">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">document</name><op:operator pos:line="28" pos:column="21">.</op:operator><name pos:line="28" pos:column="22">Add</name></name><argument_list pos:line="28" pos:column="25">(<argument><expr><op:operator pos:line="28" pos:column="26">new</op:operator> <call><name pos:line="28" pos:column="30">Field</name><argument_list pos:line="28" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="36">"B"</lit:literal></expr></argument><op:operator pos:line="28" pos:column="39">,</op:operator> <argument><expr><lit:literal type="string" pos:line="28" pos:column="41">"B's value"</lit:literal></expr></argument><op:operator pos:line="28" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="28" pos:column="54">Field</name><op:operator pos:line="28" pos:column="59">.</op:operator><name pos:line="28" pos:column="60">Store</name><op:operator pos:line="28" pos:column="65">.</op:operator><name pos:line="28" pos:column="66">YES</name></name></expr></argument><op:operator pos:line="28" pos:column="69">,</op:operator> <argument><expr><name><name pos:line="28" pos:column="71">Field</name><op:operator pos:line="28" pos:column="76">.</op:operator><name pos:line="28" pos:column="77">Index</name><op:operator pos:line="28" pos:column="82">.</op:operator><name pos:line="28" pos:column="83">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">document</name><op:operator pos:line="29" pos:column="21">.</op:operator><name pos:line="29" pos:column="22">Add</name></name><argument_list pos:line="29" pos:column="25">(<argument><expr><op:operator pos:line="29" pos:column="26">new</op:operator> <call><name pos:line="29" pos:column="30">Field</name><argument_list pos:line="29" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="36">"C"</lit:literal></expr></argument><op:operator pos:line="29" pos:column="39">,</op:operator> <argument><expr><lit:literal type="string" pos:line="29" pos:column="41">"C's value"</lit:literal></expr></argument><op:operator pos:line="29" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="29" pos:column="54">Field</name><op:operator pos:line="29" pos:column="59">.</op:operator><name pos:line="29" pos:column="60">Store</name><op:operator pos:line="29" pos:column="65">.</op:operator><name pos:line="29" pos:column="66">YES</name></name></expr></argument><op:operator pos:line="29" pos:column="69">,</op:operator> <argument><expr><name><name pos:line="29" pos:column="71">Field</name><op:operator pos:line="29" pos:column="76">.</op:operator><name pos:line="29" pos:column="77">Index</name><op:operator pos:line="29" pos:column="82">.</op:operator><name pos:line="29" pos:column="83">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">document</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">Add</name></name><argument_list pos:line="30" pos:column="25">(<argument><expr><op:operator pos:line="30" pos:column="26">new</op:operator> <call><name pos:line="30" pos:column="30">Field</name><argument_list pos:line="30" pos:column="35">(<argument><expr><call><name><name pos:line="30" pos:column="36">SandoField</name><op:operator pos:line="30" pos:column="46">.</op:operator><name pos:line="30" pos:column="47">Id</name><op:operator pos:line="30" pos:column="49">.</op:operator><name pos:line="30" pos:column="50">ToString</name></name><argument_list pos:line="30" pos:column="58">()</argument_list></call></expr></argument><op:operator pos:line="30" pos:column="60">,</op:operator> <argument><expr><lit:literal type="string" pos:line="30" pos:column="62">"xycasdf3k34"</lit:literal></expr></argument><op:operator pos:line="30" pos:column="75">,</op:operator> <argument><expr><name><name pos:line="30" pos:column="77">Field</name><op:operator pos:line="30" pos:column="82">.</op:operator><name pos:line="30" pos:column="83">Store</name><op:operator pos:line="30" pos:column="88">.</op:operator><name pos:line="30" pos:column="89">YES</name></name></expr></argument><op:operator pos:line="30" pos:column="92">,</op:operator> <argument><expr><name><name pos:line="30" pos:column="94">Field</name><op:operator pos:line="30" pos:column="99">.</op:operator><name pos:line="30" pos:column="100">Index</name><op:operator pos:line="30" pos:column="105">.</op:operator><name pos:line="30" pos:column="106">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">document</name><op:operator pos:line="31" pos:column="21">.</op:operator><name pos:line="31" pos:column="22">Add</name></name><argument_list pos:line="31" pos:column="25">(<argument><expr><op:operator pos:line="31" pos:column="26">new</op:operator> <call><name pos:line="31" pos:column="30">Field</name><argument_list pos:line="31" pos:column="35">(<argument><expr><call><name><name pos:line="31" pos:column="36">SandoField</name><op:operator pos:line="31" pos:column="46">.</op:operator><name pos:line="31" pos:column="47">Name</name><op:operator pos:line="31" pos:column="51">.</op:operator><name pos:line="31" pos:column="52">ToString</name></name><argument_list pos:line="31" pos:column="60">()</argument_list></call></expr></argument><op:operator pos:line="31" pos:column="62">,</op:operator> <argument><expr><lit:literal type="string" pos:line="31" pos:column="64">"customThingName"</lit:literal></expr></argument><op:operator pos:line="31" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="31" pos:column="83">Field</name><op:operator pos:line="31" pos:column="88">.</op:operator><name pos:line="31" pos:column="89">Store</name><op:operator pos:line="31" pos:column="94">.</op:operator><name pos:line="31" pos:column="95">YES</name></name></expr></argument><op:operator pos:line="31" pos:column="98">,</op:operator> <argument><expr><name><name pos:line="31" pos:column="100">Field</name><op:operator pos:line="31" pos:column="105">.</op:operator><name pos:line="31" pos:column="106">Index</name><op:operator pos:line="31" pos:column="111">.</op:operator><name pos:line="31" pos:column="112">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">document</name><op:operator pos:line="32" pos:column="21">.</op:operator><name pos:line="32" pos:column="22">Add</name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><op:operator pos:line="32" pos:column="26">new</op:operator> <call><name pos:line="32" pos:column="30">Field</name><argument_list pos:line="32" pos:column="35">(<argument><expr><call><name><name pos:line="32" pos:column="36">SandoField</name><op:operator pos:line="32" pos:column="46">.</op:operator><name pos:line="32" pos:column="47">ProgramElementType</name><op:operator pos:line="32" pos:column="65">.</op:operator><name pos:line="32" pos:column="66">ToString</name></name><argument_list pos:line="32" pos:column="74">()</argument_list></call></expr></argument><op:operator pos:line="32" pos:column="76">,</op:operator> <argument><expr><call><name><name pos:line="32" pos:column="78">ProgramElementType</name><op:operator pos:line="32" pos:column="96">.</op:operator><name pos:line="32" pos:column="97">Custom</name><op:operator pos:line="32" pos:column="103">.</op:operator><name pos:line="32" pos:column="104">ToString</name></name><argument_list pos:line="32" pos:column="112">()</argument_list></call></expr></argument><op:operator pos:line="32" pos:column="114">,</op:operator> <argument><expr><name><name pos:line="32" pos:column="116">Field</name><op:operator pos:line="32" pos:column="121">.</op:operator><name pos:line="32" pos:column="122">Store</name><op:operator pos:line="32" pos:column="127">.</op:operator><name pos:line="32" pos:column="128">YES</name></name></expr></argument><op:operator pos:line="32" pos:column="131">,</op:operator> <argument><expr><name><name pos:line="32" pos:column="133">Field</name><op:operator pos:line="32" pos:column="138">.</op:operator><name pos:line="32" pos:column="139">Index</name><op:operator pos:line="32" pos:column="144">.</op:operator><name pos:line="32" pos:column="145">NOT_ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">document</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">Add</name></name><argument_list pos:line="33" pos:column="25">(<argument><expr><op:operator pos:line="33" pos:column="26">new</op:operator> <call><name pos:line="33" pos:column="30">Field</name><argument_list pos:line="33" pos:column="35">(<argument><expr><call><name><name pos:line="33" pos:column="36">SandoField</name><op:operator pos:line="33" pos:column="46">.</op:operator><name pos:line="33" pos:column="47">FullFilePath</name><op:operator pos:line="33" pos:column="59">.</op:operator><name pos:line="33" pos:column="60">ToString</name></name><argument_list pos:line="33" pos:column="68">()</argument_list></call></expr></argument><op:operator pos:line="33" pos:column="70">,</op:operator> <argument><expr><lit:literal type="string" pos:line="33" pos:column="72">@"C:\stuff\place.txt"</lit:literal></expr></argument><op:operator pos:line="33" pos:column="93">,</op:operator> <argument><expr><name><name pos:line="33" pos:column="95">Field</name><op:operator pos:line="33" pos:column="100">.</op:operator><name pos:line="33" pos:column="101">Store</name><op:operator pos:line="33" pos:column="106">.</op:operator><name pos:line="33" pos:column="107">YES</name></name></expr></argument><op:operator pos:line="33" pos:column="110">,</op:operator> <argument><expr><name><name pos:line="33" pos:column="112">Field</name><op:operator pos:line="33" pos:column="117">.</op:operator><name pos:line="33" pos:column="118">Index</name><op:operator pos:line="33" pos:column="123">.</op:operator><name pos:line="33" pos:column="124">NOT_ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">document</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">Add</name></name><argument_list pos:line="34" pos:column="25">(<argument><expr><op:operator pos:line="34" pos:column="26">new</op:operator> <call><name pos:line="34" pos:column="30">Field</name><argument_list pos:line="34" pos:column="35">(<argument><expr><call><name><name pos:line="34" pos:column="36">SandoField</name><op:operator pos:line="34" pos:column="46">.</op:operator><name pos:line="34" pos:column="47">DefinitionLineNumber</name><op:operator pos:line="34" pos:column="67">.</op:operator><name pos:line="34" pos:column="68">ToString</name></name><argument_list pos:line="34" pos:column="76">()</argument_list></call></expr></argument><op:operator pos:line="34" pos:column="78">,</op:operator> <argument><expr><lit:literal type="string" pos:line="34" pos:column="80">"123"</lit:literal></expr></argument><op:operator pos:line="34" pos:column="85">,</op:operator> <argument><expr><name><name pos:line="34" pos:column="87">Field</name><op:operator pos:line="34" pos:column="92">.</op:operator><name pos:line="34" pos:column="93">Store</name><op:operator pos:line="34" pos:column="98">.</op:operator><name pos:line="34" pos:column="99">YES</name></name></expr></argument><op:operator pos:line="34" pos:column="102">,</op:operator> <argument><expr><name><name pos:line="34" pos:column="104">Field</name><op:operator pos:line="34" pos:column="109">.</op:operator><name pos:line="34" pos:column="110">Index</name><op:operator pos:line="34" pos:column="115">.</op:operator><name pos:line="34" pos:column="116">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">document</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">Add</name></name><argument_list pos:line="35" pos:column="25">(<argument><expr><op:operator pos:line="35" pos:column="26">new</op:operator> <call><name pos:line="35" pos:column="30">Field</name><argument_list pos:line="35" pos:column="35">(<argument><expr><call><name><name pos:line="35" pos:column="36">SandoField</name><op:operator pos:line="35" pos:column="46">.</op:operator><name pos:line="35" pos:column="47">Source</name><op:operator pos:line="35" pos:column="53">.</op:operator><name pos:line="35" pos:column="54">ToString</name></name><argument_list pos:line="35" pos:column="62">()</argument_list></call></expr></argument><op:operator pos:line="35" pos:column="64">,</op:operator> <argument><expr><lit:literal type="string" pos:line="35" pos:column="66">"The text of the custom thing."</lit:literal></expr></argument><op:operator pos:line="35" pos:column="97">,</op:operator> <argument><expr><name><name pos:line="35" pos:column="99">Field</name><op:operator pos:line="35" pos:column="104">.</op:operator><name pos:line="35" pos:column="105">Store</name><op:operator pos:line="35" pos:column="110">.</op:operator><name pos:line="35" pos:column="111">YES</name></name></expr></argument><op:operator pos:line="35" pos:column="114">,</op:operator> <argument><expr><name><name pos:line="35" pos:column="116">Field</name><op:operator pos:line="35" pos:column="121">.</op:operator><name pos:line="35" pos:column="122">Index</name><op:operator pos:line="35" pos:column="127">.</op:operator><name pos:line="35" pos:column="128">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">document</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">Add</name></name><argument_list pos:line="36" pos:column="25">(<argument><expr><op:operator pos:line="36" pos:column="26">new</op:operator> <call><name pos:line="36" pos:column="30">Field</name><argument_list pos:line="36" pos:column="35">(<argument><expr><name><name pos:line="36" pos:column="36">ProgramElement</name><op:operator pos:line="36" pos:column="50">.</op:operator><name pos:line="36" pos:column="51">CustomTypeTag</name></name></expr></argument><op:operator pos:line="36" pos:column="64">,</op:operator> <argument><expr><call><name pos:line="36" pos:column="66">typeof</name><argument_list pos:line="36" pos:column="72">(<argument><expr><name pos:line="36" pos:column="73">MyCustomProgramElementForTesting</name></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="106">.</op:operator><name pos:line="36" pos:column="107">AssemblyQualifiedName</name></expr></argument><op:operator pos:line="36" pos:column="128">,</op:operator> <argument><expr><name><name pos:line="36" pos:column="130">Field</name><op:operator pos:line="36" pos:column="135">.</op:operator><name pos:line="36" pos:column="136">Store</name><op:operator pos:line="36" pos:column="141">.</op:operator><name pos:line="36" pos:column="142">YES</name></name></expr></argument><op:operator pos:line="36" pos:column="145">,</op:operator> <argument><expr><name><name pos:line="36" pos:column="147">Field</name><op:operator pos:line="36" pos:column="152">.</op:operator><name pos:line="36" pos:column="153">Index</name><op:operator pos:line="36" pos:column="158">.</op:operator><name pos:line="36" pos:column="159">NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">document</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="40" pos:column="9">public</specifier> <specifier pos:line="40" pos:column="16">static</specifier> <name pos:line="40" pos:column="23">MyCustomProgramElementForTesting</name></type> <name pos:line="40" pos:column="56">GetProgramElement</name><parameter_list pos:line="40" pos:column="73">()</parameter_list>
        <block pos:line="41" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">var</name></type> <name pos:line="42" pos:column="17">element</name> =<init pos:line="42" pos:column="26">  <expr><op:operator pos:line="42" pos:column="28">new</op:operator> <call><name pos:line="42" pos:column="32">MyCustomProgramElementForTesting</name><argument_list pos:line="42" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="65">"customThingName"</lit:literal></expr></argument><op:operator pos:line="42" pos:column="82">,</op:operator> <argument><expr><lit:literal type="number" pos:line="42" pos:column="84">123</lit:literal></expr></argument><op:operator pos:line="42" pos:column="87">,</op:operator> <argument><expr><lit:literal type="string" pos:line="42" pos:column="89">@"C:\stuff\place.txt"</lit:literal></expr></argument><op:operator pos:line="42" pos:column="110">,</op:operator> <argument><expr><lit:literal type="string" pos:line="42" pos:column="112">"The text of the custom thing."</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">element</name><op:operator pos:line="43" pos:column="20">.</op:operator><name pos:line="43" pos:column="21">A</name></name> <op:operator pos:line="43" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="43" pos:column="25">"A's value"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">element</name><op:operator pos:line="44" pos:column="20">.</op:operator><name pos:line="44" pos:column="21">B</name></name> <op:operator pos:line="44" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="44" pos:column="25">"B's value"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">element</name><op:operator pos:line="45" pos:column="20">.</op:operator><name pos:line="45" pos:column="21">C</name></name> <op:operator pos:line="45" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="45" pos:column="25">"C's value"</lit:literal></expr>;</expr_stmt>
            <return pos:line="46" pos:column="13">return <expr><name pos:line="46" pos:column="20">element</name></expr>;</return>
        }</block></function>



        <decl_stmt><decl><type><specifier pos:line="51" pos:column="9">public</specifier> <specifier pos:line="51" pos:column="16">override</specifier> <name pos:line="51" pos:column="25">ProgramElementType</name></type> <name pos:line="51" pos:column="44">ProgramElementType</name>
        <block pos:line="52" pos:column="9">{
            <function><name pos:line="53" pos:column="13">get</name> <block pos:line="53" pos:column="17">{ <return pos:line="53" pos:column="19">return <expr><name><name pos:line="53" pos:column="26">ProgramElementType</name><op:operator pos:line="53" pos:column="44">.</op:operator><name pos:line="53" pos:column="45">Custom</name></name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
