<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\View\Converters\MyStrokeConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Globalization</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Windows</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Data</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Sando</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">UI</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">MyStrokeConverter</name> <super pos:line="7" pos:column="36">: <name pos:line="7" pos:column="38">IValueConverter</name></super>
    <block pos:line="8" pos:column="5">{
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">object</name></type> <name pos:line="9" pos:column="23">Convert</name><parameter_list pos:line="9" pos:column="30">(<param><decl><type><name pos:line="9" pos:column="31">object</name></type> <name pos:line="9" pos:column="38">value</name></decl></param><op:operator pos:line="9" pos:column="43">,</op:operator> <param><decl><type><name pos:line="9" pos:column="45">Type</name></type> <name pos:line="9" pos:column="50">targetType</name></decl></param><op:operator pos:line="9" pos:column="60">,</op:operator>
                              <param><decl><type><name pos:line="10" pos:column="31">object</name></type> <name pos:line="10" pos:column="38">parameter</name></decl></param><op:operator pos:line="10" pos:column="47">,</op:operator> <param><decl><type><name pos:line="10" pos:column="49">CultureInfo</name></type> <name pos:line="10" pos:column="61">culture</name></decl></param>)</parameter_list>
        <block pos:line="11" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="12" pos:column="13">var</name></type> <name pos:line="12" pos:column="17">isSelected</name> =<init pos:line="12" pos:column="29"> <expr><call><name><name pos:line="12" pos:column="30">Boolean</name><op:operator pos:line="12" pos:column="37">.</op:operator><name pos:line="12" pos:column="38">Parse</name></name><argument_list pos:line="12" pos:column="43">(<argument><expr><call><name><name pos:line="12" pos:column="44">value</name><op:operator pos:line="12" pos:column="49">.</op:operator><name pos:line="12" pos:column="50">ToString</name></name><argument_list pos:line="12" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">isSelected</name> <op:operator pos:line="13" pos:column="28">!=</op:operator> <name pos:line="13" pos:column="31">null</name></expr>)</condition><then pos:line="13" pos:column="36">
            <block pos:line="14" pos:column="13">{
                <if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">isSelected</name></expr>)</condition><then pos:line="15" pos:column="32">
                <block pos:line="16" pos:column="17">{
                    <return pos:line="17" pos:column="21">return <expr><lit:literal type="string" pos:line="17" pos:column="28">"2"</lit:literal></expr>;</return>
                }</block></then>
                <else pos:line="19" pos:column="17">else
                <block pos:line="20" pos:column="17">{
                    <return pos:line="21" pos:column="21">return <expr><lit:literal type="string" pos:line="21" pos:column="28">"0"</lit:literal></expr>;</return>
                }</block></else></if>
            }</block></then></if>
            <return pos:line="24" pos:column="13">return <expr><lit:literal type="string" pos:line="24" pos:column="20">"0"</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="27" pos:column="9">public</specifier> <name pos:line="27" pos:column="16">object</name></type> <name pos:line="27" pos:column="23">ConvertBack</name><parameter_list pos:line="27" pos:column="34">(<param><decl><type><name pos:line="27" pos:column="35">object</name></type> <name pos:line="27" pos:column="42">value</name></decl></param><op:operator pos:line="27" pos:column="47">,</op:operator> <param><decl><type><name pos:line="27" pos:column="49">Type</name></type> <name pos:line="27" pos:column="54">targetType</name></decl></param><op:operator pos:line="27" pos:column="64">,</op:operator>
                                  <param><decl><type><name pos:line="28" pos:column="35">object</name></type> <name pos:line="28" pos:column="42">parameter</name></decl></param><op:operator pos:line="28" pos:column="51">,</op:operator> <param><decl><type><name pos:line="28" pos:column="53">CultureInfo</name></type> <name pos:line="28" pos:column="65">culture</name></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <throw pos:line="30" pos:column="13">throw <expr><op:operator pos:line="30" pos:column="19">new</op:operator> <call><name pos:line="30" pos:column="23">NotImplementedException</name><argument_list pos:line="30" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
