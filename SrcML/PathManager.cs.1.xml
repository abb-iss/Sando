<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Core\Core\Tools\PathManager.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Microsoft</name><op:operator pos:line="1" pos:column="16">.</op:operator><name pos:line="1" pos:column="17">VisualStudio</name><op:operator pos:line="1" pos:column="29">.</op:operator><name pos:line="1" pos:column="30">Shell</name></name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">System</name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">Generic</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Runtime</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">CompilerServices</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Text</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Microsoft</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">VisualStudio</name><op:operator pos:line="7" pos:column="29">.</op:operator><name pos:line="7" pos:column="30">Shell</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Microsoft</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">VisualStudio</name><op:operator pos:line="8" pos:column="29">.</op:operator><name pos:line="8" pos:column="30">Shell</name><op:operator pos:line="8" pos:column="35">.</op:operator><name pos:line="8" pos:column="36">Interop</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Reflection</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">IO</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Core</name><op:operator pos:line="11" pos:column="17">.</op:operator><name pos:line="11" pos:column="18">Tools</name></name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name><name pos:line="13" pos:column="11">Sando</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">Core</name><op:operator pos:line="13" pos:column="21">.</op:operator><name pos:line="13" pos:column="22">Tools</name></name>
<block pos:line="14" pos:column="1">{
    <class><specifier pos:line="15" pos:column="5">public</specifier> class <name pos:line="15" pos:column="18">PathManager</name>
    <block pos:line="16" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <specifier pos:line="17" pos:column="17">static</specifier> <name pos:line="17" pos:column="24">PathManager</name></type> <name pos:line="17" pos:column="36">_instance</name></decl>;</decl_stmt>       
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <name pos:line="18" pos:column="17">string</name></type> <name pos:line="18" pos:column="24">_pathToExtensionRoot</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">static</specifier> <name pos:line="20" pos:column="23">void</name></type> <name pos:line="20" pos:column="28">Create</name><parameter_list pos:line="20" pos:column="34">(<param><decl><type><name pos:line="20" pos:column="35">string</name></type> <name pos:line="20" pos:column="42">path</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <if pos:line="22" pos:column="13">if<condition pos:line="22" pos:column="15">(<expr><call><name><name pos:line="22" pos:column="16">Path</name><op:operator pos:line="22" pos:column="20">.</op:operator><name pos:line="22" pos:column="21">HasExtension</name></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">path</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="22" pos:column="40">
                <expr_stmt><expr><op:operator pos:line="23" pos:column="17">new</op:operator> <call><name pos:line="23" pos:column="21">PathManager</name><argument_list pos:line="23" pos:column="32">(<argument><expr><call><name><name pos:line="23" pos:column="33">Path</name><op:operator pos:line="23" pos:column="37">.</op:operator><name pos:line="23" pos:column="38">GetDirectoryName</name></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
            <else pos:line="24" pos:column="13">else
                <constructor_decl><specifier pos:line="25" pos:column="17">new</specifier> <name pos:line="25" pos:column="21">PathManager</name><parameter_list pos:line="25" pos:column="32">(<param><decl><type><name pos:line="25" pos:column="33">path</name></type></decl></param>)</parameter_list>;</constructor_decl></else></if>
        }</block></function>

        <constructor><specifier pos:line="28" pos:column="9">private</specifier> <name pos:line="28" pos:column="17">PathManager</name><parameter_list pos:line="28" pos:column="28">(<param><decl><type><name pos:line="28" pos:column="29">string</name></type> <name pos:line="28" pos:column="36">pathToExtensionRoot</name></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">this</name><op:operator pos:line="30" pos:column="17">.</op:operator><name pos:line="30" pos:column="18">_pathToExtensionRoot</name></name> <op:operator pos:line="30" pos:column="39">=</op:operator> <name pos:line="30" pos:column="41">pathToExtensionRoot</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">_instance</name> <op:operator pos:line="31" pos:column="23">=</op:operator> <name pos:line="31" pos:column="25">this</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">public</specifier> <specifier pos:line="34" pos:column="16">static</specifier> <name pos:line="34" pos:column="23">PathManager</name></type> <name pos:line="34" pos:column="35">Instance</name>
        <block pos:line="35" pos:column="9">{
            <function><attribute pos:line="36" pos:column="13">[<expr><call><name pos:line="36" pos:column="14">MethodImpl</name><argument_list pos:line="36" pos:column="24">(<argument><expr><name><name pos:line="36" pos:column="25">MethodImplOptions</name><op:operator pos:line="36" pos:column="42">.</op:operator><name pos:line="36" pos:column="43">Synchronized</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
            <name pos:line="37" pos:column="13">get</name>
            <block pos:line="38" pos:column="13">{
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">_instance</name><op:operator pos:line="39" pos:column="30">==</op:operator><name pos:line="39" pos:column="32">null</name></expr>)</condition><then pos:line="39" pos:column="37">                    
                <block pos:line="40" pos:column="17">{
                    <throw pos:line="41" pos:column="21">throw <expr><op:operator pos:line="41" pos:column="27">new</op:operator> <call><name pos:line="41" pos:column="31">NotImplementedException</name><argument_list pos:line="41" pos:column="54">()</argument_list></call></expr>;</throw>
                }</block></then></if>
                <return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">_instance</name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>


        <function><type><specifier pos:line="48" pos:column="9">public</specifier> <name pos:line="48" pos:column="16">string</name></type> <name pos:line="48" pos:column="23">GetExtensionRoot</name><parameter_list pos:line="48" pos:column="39">()</parameter_list>
        <block pos:line="49" pos:column="9">{
            <return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">_pathToExtensionRoot</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="53" pos:column="9">public</specifier> <name pos:line="53" pos:column="16">string</name></type> <name pos:line="53" pos:column="23">GetIndexPath</name><parameter_list pos:line="53" pos:column="35">(<param><decl><type><name><name pos:line="53" pos:column="36">ABB</name><op:operator pos:line="53" pos:column="39">.</op:operator><name pos:line="53" pos:column="40">SrcML</name><op:operator pos:line="53" pos:column="45">.</op:operator><name pos:line="53" pos:column="46">VisualStudio</name><op:operator pos:line="53" pos:column="58">.</op:operator><name pos:line="53" pos:column="59">SolutionMonitor</name><op:operator pos:line="53" pos:column="74">.</op:operator><name pos:line="53" pos:column="75">SolutionKey</name></name></type> <name pos:line="53" pos:column="87">solutionKey</name></decl></param>)</parameter_list>
        <block pos:line="54" pos:column="9">{            
            <return pos:line="55" pos:column="13">return <expr><call><name><name pos:line="55" pos:column="20">LuceneDirectoryHelper</name><op:operator pos:line="55" pos:column="41">.</op:operator><name pos:line="55" pos:column="42">GetOrCreateLuceneDirectoryForSolution</name></name><argument_list pos:line="55" pos:column="79">(<argument><expr><call><name><name pos:line="55" pos:column="80">solutionKey</name><op:operator pos:line="55" pos:column="91">.</op:operator><name pos:line="55" pos:column="92">GetSolutionPath</name></name><argument_list pos:line="55" pos:column="107">()</argument_list></call></expr></argument><op:operator pos:line="55" pos:column="109">,</op:operator> <argument><expr><call><name><name pos:line="55" pos:column="111">PathManager</name><op:operator pos:line="55" pos:column="122">.</op:operator><name pos:line="55" pos:column="123">Instance</name><op:operator pos:line="55" pos:column="131">.</op:operator><name pos:line="55" pos:column="132">GetExtensionRoot</name></name><argument_list pos:line="55" pos:column="148">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>                
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
