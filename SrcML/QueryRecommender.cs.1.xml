<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Recommender\Recommender\QueryRecommender.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Text</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">ABB</name><op:operator pos:line="6" pos:column="10">.</op:operator><name pos:line="6" pos:column="11">Swum</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">ABB</name><op:operator pos:line="7" pos:column="10">.</op:operator><name pos:line="7" pos:column="11">Swum</name><op:operator pos:line="7" pos:column="15">.</op:operator><name pos:line="7" pos:column="16">Nodes</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Sando</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">Recommender</name></name> <block pos:line="9" pos:column="29">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">QueryRecommender</name> <block pos:line="10" pos:column="35">{
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Maps query recommendation strings to an accumulated score for that recommendation</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <name><name pos:line="14" pos:column="17">Dictionary</name><argument_list pos:line="14" pos:column="27">&lt;<argument><name pos:line="14" pos:column="28">string</name></argument>, <argument><name pos:line="14" pos:column="36">int</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="41">recommendations</name></decl>;</decl_stmt> 
        
        
        <constructor><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">QueryRecommender</name><parameter_list pos:line="17" pos:column="32">()</parameter_list> <block pos:line="17" pos:column="35">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">recommendations</name> <op:operator pos:line="18" pos:column="29">=</op:operator> <op:operator pos:line="18" pos:column="31">new</op:operator> <call><name><name pos:line="18" pos:column="35">Dictionary</name><argument_list pos:line="18" pos:column="45">&lt;<argument><name pos:line="18" pos:column="46">string</name></argument>, <argument><name pos:line="18" pos:column="54">int</name></argument>&gt;</argument_list></name><argument_list pos:line="18" pos:column="58">(<argument><expr><name><name pos:line="18" pos:column="59">StringComparer</name><op:operator pos:line="18" pos:column="73">.</op:operator><name pos:line="18" pos:column="74">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>


        <function><type><specifier pos:line="22" pos:column="9">public</specifier> <name><name pos:line="22" pos:column="16">string</name><index pos:line="22" pos:column="22">[]</index></name></type> <name pos:line="22" pos:column="25">GenerateRecommendations</name><parameter_list pos:line="22" pos:column="48">(<param><decl><type><name pos:line="22" pos:column="49">string</name></type> <name pos:line="22" pos:column="56">query</name></decl></param>)</parameter_list> <block pos:line="22" pos:column="63">{
            <if pos:line="23" pos:column="13">if<condition pos:line="23" pos:column="15">(<expr><call><name><name pos:line="23" pos:column="16">string</name><op:operator pos:line="23" pos:column="22">.</op:operator><name pos:line="23" pos:column="23">IsNullOrEmpty</name></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">query</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
                <return pos:line="24" pos:column="17">return <expr><op:operator pos:line="24" pos:column="24">new</op:operator> <name><name pos:line="24" pos:column="28">string</name><index pos:line="24" pos:column="34">[<expr><lit:literal type="number" pos:line="24" pos:column="35">0</lit:literal></expr>]</index></name></expr>;</return>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">recommendations</name><op:operator pos:line="26" pos:column="28">.</op:operator><name pos:line="26" pos:column="29">Clear</name></name><argument_list pos:line="26" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="28" pos:column="13">//TODO: split query into words, search each one?</comment>

            <comment type="line" pos:line="30" pos:column="13">//WeightByFrequency(query);</comment>
            <comment type="line" pos:line="31" pos:column="13">//WeightBySameField(query);</comment>
            <comment type="line" pos:line="32" pos:column="13">//WeightBySameField_WordsInOrder(query);</comment>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">WeightByPartOfSpeech</name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="35" pos:column="13">//return the recommendations sorted by score in descending order</comment>
            <return pos:line="36" pos:column="13">return <expr><call><name><name pos:line="36" pos:column="20">recommendations</name><op:operator pos:line="36" pos:column="35">.</op:operator><name pos:line="36" pos:column="36">OrderByDescending</name></name><argument_list pos:line="36" pos:column="53">(<argument><expr><name pos:line="36" pos:column="54">kvp</name> <op:operator pos:line="36" pos:column="58">=&gt;</op:operator> <name><name pos:line="36" pos:column="61">kvp</name><op:operator pos:line="36" pos:column="64">.</op:operator><name pos:line="36" pos:column="65">Value</name></name></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="71">.</op:operator><call><name pos:line="36" pos:column="72">Select</name><argument_list pos:line="36" pos:column="78">(<argument><expr><name pos:line="36" pos:column="79">kvp</name> <op:operator pos:line="36" pos:column="83">=&gt;</op:operator> <name><name pos:line="36" pos:column="86">kvp</name><op:operator pos:line="36" pos:column="89">.</op:operator><name pos:line="36" pos:column="90">Key</name></name></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="94">.</op:operator><call><name pos:line="36" pos:column="95">ToArray</name><argument_list pos:line="36" pos:column="102">()</argument_list></call></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="40" pos:column="9">private</specifier> <name pos:line="40" pos:column="17">void</name></type> <name pos:line="40" pos:column="22">AddRecommendation</name><parameter_list pos:line="40" pos:column="39">(<param><decl><type><name pos:line="40" pos:column="40">string</name></type> <name pos:line="40" pos:column="47">rec</name></decl></param>)</parameter_list> <block pos:line="40" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">AddRecommendation</name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">rec</name></expr></argument><op:operator pos:line="41" pos:column="34">,</op:operator> <argument><expr><lit:literal type="number" pos:line="41" pos:column="36">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="44" pos:column="9">private</specifier> <name pos:line="44" pos:column="17">void</name></type> <name pos:line="44" pos:column="22">AddRecommendation</name><parameter_list pos:line="44" pos:column="39">(<param><decl><type><name pos:line="44" pos:column="40">string</name></type> <name pos:line="44" pos:column="47">rec</name></decl></param><op:operator pos:line="44" pos:column="50">,</op:operator> <param><decl><type><name pos:line="44" pos:column="52">int</name></type> <name pos:line="44" pos:column="56">score</name></decl></param>)</parameter_list> <block pos:line="44" pos:column="63">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">int</name></type> <name pos:line="45" pos:column="17">count</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">recommendations</name><op:operator pos:line="46" pos:column="28">.</op:operator><name pos:line="46" pos:column="29">TryGetValue</name></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">rec</name></expr></argument><op:operator pos:line="46" pos:column="44">,</op:operator> <argument><specifier pos:line="46" pos:column="46">out</specifier> <expr><name pos:line="46" pos:column="50">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">recommendations</name><index pos:line="47" pos:column="28">[<expr><name pos:line="47" pos:column="29">rec</name></expr>]</index></name> <op:operator pos:line="47" pos:column="34">=</op:operator> <name pos:line="47" pos:column="36">count</name> <op:operator pos:line="47" pos:column="42">+</op:operator> <name pos:line="47" pos:column="44">score</name></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="50" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// Generates query recommendations and weights them by their frequency in the SWUM data.</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;param name="query"&gt;The query string to create recommended completions for.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="54" pos:column="9">private</specifier> <name pos:line="54" pos:column="17">void</name></type> <name pos:line="54" pos:column="22">WeightByFrequency</name><parameter_list pos:line="54" pos:column="39">(<param><decl><type><name pos:line="54" pos:column="40">string</name></type> <name pos:line="54" pos:column="47">query</name></decl></param>)</parameter_list> <block pos:line="54" pos:column="54">{
            <comment type="line" pos:line="55" pos:column="13">//search through all the SWUM data</comment>
            <decl_stmt><decl><type><name><name pos:line="56" pos:column="13">Dictionary</name><argument_list pos:line="56" pos:column="23">&lt;<argument><name pos:line="56" pos:column="24">string</name></argument>, <argument><name pos:line="56" pos:column="32">SwumDataRecord</name></argument>&gt;</argument_list></name></type> <name pos:line="56" pos:column="48">swumData</name> =<init pos:line="56" pos:column="58"> <expr><call><name><name pos:line="56" pos:column="59">SwumManager</name><op:operator pos:line="56" pos:column="70">.</op:operator><name pos:line="56" pos:column="71">Instance</name><op:operator pos:line="56" pos:column="79">.</op:operator><name pos:line="56" pos:column="80">GetSwumData</name></name><argument_list pos:line="56" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="57" pos:column="13">foreach(<init><decl><type><name pos:line="57" pos:column="21">var</name></type> <name pos:line="57" pos:column="25">swumRecord</name> <init pos:line="57" pos:column="36">in <expr><name><name pos:line="57" pos:column="39">swumData</name><op:operator pos:line="57" pos:column="47">.</op:operator><name pos:line="57" pos:column="48">Values</name></name></expr></init></decl></init>) <block pos:line="57" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">var</name></type> <name pos:line="58" pos:column="21">actionWords</name> =<init pos:line="58" pos:column="34"> <expr><op:operator pos:line="58" pos:column="35">new</op:operator> <name><name pos:line="58" pos:column="39">string</name><index pos:line="58" pos:column="45">[]</index></name> <block pos:line="58" pos:column="48">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">var</name></type> <name pos:line="59" pos:column="21">themeWords</name> =<init pos:line="59" pos:column="33"> <expr><op:operator pos:line="59" pos:column="34">new</op:operator> <name><name pos:line="59" pos:column="38">string</name><index pos:line="59" pos:column="44">[]</index></name> <block pos:line="59" pos:column="47">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="60" pos:column="17">var</name></type> <name pos:line="60" pos:column="21">indirectWords</name> =<init pos:line="60" pos:column="36"> <expr><op:operator pos:line="60" pos:column="37">new</op:operator> <name><name pos:line="60" pos:column="41">string</name><index pos:line="60" pos:column="47">[]</index></name> <block pos:line="60" pos:column="50">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="61" pos:column="17">bool</name></type> <name pos:line="61" pos:column="22">queryInAction</name> =<init pos:line="61" pos:column="37"> <expr><lit:literal type="boolean" pos:line="61" pos:column="38">false</lit:literal></expr></init><op:operator pos:line="61" pos:column="43">,</op:operator> <name pos:line="61" pos:column="45">queryInTheme</name> =<init pos:line="61" pos:column="59"> <expr><lit:literal type="boolean" pos:line="61" pos:column="60">false</lit:literal></expr></init><op:operator pos:line="61" pos:column="65">,</op:operator> <name pos:line="61" pos:column="67">queryInIndirect</name> =<init pos:line="61" pos:column="84"> <expr><lit:literal type="boolean" pos:line="61" pos:column="85">false</lit:literal></expr></init></decl>;</decl_stmt>
                <if pos:line="62" pos:column="17">if<condition pos:line="62" pos:column="19">(<expr><op:operator pos:line="62" pos:column="20">!</op:operator><call><name><name pos:line="62" pos:column="21">string</name><op:operator pos:line="62" pos:column="27">.</op:operator><name pos:line="62" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="62" pos:column="46">(<argument><expr><name><name pos:line="62" pos:column="47">swumRecord</name><op:operator pos:line="62" pos:column="57">.</op:operator><name pos:line="62" pos:column="58">Action</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="62" pos:column="66"> <block pos:line="62" pos:column="67">{
                    <expr_stmt><expr><name pos:line="63" pos:column="21">actionWords</name> <op:operator pos:line="63" pos:column="33">=</op:operator> <call><name><name pos:line="63" pos:column="35">swumRecord</name><op:operator pos:line="63" pos:column="45">.</op:operator><name pos:line="63" pos:column="46">Action</name><op:operator pos:line="63" pos:column="52">.</op:operator><name pos:line="63" pos:column="53">Split</name></name><argument_list pos:line="63" pos:column="58">(<argument><expr><op:operator pos:line="63" pos:column="59">new</op:operator><index pos:line="63" pos:column="62">[]</index> <block pos:line="63" pos:column="65">{ <expr><lit:literal type="char" pos:line="63" pos:column="67">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="63" pos:column="72">,</op:operator> <argument><expr><name><name pos:line="63" pos:column="74">StringSplitOptions</name><op:operator pos:line="63" pos:column="92">.</op:operator><name pos:line="63" pos:column="93">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="64" pos:column="21">if<condition pos:line="64" pos:column="23">(<expr><call><name><name pos:line="64" pos:column="24">actionWords</name><op:operator pos:line="64" pos:column="35">.</op:operator><name pos:line="64" pos:column="36">Contains</name></name><argument_list pos:line="64" pos:column="44">(<argument><expr><name pos:line="64" pos:column="45">query</name></expr></argument><op:operator pos:line="64" pos:column="50">,</op:operator> <argument><expr><name><name pos:line="64" pos:column="52">StringComparer</name><op:operator pos:line="64" pos:column="66">.</op:operator><name pos:line="64" pos:column="67">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="64" pos:column="95"> <block pos:line="64" pos:column="96">{
                        <expr_stmt><expr><name pos:line="65" pos:column="25">queryInAction</name> <op:operator pos:line="65" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="65" pos:column="41">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <if pos:line="68" pos:column="17">if<condition pos:line="68" pos:column="19">(<expr><op:operator pos:line="68" pos:column="20">!</op:operator><call><name><name pos:line="68" pos:column="21">string</name><op:operator pos:line="68" pos:column="27">.</op:operator><name pos:line="68" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="68" pos:column="46">(<argument><expr><name><name pos:line="68" pos:column="47">swumRecord</name><op:operator pos:line="68" pos:column="57">.</op:operator><name pos:line="68" pos:column="58">Theme</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="68" pos:column="65"> <block pos:line="68" pos:column="66">{
                    <expr_stmt><expr><name pos:line="69" pos:column="21">themeWords</name> <op:operator pos:line="69" pos:column="32">=</op:operator> <call><name><name pos:line="69" pos:column="34">swumRecord</name><op:operator pos:line="69" pos:column="44">.</op:operator><name pos:line="69" pos:column="45">Theme</name><op:operator pos:line="69" pos:column="50">.</op:operator><name pos:line="69" pos:column="51">Split</name></name><argument_list pos:line="69" pos:column="56">(<argument><expr><op:operator pos:line="69" pos:column="57">new</op:operator><index pos:line="69" pos:column="60">[]</index> <block pos:line="69" pos:column="63">{ <expr><lit:literal type="char" pos:line="69" pos:column="65">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="69" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="69" pos:column="72">StringSplitOptions</name><op:operator pos:line="69" pos:column="90">.</op:operator><name pos:line="69" pos:column="91">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="70" pos:column="21">if<condition pos:line="70" pos:column="23">(<expr><call><name><name pos:line="70" pos:column="24">themeWords</name><op:operator pos:line="70" pos:column="34">.</op:operator><name pos:line="70" pos:column="35">Contains</name></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">query</name></expr></argument><op:operator pos:line="70" pos:column="49">,</op:operator> <argument><expr><name><name pos:line="70" pos:column="51">StringComparer</name><op:operator pos:line="70" pos:column="65">.</op:operator><name pos:line="70" pos:column="66">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="70" pos:column="94"> <block pos:line="70" pos:column="95">{
                        <expr_stmt><expr><name pos:line="71" pos:column="25">queryInTheme</name> <op:operator pos:line="71" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="71" pos:column="40">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <if pos:line="74" pos:column="17">if<condition pos:line="74" pos:column="19">(<expr><op:operator pos:line="74" pos:column="20">!</op:operator><call><name><name pos:line="74" pos:column="21">string</name><op:operator pos:line="74" pos:column="27">.</op:operator><name pos:line="74" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="74" pos:column="46">(<argument><expr><name><name pos:line="74" pos:column="47">swumRecord</name><op:operator pos:line="74" pos:column="57">.</op:operator><name pos:line="74" pos:column="58">IndirectObject</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="74" pos:column="74"> <block pos:line="74" pos:column="75">{
                    <expr_stmt><expr><name pos:line="75" pos:column="21">indirectWords</name> <op:operator pos:line="75" pos:column="35">=</op:operator> <call><name><name pos:line="75" pos:column="37">swumRecord</name><op:operator pos:line="75" pos:column="47">.</op:operator><name pos:line="75" pos:column="48">IndirectObject</name><op:operator pos:line="75" pos:column="62">.</op:operator><name pos:line="75" pos:column="63">Split</name></name><argument_list pos:line="75" pos:column="68">(<argument><expr><op:operator pos:line="75" pos:column="69">new</op:operator><index pos:line="75" pos:column="72">[]</index> <block pos:line="75" pos:column="75">{ <expr><lit:literal type="char" pos:line="75" pos:column="77">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="75" pos:column="82">,</op:operator> <argument><expr><name><name pos:line="75" pos:column="84">StringSplitOptions</name><op:operator pos:line="75" pos:column="102">.</op:operator><name pos:line="75" pos:column="103">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="76" pos:column="21">if<condition pos:line="76" pos:column="23">(<expr><call><name><name pos:line="76" pos:column="24">indirectWords</name><op:operator pos:line="76" pos:column="37">.</op:operator><name pos:line="76" pos:column="38">Contains</name></name><argument_list pos:line="76" pos:column="46">(<argument><expr><name pos:line="76" pos:column="47">query</name></expr></argument><op:operator pos:line="76" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="76" pos:column="54">StringComparer</name><op:operator pos:line="76" pos:column="68">.</op:operator><name pos:line="76" pos:column="69">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="76" pos:column="97"> <block pos:line="76" pos:column="98">{
                        <expr_stmt><expr><name pos:line="77" pos:column="25">queryInIndirect</name> <op:operator pos:line="77" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="77" pos:column="43">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>

                <if pos:line="81" pos:column="17">if<condition pos:line="81" pos:column="19">(<expr><name pos:line="81" pos:column="20">queryInAction</name> <op:operator pos:line="81" pos:column="34">||</op:operator> <name pos:line="81" pos:column="37">queryInTheme</name> <op:operator pos:line="81" pos:column="50">||</op:operator> <name pos:line="81" pos:column="53">queryInIndirect</name></expr>)</condition><then pos:line="81" pos:column="69"> <block pos:line="81" pos:column="70">{
                    <comment type="line" pos:line="82" pos:column="21">//add words from action</comment>
                    <foreach pos:line="83" pos:column="21">foreach(<init><decl><type><name pos:line="83" pos:column="29">var</name></type> <name pos:line="83" pos:column="33">word</name> <init pos:line="83" pos:column="38">in <expr><name pos:line="83" pos:column="41">actionWords</name></expr></init></decl></init>) <block pos:line="83" pos:column="54">{
                        <if pos:line="84" pos:column="25">if<condition pos:line="84" pos:column="27">(<expr><call><name><name pos:line="84" pos:column="28">string</name><op:operator pos:line="84" pos:column="34">.</op:operator><name pos:line="84" pos:column="35">Compare</name></name><argument_list pos:line="84" pos:column="42">(<argument><expr><name pos:line="84" pos:column="43">query</name></expr></argument><op:operator pos:line="84" pos:column="48">,</op:operator> <argument><expr><name pos:line="84" pos:column="50">word</name></expr></argument><op:operator pos:line="84" pos:column="54">,</op:operator> <argument><expr><name><name pos:line="84" pos:column="56">StringComparison</name><op:operator pos:line="84" pos:column="72">.</op:operator><name pos:line="84" pos:column="73">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="84" pos:column="101">!=</op:operator> <lit:literal type="number" pos:line="84" pos:column="104">0</lit:literal></expr>)</condition><then pos:line="84" pos:column="106"> <block pos:line="84" pos:column="107">{
                            <expr_stmt><expr><call><name pos:line="85" pos:column="29">AddRecommendation</name><argument_list pos:line="85" pos:column="46">(<argument><expr><call><name><name pos:line="85" pos:column="47">string</name><op:operator pos:line="85" pos:column="53">.</op:operator><name pos:line="85" pos:column="54">Format</name></name><argument_list pos:line="85" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="85" pos:column="70">,</op:operator> <argument><expr><name pos:line="85" pos:column="72">query</name></expr></argument><op:operator pos:line="85" pos:column="77">,</op:operator> <argument><expr><name pos:line="85" pos:column="79">word</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></foreach>
                    <if pos:line="88" pos:column="21">if<condition pos:line="88" pos:column="23">(<expr><name pos:line="88" pos:column="24">queryInAction</name> <op:operator pos:line="88" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="88" pos:column="41">actionWords</name><op:operator pos:line="88" pos:column="52">.</op:operator><name pos:line="88" pos:column="53">Count</name></name><argument_list pos:line="88" pos:column="58">()</argument_list></call> <op:operator pos:line="88" pos:column="61">&gt;</op:operator> <lit:literal type="number" pos:line="88" pos:column="63">2</lit:literal></expr>)</condition><then pos:line="88" pos:column="65"> <block pos:line="88" pos:column="66">{
                        <expr_stmt><expr><call><name pos:line="89" pos:column="25">AddRecommendation</name><argument_list pos:line="89" pos:column="42">(<argument><expr><name><name pos:line="89" pos:column="43">swumRecord</name><op:operator pos:line="89" pos:column="53">.</op:operator><name pos:line="89" pos:column="54">Action</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="90" pos:column="23">else <if pos:line="90" pos:column="28">if<condition pos:line="90" pos:column="30">(<expr><op:operator pos:line="90" pos:column="31">!</op:operator><name pos:line="90" pos:column="32">queryInAction</name> <op:operator pos:line="90" pos:column="46">&amp;&amp;</op:operator> <call><name><name pos:line="90" pos:column="49">actionWords</name><op:operator pos:line="90" pos:column="60">.</op:operator><name pos:line="90" pos:column="61">Count</name></name><argument_list pos:line="90" pos:column="66">()</argument_list></call> <op:operator pos:line="90" pos:column="69">&gt;</op:operator> <lit:literal type="number" pos:line="90" pos:column="71">1</lit:literal></expr>)</condition><then pos:line="90" pos:column="73"> <block pos:line="90" pos:column="74">{
                        <expr_stmt><expr><call><name pos:line="91" pos:column="25">AddRecommendation</name><argument_list pos:line="91" pos:column="42">(<argument><expr><call><name><name pos:line="91" pos:column="43">string</name><op:operator pos:line="91" pos:column="49">.</op:operator><name pos:line="91" pos:column="50">Format</name></name><argument_list pos:line="91" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="91" pos:column="66">,</op:operator> <argument><expr><name pos:line="91" pos:column="68">query</name></expr></argument><op:operator pos:line="91" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="91" pos:column="75">swumRecord</name><op:operator pos:line="91" pos:column="85">.</op:operator><name pos:line="91" pos:column="86">Action</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="94" pos:column="21">//add words from theme</comment>
                    <foreach pos:line="95" pos:column="21">foreach(<init><decl><type><name pos:line="95" pos:column="29">var</name></type> <name pos:line="95" pos:column="33">word</name> <init pos:line="95" pos:column="38">in <expr><name pos:line="95" pos:column="41">themeWords</name></expr></init></decl></init>) <block pos:line="95" pos:column="53">{
                        <if pos:line="96" pos:column="25">if<condition pos:line="96" pos:column="27">(<expr><call><name><name pos:line="96" pos:column="28">string</name><op:operator pos:line="96" pos:column="34">.</op:operator><name pos:line="96" pos:column="35">Compare</name></name><argument_list pos:line="96" pos:column="42">(<argument><expr><name pos:line="96" pos:column="43">query</name></expr></argument><op:operator pos:line="96" pos:column="48">,</op:operator> <argument><expr><name pos:line="96" pos:column="50">word</name></expr></argument><op:operator pos:line="96" pos:column="54">,</op:operator> <argument><expr><name><name pos:line="96" pos:column="56">StringComparison</name><op:operator pos:line="96" pos:column="72">.</op:operator><name pos:line="96" pos:column="73">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="96" pos:column="101">!=</op:operator> <lit:literal type="number" pos:line="96" pos:column="104">0</lit:literal></expr>)</condition><then pos:line="96" pos:column="106"> <block pos:line="96" pos:column="107">{
                            <expr_stmt><expr><call><name pos:line="97" pos:column="29">AddRecommendation</name><argument_list pos:line="97" pos:column="46">(<argument><expr><call><name><name pos:line="97" pos:column="47">string</name><op:operator pos:line="97" pos:column="53">.</op:operator><name pos:line="97" pos:column="54">Format</name></name><argument_list pos:line="97" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="97" pos:column="70">,</op:operator> <argument><expr><name pos:line="97" pos:column="72">query</name></expr></argument><op:operator pos:line="97" pos:column="77">,</op:operator> <argument><expr><name pos:line="97" pos:column="79">word</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></foreach>
                    <if pos:line="100" pos:column="21">if<condition pos:line="100" pos:column="23">(<expr><name pos:line="100" pos:column="24">queryInTheme</name> <op:operator pos:line="100" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="100" pos:column="40">themeWords</name><op:operator pos:line="100" pos:column="50">.</op:operator><name pos:line="100" pos:column="51">Count</name></name><argument_list pos:line="100" pos:column="56">()</argument_list></call> <op:operator pos:line="100" pos:column="59">&gt;</op:operator> <lit:literal type="number" pos:line="100" pos:column="61">2</lit:literal></expr>)</condition><then pos:line="100" pos:column="63"> <block pos:line="100" pos:column="64">{
                        <expr_stmt><expr><call><name pos:line="101" pos:column="25">AddRecommendation</name><argument_list pos:line="101" pos:column="42">(<argument><expr><name><name pos:line="101" pos:column="43">swumRecord</name><op:operator pos:line="101" pos:column="53">.</op:operator><name pos:line="101" pos:column="54">Theme</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="102" pos:column="23">else <if pos:line="102" pos:column="28">if<condition pos:line="102" pos:column="30">(<expr><op:operator pos:line="102" pos:column="31">!</op:operator><name pos:line="102" pos:column="32">queryInTheme</name> <op:operator pos:line="102" pos:column="45">&amp;&amp;</op:operator> <call><name><name pos:line="102" pos:column="48">themeWords</name><op:operator pos:line="102" pos:column="58">.</op:operator><name pos:line="102" pos:column="59">Count</name></name><argument_list pos:line="102" pos:column="64">()</argument_list></call> <op:operator pos:line="102" pos:column="67">&gt;</op:operator> <lit:literal type="number" pos:line="102" pos:column="69">1</lit:literal></expr>)</condition><then pos:line="102" pos:column="71"> <block pos:line="102" pos:column="72">{
                        <expr_stmt><expr><call><name pos:line="103" pos:column="25">AddRecommendation</name><argument_list pos:line="103" pos:column="42">(<argument><expr><call><name><name pos:line="103" pos:column="43">string</name><op:operator pos:line="103" pos:column="49">.</op:operator><name pos:line="103" pos:column="50">Format</name></name><argument_list pos:line="103" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="103" pos:column="66">,</op:operator> <argument><expr><name pos:line="103" pos:column="68">query</name></expr></argument><op:operator pos:line="103" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="103" pos:column="75">swumRecord</name><op:operator pos:line="103" pos:column="85">.</op:operator><name pos:line="103" pos:column="86">Theme</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="106" pos:column="21">//add words from indirect object</comment>
                    <foreach pos:line="107" pos:column="21">foreach(<init><decl><type><name pos:line="107" pos:column="29">var</name></type> <name pos:line="107" pos:column="33">word</name> <init pos:line="107" pos:column="38">in <expr><name pos:line="107" pos:column="41">indirectWords</name></expr></init></decl></init>) <block pos:line="107" pos:column="56">{
                        <if pos:line="108" pos:column="25">if<condition pos:line="108" pos:column="27">(<expr><call><name><name pos:line="108" pos:column="28">string</name><op:operator pos:line="108" pos:column="34">.</op:operator><name pos:line="108" pos:column="35">Compare</name></name><argument_list pos:line="108" pos:column="42">(<argument><expr><name pos:line="108" pos:column="43">query</name></expr></argument><op:operator pos:line="108" pos:column="48">,</op:operator> <argument><expr><name pos:line="108" pos:column="50">word</name></expr></argument><op:operator pos:line="108" pos:column="54">,</op:operator> <argument><expr><name><name pos:line="108" pos:column="56">StringComparison</name><op:operator pos:line="108" pos:column="72">.</op:operator><name pos:line="108" pos:column="73">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="108" pos:column="101">!=</op:operator> <lit:literal type="number" pos:line="108" pos:column="104">0</lit:literal></expr>)</condition><then pos:line="108" pos:column="106"> <block pos:line="108" pos:column="107">{
                            <expr_stmt><expr><call><name pos:line="109" pos:column="29">AddRecommendation</name><argument_list pos:line="109" pos:column="46">(<argument><expr><call><name><name pos:line="109" pos:column="47">string</name><op:operator pos:line="109" pos:column="53">.</op:operator><name pos:line="109" pos:column="54">Format</name></name><argument_list pos:line="109" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="109" pos:column="70">,</op:operator> <argument><expr><name pos:line="109" pos:column="72">query</name></expr></argument><op:operator pos:line="109" pos:column="77">,</op:operator> <argument><expr><name pos:line="109" pos:column="79">word</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></foreach>
                    <if pos:line="112" pos:column="21">if<condition pos:line="112" pos:column="23">(<expr><name pos:line="112" pos:column="24">queryInIndirect</name> <op:operator pos:line="112" pos:column="40">&amp;&amp;</op:operator> <call><name><name pos:line="112" pos:column="43">indirectWords</name><op:operator pos:line="112" pos:column="56">.</op:operator><name pos:line="112" pos:column="57">Count</name></name><argument_list pos:line="112" pos:column="62">()</argument_list></call> <op:operator pos:line="112" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="112" pos:column="67">2</lit:literal></expr>)</condition><then pos:line="112" pos:column="69"> <block pos:line="112" pos:column="70">{
                        <expr_stmt><expr><call><name pos:line="113" pos:column="25">AddRecommendation</name><argument_list pos:line="113" pos:column="42">(<argument><expr><name><name pos:line="113" pos:column="43">swumRecord</name><op:operator pos:line="113" pos:column="53">.</op:operator><name pos:line="113" pos:column="54">IndirectObject</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="114" pos:column="23">else <if pos:line="114" pos:column="28">if<condition pos:line="114" pos:column="30">(<expr><op:operator pos:line="114" pos:column="31">!</op:operator><name pos:line="114" pos:column="32">queryInIndirect</name> <op:operator pos:line="114" pos:column="48">&amp;&amp;</op:operator> <call><name><name pos:line="114" pos:column="51">indirectWords</name><op:operator pos:line="114" pos:column="64">.</op:operator><name pos:line="114" pos:column="65">Count</name></name><argument_list pos:line="114" pos:column="70">()</argument_list></call> <op:operator pos:line="114" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="114" pos:column="75">1</lit:literal></expr>)</condition><then pos:line="114" pos:column="77"> <block pos:line="114" pos:column="78">{
                        <expr_stmt><expr><call><name pos:line="115" pos:column="25">AddRecommendation</name><argument_list pos:line="115" pos:column="42">(<argument><expr><call><name><name pos:line="115" pos:column="43">string</name><op:operator pos:line="115" pos:column="49">.</op:operator><name pos:line="115" pos:column="50">Format</name></name><argument_list pos:line="115" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="115" pos:column="66">,</op:operator> <argument><expr><name pos:line="115" pos:column="68">query</name></expr></argument><op:operator pos:line="115" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="115" pos:column="75">swumRecord</name><op:operator pos:line="115" pos:column="85">.</op:operator><name pos:line="115" pos:column="86">IndirectObject</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>
                }</block></then></if>
            }</block></foreach>
        }</block></function>

        <comment type="line" pos:line="121" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="122" pos:column="9">/// Generates query recommendations. Words that appear in the same field (action/theme/indirect object) as the</comment>
        <comment type="line" pos:line="123" pos:column="9">/// query word are weighted higher.</comment>
        <comment type="line" pos:line="124" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="125" pos:column="9">/// &lt;param name="query"&gt;The query string to create recommended completions for.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="126" pos:column="9">private</specifier> <name pos:line="126" pos:column="17">void</name></type> <name pos:line="126" pos:column="22">WeightBySameField</name><parameter_list pos:line="126" pos:column="39">(<param><decl><type><name pos:line="126" pos:column="40">string</name></type> <name pos:line="126" pos:column="47">query</name></decl></param>)</parameter_list> <block pos:line="126" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="127" pos:column="13">const</name> <name pos:line="127" pos:column="19">int</name></type> <name pos:line="127" pos:column="23">NormalWeight</name> =<init pos:line="127" pos:column="37"> <expr><lit:literal type="number" pos:line="127" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="128" pos:column="13">const</name> <name pos:line="128" pos:column="19">int</name></type> <name pos:line="128" pos:column="23">QueryInFieldWeight</name> =<init pos:line="128" pos:column="43"> <expr><lit:literal type="number" pos:line="128" pos:column="44">5</lit:literal></expr></init></decl>;</decl_stmt>
            
            
            <comment type="line" pos:line="131" pos:column="13">//search through all the SWUM data</comment>
            <decl_stmt><decl><type><name><name pos:line="132" pos:column="13">Dictionary</name><argument_list pos:line="132" pos:column="23">&lt;<argument><name pos:line="132" pos:column="24">string</name></argument>, <argument><name pos:line="132" pos:column="32">SwumDataRecord</name></argument>&gt;</argument_list></name></type> <name pos:line="132" pos:column="48">swumData</name> =<init pos:line="132" pos:column="58"> <expr><call><name><name pos:line="132" pos:column="59">SwumManager</name><op:operator pos:line="132" pos:column="70">.</op:operator><name pos:line="132" pos:column="71">Instance</name><op:operator pos:line="132" pos:column="79">.</op:operator><name pos:line="132" pos:column="80">GetSwumData</name></name><argument_list pos:line="132" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="133" pos:column="13">foreach(<init><decl><type><name pos:line="133" pos:column="21">var</name></type> <name pos:line="133" pos:column="25">swumRecord</name> <init pos:line="133" pos:column="36">in <expr><name><name pos:line="133" pos:column="39">swumData</name><op:operator pos:line="133" pos:column="47">.</op:operator><name pos:line="133" pos:column="48">Values</name></name></expr></init></decl></init>) <block pos:line="133" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="134" pos:column="17">var</name></type> <name pos:line="134" pos:column="21">actionWords</name> =<init pos:line="134" pos:column="34"> <expr><op:operator pos:line="134" pos:column="35">new</op:operator> <name><name pos:line="134" pos:column="39">string</name><index pos:line="134" pos:column="45">[]</index></name> <block pos:line="134" pos:column="48">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="135" pos:column="17">var</name></type> <name pos:line="135" pos:column="21">themeWords</name> =<init pos:line="135" pos:column="33"> <expr><op:operator pos:line="135" pos:column="34">new</op:operator> <name><name pos:line="135" pos:column="38">string</name><index pos:line="135" pos:column="44">[]</index></name> <block pos:line="135" pos:column="47">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="136" pos:column="17">var</name></type> <name pos:line="136" pos:column="21">indirectWords</name> =<init pos:line="136" pos:column="36"> <expr><op:operator pos:line="136" pos:column="37">new</op:operator> <name><name pos:line="136" pos:column="41">string</name><index pos:line="136" pos:column="47">[]</index></name> <block pos:line="136" pos:column="50">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="137" pos:column="17">bool</name></type> <name pos:line="137" pos:column="22">queryInAction</name> =<init pos:line="137" pos:column="37"> <expr><lit:literal type="boolean" pos:line="137" pos:column="38">false</lit:literal></expr></init><op:operator pos:line="137" pos:column="43">,</op:operator> <name pos:line="137" pos:column="45">queryInTheme</name> =<init pos:line="137" pos:column="59"> <expr><lit:literal type="boolean" pos:line="137" pos:column="60">false</lit:literal></expr></init><op:operator pos:line="137" pos:column="65">,</op:operator> <name pos:line="137" pos:column="67">queryInIndirect</name> =<init pos:line="137" pos:column="84"> <expr><lit:literal type="boolean" pos:line="137" pos:column="85">false</lit:literal></expr></init></decl>;</decl_stmt>
                <if pos:line="138" pos:column="17">if<condition pos:line="138" pos:column="19">(<expr><op:operator pos:line="138" pos:column="20">!</op:operator><call><name><name pos:line="138" pos:column="21">string</name><op:operator pos:line="138" pos:column="27">.</op:operator><name pos:line="138" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="138" pos:column="46">(<argument><expr><name><name pos:line="138" pos:column="47">swumRecord</name><op:operator pos:line="138" pos:column="57">.</op:operator><name pos:line="138" pos:column="58">Action</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="138" pos:column="66"> <block pos:line="138" pos:column="67">{
                    <expr_stmt><expr><name pos:line="139" pos:column="21">actionWords</name> <op:operator pos:line="139" pos:column="33">=</op:operator> <call><name><name pos:line="139" pos:column="35">swumRecord</name><op:operator pos:line="139" pos:column="45">.</op:operator><name pos:line="139" pos:column="46">Action</name><op:operator pos:line="139" pos:column="52">.</op:operator><name pos:line="139" pos:column="53">Split</name></name><argument_list pos:line="139" pos:column="58">(<argument><expr><op:operator pos:line="139" pos:column="59">new</op:operator><index pos:line="139" pos:column="62">[]</index> <block pos:line="139" pos:column="65">{ <expr><lit:literal type="char" pos:line="139" pos:column="67">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="139" pos:column="72">,</op:operator> <argument><expr><name><name pos:line="139" pos:column="74">StringSplitOptions</name><op:operator pos:line="139" pos:column="92">.</op:operator><name pos:line="139" pos:column="93">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="140" pos:column="21">if<condition pos:line="140" pos:column="23">(<expr><call><name><name pos:line="140" pos:column="24">actionWords</name><op:operator pos:line="140" pos:column="35">.</op:operator><name pos:line="140" pos:column="36">Contains</name></name><argument_list pos:line="140" pos:column="44">(<argument><expr><name pos:line="140" pos:column="45">query</name></expr></argument><op:operator pos:line="140" pos:column="50">,</op:operator> <argument><expr><name><name pos:line="140" pos:column="52">StringComparer</name><op:operator pos:line="140" pos:column="66">.</op:operator><name pos:line="140" pos:column="67">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="140" pos:column="95"> <block pos:line="140" pos:column="96">{
                        <expr_stmt><expr><name pos:line="141" pos:column="25">queryInAction</name> <op:operator pos:line="141" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="141" pos:column="41">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <if pos:line="144" pos:column="17">if<condition pos:line="144" pos:column="19">(<expr><op:operator pos:line="144" pos:column="20">!</op:operator><call><name><name pos:line="144" pos:column="21">string</name><op:operator pos:line="144" pos:column="27">.</op:operator><name pos:line="144" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="144" pos:column="46">(<argument><expr><name><name pos:line="144" pos:column="47">swumRecord</name><op:operator pos:line="144" pos:column="57">.</op:operator><name pos:line="144" pos:column="58">Theme</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="144" pos:column="65"> <block pos:line="144" pos:column="66">{
                    <expr_stmt><expr><name pos:line="145" pos:column="21">themeWords</name> <op:operator pos:line="145" pos:column="32">=</op:operator> <call><name><name pos:line="145" pos:column="34">swumRecord</name><op:operator pos:line="145" pos:column="44">.</op:operator><name pos:line="145" pos:column="45">Theme</name><op:operator pos:line="145" pos:column="50">.</op:operator><name pos:line="145" pos:column="51">Split</name></name><argument_list pos:line="145" pos:column="56">(<argument><expr><op:operator pos:line="145" pos:column="57">new</op:operator><index pos:line="145" pos:column="60">[]</index> <block pos:line="145" pos:column="63">{ <expr><lit:literal type="char" pos:line="145" pos:column="65">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="145" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="145" pos:column="72">StringSplitOptions</name><op:operator pos:line="145" pos:column="90">.</op:operator><name pos:line="145" pos:column="91">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="146" pos:column="21">if<condition pos:line="146" pos:column="23">(<expr><call><name><name pos:line="146" pos:column="24">themeWords</name><op:operator pos:line="146" pos:column="34">.</op:operator><name pos:line="146" pos:column="35">Contains</name></name><argument_list pos:line="146" pos:column="43">(<argument><expr><name pos:line="146" pos:column="44">query</name></expr></argument><op:operator pos:line="146" pos:column="49">,</op:operator> <argument><expr><name><name pos:line="146" pos:column="51">StringComparer</name><op:operator pos:line="146" pos:column="65">.</op:operator><name pos:line="146" pos:column="66">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="146" pos:column="94"> <block pos:line="146" pos:column="95">{
                        <expr_stmt><expr><name pos:line="147" pos:column="25">queryInTheme</name> <op:operator pos:line="147" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="147" pos:column="40">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <if pos:line="150" pos:column="17">if<condition pos:line="150" pos:column="19">(<expr><op:operator pos:line="150" pos:column="20">!</op:operator><call><name><name pos:line="150" pos:column="21">string</name><op:operator pos:line="150" pos:column="27">.</op:operator><name pos:line="150" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="150" pos:column="46">(<argument><expr><name><name pos:line="150" pos:column="47">swumRecord</name><op:operator pos:line="150" pos:column="57">.</op:operator><name pos:line="150" pos:column="58">IndirectObject</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="150" pos:column="74"> <block pos:line="150" pos:column="75">{
                    <expr_stmt><expr><name pos:line="151" pos:column="21">indirectWords</name> <op:operator pos:line="151" pos:column="35">=</op:operator> <call><name><name pos:line="151" pos:column="37">swumRecord</name><op:operator pos:line="151" pos:column="47">.</op:operator><name pos:line="151" pos:column="48">IndirectObject</name><op:operator pos:line="151" pos:column="62">.</op:operator><name pos:line="151" pos:column="63">Split</name></name><argument_list pos:line="151" pos:column="68">(<argument><expr><op:operator pos:line="151" pos:column="69">new</op:operator><index pos:line="151" pos:column="72">[]</index> <block pos:line="151" pos:column="75">{ <expr><lit:literal type="char" pos:line="151" pos:column="77">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="151" pos:column="82">,</op:operator> <argument><expr><name><name pos:line="151" pos:column="84">StringSplitOptions</name><op:operator pos:line="151" pos:column="102">.</op:operator><name pos:line="151" pos:column="103">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="152" pos:column="21">if<condition pos:line="152" pos:column="23">(<expr><call><name><name pos:line="152" pos:column="24">indirectWords</name><op:operator pos:line="152" pos:column="37">.</op:operator><name pos:line="152" pos:column="38">Contains</name></name><argument_list pos:line="152" pos:column="46">(<argument><expr><name pos:line="152" pos:column="47">query</name></expr></argument><op:operator pos:line="152" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="152" pos:column="54">StringComparer</name><op:operator pos:line="152" pos:column="68">.</op:operator><name pos:line="152" pos:column="69">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="152" pos:column="97"> <block pos:line="152" pos:column="98">{
                        <expr_stmt><expr><name pos:line="153" pos:column="25">queryInIndirect</name> <op:operator pos:line="153" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="153" pos:column="43">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>

                <if pos:line="157" pos:column="17">if<condition pos:line="157" pos:column="19">(<expr><name pos:line="157" pos:column="20">queryInAction</name> <op:operator pos:line="157" pos:column="34">||</op:operator> <name pos:line="157" pos:column="37">queryInTheme</name> <op:operator pos:line="157" pos:column="50">||</op:operator> <name pos:line="157" pos:column="53">queryInIndirect</name></expr>)</condition><then pos:line="157" pos:column="69"> <block pos:line="157" pos:column="70">{
                    <comment type="line" pos:line="158" pos:column="21">//add words from action</comment>
                    <foreach pos:line="159" pos:column="21">foreach(<init><decl><type><name pos:line="159" pos:column="29">var</name></type> <name pos:line="159" pos:column="33">word</name> <init pos:line="159" pos:column="38">in <expr><name pos:line="159" pos:column="41">actionWords</name></expr></init></decl></init>) <block pos:line="159" pos:column="54">{
                        <if pos:line="160" pos:column="25">if<condition pos:line="160" pos:column="27">(<expr><name pos:line="160" pos:column="28">queryInAction</name></expr>)</condition><then pos:line="160" pos:column="42"> <block pos:line="160" pos:column="43">{
                            <if pos:line="161" pos:column="29">if<condition pos:line="161" pos:column="31">(<expr><call><name><name pos:line="161" pos:column="32">string</name><op:operator pos:line="161" pos:column="38">.</op:operator><name pos:line="161" pos:column="39">Compare</name></name><argument_list pos:line="161" pos:column="46">(<argument><expr><name pos:line="161" pos:column="47">query</name></expr></argument><op:operator pos:line="161" pos:column="52">,</op:operator> <argument><expr><name pos:line="161" pos:column="54">word</name></expr></argument><op:operator pos:line="161" pos:column="58">,</op:operator> <argument><expr><name><name pos:line="161" pos:column="60">StringComparison</name><op:operator pos:line="161" pos:column="76">.</op:operator><name pos:line="161" pos:column="77">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="161" pos:column="105">!=</op:operator> <lit:literal type="number" pos:line="161" pos:column="108">0</lit:literal></expr>)</condition><then pos:line="161" pos:column="110"> <block pos:line="161" pos:column="111">{
                                <comment type="line" pos:line="162" pos:column="33">//the action words contain the query word, but this isn't it</comment>
                                <expr_stmt><expr><call><name pos:line="163" pos:column="33">AddRecommendation</name><argument_list pos:line="163" pos:column="50">(<argument><expr><call><name><name pos:line="163" pos:column="51">string</name><op:operator pos:line="163" pos:column="57">.</op:operator><name pos:line="163" pos:column="58">Format</name></name><argument_list pos:line="163" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="163" pos:column="74">,</op:operator> <argument><expr><name pos:line="163" pos:column="76">query</name></expr></argument><op:operator pos:line="163" pos:column="81">,</op:operator> <argument><expr><name pos:line="163" pos:column="83">word</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="163" pos:column="88">,</op:operator> <argument><expr><name pos:line="163" pos:column="90">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                        }</block></then> <else pos:line="165" pos:column="27">else <block pos:line="165" pos:column="32">{
                            <comment type="line" pos:line="166" pos:column="29">//the action words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="167" pos:column="29">AddRecommendation</name><argument_list pos:line="167" pos:column="46">(<argument><expr><call><name><name pos:line="167" pos:column="47">string</name><op:operator pos:line="167" pos:column="53">.</op:operator><name pos:line="167" pos:column="54">Format</name></name><argument_list pos:line="167" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="167" pos:column="70">,</op:operator> <argument><expr><name pos:line="167" pos:column="72">query</name></expr></argument><op:operator pos:line="167" pos:column="77">,</op:operator> <argument><expr><name pos:line="167" pos:column="79">word</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="167" pos:column="84">,</op:operator> <argument><expr><name pos:line="167" pos:column="86">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></foreach>
                    <if pos:line="170" pos:column="21">if<condition pos:line="170" pos:column="23">(<expr><name pos:line="170" pos:column="24">queryInAction</name> <op:operator pos:line="170" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="170" pos:column="41">actionWords</name><op:operator pos:line="170" pos:column="52">.</op:operator><name pos:line="170" pos:column="53">Count</name></name><argument_list pos:line="170" pos:column="58">()</argument_list></call> <op:operator pos:line="170" pos:column="61">&gt;</op:operator> <lit:literal type="number" pos:line="170" pos:column="63">2</lit:literal></expr>)</condition><then pos:line="170" pos:column="65"> <block pos:line="170" pos:column="66">{
                        <expr_stmt><expr><call><name pos:line="171" pos:column="25">AddRecommendation</name><argument_list pos:line="171" pos:column="42">(<argument><expr><name><name pos:line="171" pos:column="43">swumRecord</name><op:operator pos:line="171" pos:column="53">.</op:operator><name pos:line="171" pos:column="54">Action</name></name></expr></argument><op:operator pos:line="171" pos:column="60">,</op:operator> <argument><expr><name pos:line="171" pos:column="62">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="172" pos:column="23">else <if pos:line="172" pos:column="28">if<condition pos:line="172" pos:column="30">(<expr><op:operator pos:line="172" pos:column="31">!</op:operator><name pos:line="172" pos:column="32">queryInAction</name> <op:operator pos:line="172" pos:column="46">&amp;&amp;</op:operator> <call><name><name pos:line="172" pos:column="49">actionWords</name><op:operator pos:line="172" pos:column="60">.</op:operator><name pos:line="172" pos:column="61">Count</name></name><argument_list pos:line="172" pos:column="66">()</argument_list></call> <op:operator pos:line="172" pos:column="69">&gt;</op:operator> <lit:literal type="number" pos:line="172" pos:column="71">1</lit:literal></expr>)</condition><then pos:line="172" pos:column="73"> <block pos:line="172" pos:column="74">{
                        <expr_stmt><expr><call><name pos:line="173" pos:column="25">AddRecommendation</name><argument_list pos:line="173" pos:column="42">(<argument><expr><call><name><name pos:line="173" pos:column="43">string</name><op:operator pos:line="173" pos:column="49">.</op:operator><name pos:line="173" pos:column="50">Format</name></name><argument_list pos:line="173" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="173" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="173" pos:column="66">,</op:operator> <argument><expr><name pos:line="173" pos:column="68">query</name></expr></argument><op:operator pos:line="173" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="173" pos:column="75">swumRecord</name><op:operator pos:line="173" pos:column="85">.</op:operator><name pos:line="173" pos:column="86">Action</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="173" pos:column="93">,</op:operator> <argument><expr><name pos:line="173" pos:column="95">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="176" pos:column="21">//add words from theme</comment>
                    <foreach pos:line="177" pos:column="21">foreach(<init><decl><type><name pos:line="177" pos:column="29">var</name></type> <name pos:line="177" pos:column="33">word</name> <init pos:line="177" pos:column="38">in <expr><name pos:line="177" pos:column="41">themeWords</name></expr></init></decl></init>) <block pos:line="177" pos:column="53">{
                        <if pos:line="178" pos:column="25">if<condition pos:line="178" pos:column="27">(<expr><name pos:line="178" pos:column="28">queryInTheme</name></expr>)</condition><then pos:line="178" pos:column="41"> <block pos:line="178" pos:column="42">{
                            <if pos:line="179" pos:column="29">if<condition pos:line="179" pos:column="31">(<expr><call><name><name pos:line="179" pos:column="32">string</name><op:operator pos:line="179" pos:column="38">.</op:operator><name pos:line="179" pos:column="39">Compare</name></name><argument_list pos:line="179" pos:column="46">(<argument><expr><name pos:line="179" pos:column="47">query</name></expr></argument><op:operator pos:line="179" pos:column="52">,</op:operator> <argument><expr><name pos:line="179" pos:column="54">word</name></expr></argument><op:operator pos:line="179" pos:column="58">,</op:operator> <argument><expr><name><name pos:line="179" pos:column="60">StringComparison</name><op:operator pos:line="179" pos:column="76">.</op:operator><name pos:line="179" pos:column="77">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="179" pos:column="105">!=</op:operator> <lit:literal type="number" pos:line="179" pos:column="108">0</lit:literal></expr>)</condition><then pos:line="179" pos:column="110"> <block pos:line="179" pos:column="111">{
                                <comment type="line" pos:line="180" pos:column="33">//the theme words contain the query word, but this isn't it</comment>
                                <expr_stmt><expr><call><name pos:line="181" pos:column="33">AddRecommendation</name><argument_list pos:line="181" pos:column="50">(<argument><expr><call><name><name pos:line="181" pos:column="51">string</name><op:operator pos:line="181" pos:column="57">.</op:operator><name pos:line="181" pos:column="58">Format</name></name><argument_list pos:line="181" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="181" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="181" pos:column="74">,</op:operator> <argument><expr><name pos:line="181" pos:column="76">query</name></expr></argument><op:operator pos:line="181" pos:column="81">,</op:operator> <argument><expr><name pos:line="181" pos:column="83">word</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="181" pos:column="88">,</op:operator> <argument><expr><name pos:line="181" pos:column="90">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                        }</block></then> <else pos:line="183" pos:column="27">else <block pos:line="183" pos:column="32">{
                            <comment type="line" pos:line="184" pos:column="29">//the theme words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="185" pos:column="29">AddRecommendation</name><argument_list pos:line="185" pos:column="46">(<argument><expr><call><name><name pos:line="185" pos:column="47">string</name><op:operator pos:line="185" pos:column="53">.</op:operator><name pos:line="185" pos:column="54">Format</name></name><argument_list pos:line="185" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="185" pos:column="70">,</op:operator> <argument><expr><name pos:line="185" pos:column="72">query</name></expr></argument><op:operator pos:line="185" pos:column="77">,</op:operator> <argument><expr><name pos:line="185" pos:column="79">word</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="185" pos:column="84">,</op:operator> <argument><expr><name pos:line="185" pos:column="86">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></foreach>
                    <if pos:line="188" pos:column="21">if<condition pos:line="188" pos:column="23">(<expr><name pos:line="188" pos:column="24">queryInTheme</name> <op:operator pos:line="188" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="188" pos:column="40">themeWords</name><op:operator pos:line="188" pos:column="50">.</op:operator><name pos:line="188" pos:column="51">Count</name></name><argument_list pos:line="188" pos:column="56">()</argument_list></call> <op:operator pos:line="188" pos:column="59">&gt;</op:operator> <lit:literal type="number" pos:line="188" pos:column="61">2</lit:literal></expr>)</condition><then pos:line="188" pos:column="63"> <block pos:line="188" pos:column="64">{
                        <expr_stmt><expr><call><name pos:line="189" pos:column="25">AddRecommendation</name><argument_list pos:line="189" pos:column="42">(<argument><expr><name><name pos:line="189" pos:column="43">swumRecord</name><op:operator pos:line="189" pos:column="53">.</op:operator><name pos:line="189" pos:column="54">Theme</name></name></expr></argument><op:operator pos:line="189" pos:column="59">,</op:operator> <argument><expr><name pos:line="189" pos:column="61">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="190" pos:column="23">else <if pos:line="190" pos:column="28">if<condition pos:line="190" pos:column="30">(<expr><op:operator pos:line="190" pos:column="31">!</op:operator><name pos:line="190" pos:column="32">queryInTheme</name> <op:operator pos:line="190" pos:column="45">&amp;&amp;</op:operator> <call><name><name pos:line="190" pos:column="48">themeWords</name><op:operator pos:line="190" pos:column="58">.</op:operator><name pos:line="190" pos:column="59">Count</name></name><argument_list pos:line="190" pos:column="64">()</argument_list></call> <op:operator pos:line="190" pos:column="67">&gt;</op:operator> <lit:literal type="number" pos:line="190" pos:column="69">1</lit:literal></expr>)</condition><then pos:line="190" pos:column="71"> <block pos:line="190" pos:column="72">{
                        <expr_stmt><expr><call><name pos:line="191" pos:column="25">AddRecommendation</name><argument_list pos:line="191" pos:column="42">(<argument><expr><call><name><name pos:line="191" pos:column="43">string</name><op:operator pos:line="191" pos:column="49">.</op:operator><name pos:line="191" pos:column="50">Format</name></name><argument_list pos:line="191" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="191" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="191" pos:column="66">,</op:operator> <argument><expr><name pos:line="191" pos:column="68">query</name></expr></argument><op:operator pos:line="191" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="191" pos:column="75">swumRecord</name><op:operator pos:line="191" pos:column="85">.</op:operator><name pos:line="191" pos:column="86">Theme</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="191" pos:column="92">,</op:operator> <argument><expr><name pos:line="191" pos:column="94">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="194" pos:column="21">//add words from indirect object</comment>
                    <foreach pos:line="195" pos:column="21">foreach(<init><decl><type><name pos:line="195" pos:column="29">var</name></type> <name pos:line="195" pos:column="33">word</name> <init pos:line="195" pos:column="38">in <expr><name pos:line="195" pos:column="41">indirectWords</name></expr></init></decl></init>) <block pos:line="195" pos:column="56">{
                        <if pos:line="196" pos:column="25">if<condition pos:line="196" pos:column="27">(<expr><name pos:line="196" pos:column="28">queryInIndirect</name></expr>)</condition><then pos:line="196" pos:column="44"> <block pos:line="196" pos:column="45">{
                            <if pos:line="197" pos:column="29">if<condition pos:line="197" pos:column="31">(<expr><call><name><name pos:line="197" pos:column="32">string</name><op:operator pos:line="197" pos:column="38">.</op:operator><name pos:line="197" pos:column="39">Compare</name></name><argument_list pos:line="197" pos:column="46">(<argument><expr><name pos:line="197" pos:column="47">query</name></expr></argument><op:operator pos:line="197" pos:column="52">,</op:operator> <argument><expr><name pos:line="197" pos:column="54">word</name></expr></argument><op:operator pos:line="197" pos:column="58">,</op:operator> <argument><expr><name><name pos:line="197" pos:column="60">StringComparison</name><op:operator pos:line="197" pos:column="76">.</op:operator><name pos:line="197" pos:column="77">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="197" pos:column="105">!=</op:operator> <lit:literal type="number" pos:line="197" pos:column="108">0</lit:literal></expr>)</condition><then pos:line="197" pos:column="110"> <block pos:line="197" pos:column="111">{
                                <comment type="line" pos:line="198" pos:column="33">//the indirect object words contain the query word, but this isn't it</comment>
                                <expr_stmt><expr><call><name pos:line="199" pos:column="33">AddRecommendation</name><argument_list pos:line="199" pos:column="50">(<argument><expr><call><name><name pos:line="199" pos:column="51">string</name><op:operator pos:line="199" pos:column="57">.</op:operator><name pos:line="199" pos:column="58">Format</name></name><argument_list pos:line="199" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="199" pos:column="74">,</op:operator> <argument><expr><name pos:line="199" pos:column="76">query</name></expr></argument><op:operator pos:line="199" pos:column="81">,</op:operator> <argument><expr><name pos:line="199" pos:column="83">word</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="199" pos:column="88">,</op:operator> <argument><expr><name pos:line="199" pos:column="90">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                        }</block></then> <else pos:line="201" pos:column="27">else <block pos:line="201" pos:column="32">{
                            <comment type="line" pos:line="202" pos:column="29">//the indirect object words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="203" pos:column="29">AddRecommendation</name><argument_list pos:line="203" pos:column="46">(<argument><expr><call><name><name pos:line="203" pos:column="47">string</name><op:operator pos:line="203" pos:column="53">.</op:operator><name pos:line="203" pos:column="54">Format</name></name><argument_list pos:line="203" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="203" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="203" pos:column="70">,</op:operator> <argument><expr><name pos:line="203" pos:column="72">query</name></expr></argument><op:operator pos:line="203" pos:column="77">,</op:operator> <argument><expr><name pos:line="203" pos:column="79">word</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="203" pos:column="84">,</op:operator> <argument><expr><name pos:line="203" pos:column="86">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></foreach>
                    <if pos:line="206" pos:column="21">if<condition pos:line="206" pos:column="23">(<expr><name pos:line="206" pos:column="24">queryInIndirect</name> <op:operator pos:line="206" pos:column="40">&amp;&amp;</op:operator> <call><name><name pos:line="206" pos:column="43">indirectWords</name><op:operator pos:line="206" pos:column="56">.</op:operator><name pos:line="206" pos:column="57">Count</name></name><argument_list pos:line="206" pos:column="62">()</argument_list></call> <op:operator pos:line="206" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="206" pos:column="67">2</lit:literal></expr>)</condition><then pos:line="206" pos:column="69"> <block pos:line="206" pos:column="70">{
                        <expr_stmt><expr><call><name pos:line="207" pos:column="25">AddRecommendation</name><argument_list pos:line="207" pos:column="42">(<argument><expr><name><name pos:line="207" pos:column="43">swumRecord</name><op:operator pos:line="207" pos:column="53">.</op:operator><name pos:line="207" pos:column="54">IndirectObject</name></name></expr></argument><op:operator pos:line="207" pos:column="68">,</op:operator> <argument><expr><name pos:line="207" pos:column="70">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="208" pos:column="23">else <if pos:line="208" pos:column="28">if<condition pos:line="208" pos:column="30">(<expr><op:operator pos:line="208" pos:column="31">!</op:operator><name pos:line="208" pos:column="32">queryInIndirect</name> <op:operator pos:line="208" pos:column="48">&amp;&amp;</op:operator> <call><name><name pos:line="208" pos:column="51">indirectWords</name><op:operator pos:line="208" pos:column="64">.</op:operator><name pos:line="208" pos:column="65">Count</name></name><argument_list pos:line="208" pos:column="70">()</argument_list></call> <op:operator pos:line="208" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="208" pos:column="75">1</lit:literal></expr>)</condition><then pos:line="208" pos:column="77"> <block pos:line="208" pos:column="78">{
                        <expr_stmt><expr><call><name pos:line="209" pos:column="25">AddRecommendation</name><argument_list pos:line="209" pos:column="42">(<argument><expr><call><name><name pos:line="209" pos:column="43">string</name><op:operator pos:line="209" pos:column="49">.</op:operator><name pos:line="209" pos:column="50">Format</name></name><argument_list pos:line="209" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="209" pos:column="66">,</op:operator> <argument><expr><name pos:line="209" pos:column="68">query</name></expr></argument><op:operator pos:line="209" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="209" pos:column="75">swumRecord</name><op:operator pos:line="209" pos:column="85">.</op:operator><name pos:line="209" pos:column="86">IndirectObject</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="209" pos:column="101">,</op:operator> <argument><expr><name pos:line="209" pos:column="103">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>
                }</block></then></if>
            }</block></foreach>
        }</block></function>

        <comment type="line" pos:line="215" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="216" pos:column="9">/// Generates query recommendations. Words that appear in the same field (action/theme/indirect object) as the</comment>
        <comment type="line" pos:line="217" pos:column="9">/// query word are weighted higher.</comment>
        <comment type="line" pos:line="218" pos:column="9">/// The words in the generated recommendations are sorted in the same order as they appear in the method signature.</comment>
        <comment type="line" pos:line="219" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="220" pos:column="9">/// &lt;param name="query"&gt;The query string to create recommended completions for.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="221" pos:column="9">private</specifier> <name pos:line="221" pos:column="17">void</name></type> <name pos:line="221" pos:column="22">WeightBySameField_WordsInOrder</name><parameter_list pos:line="221" pos:column="52">(<param><decl><type><name pos:line="221" pos:column="53">string</name></type> <name pos:line="221" pos:column="60">query</name></decl></param>)</parameter_list> <block pos:line="221" pos:column="67">{
            <decl_stmt><decl><type><name pos:line="222" pos:column="13">const</name> <name pos:line="222" pos:column="19">int</name></type> <name pos:line="222" pos:column="23">NormalWeight</name> =<init pos:line="222" pos:column="37"> <expr><lit:literal type="number" pos:line="222" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="223" pos:column="13">const</name> <name pos:line="223" pos:column="19">int</name></type> <name pos:line="223" pos:column="23">QueryInFieldWeight</name> =<init pos:line="223" pos:column="43"> <expr><lit:literal type="number" pos:line="223" pos:column="44">5</lit:literal></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="225" pos:column="13">//search through all the SWUM data</comment>
            <decl_stmt><decl><type><name><name pos:line="226" pos:column="13">Dictionary</name><argument_list pos:line="226" pos:column="23">&lt;<argument><name pos:line="226" pos:column="24">string</name></argument>, <argument><name pos:line="226" pos:column="32">SwumDataRecord</name></argument>&gt;</argument_list></name></type> <name pos:line="226" pos:column="48">swumData</name> =<init pos:line="226" pos:column="58"> <expr><call><name><name pos:line="226" pos:column="59">SwumManager</name><op:operator pos:line="226" pos:column="70">.</op:operator><name pos:line="226" pos:column="71">Instance</name><op:operator pos:line="226" pos:column="79">.</op:operator><name pos:line="226" pos:column="80">GetSwumData</name></name><argument_list pos:line="226" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="227" pos:column="13">foreach(<init><decl><type><name pos:line="227" pos:column="21">var</name></type> <name pos:line="227" pos:column="25">swumRecord</name> <init pos:line="227" pos:column="36">in <expr><name><name pos:line="227" pos:column="39">swumData</name><op:operator pos:line="227" pos:column="47">.</op:operator><name pos:line="227" pos:column="48">Values</name></name></expr></init></decl></init>) <block pos:line="227" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="228" pos:column="17">var</name></type> <name pos:line="228" pos:column="21">actionWords</name> =<init pos:line="228" pos:column="34"> <expr><op:operator pos:line="228" pos:column="35">new</op:operator> <name><name pos:line="228" pos:column="39">string</name><index pos:line="228" pos:column="45">[]</index></name> <block pos:line="228" pos:column="48">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="229" pos:column="17">var</name></type> <name pos:line="229" pos:column="21">themeWords</name> =<init pos:line="229" pos:column="33"> <expr><op:operator pos:line="229" pos:column="34">new</op:operator> <name><name pos:line="229" pos:column="38">string</name><index pos:line="229" pos:column="44">[]</index></name> <block pos:line="229" pos:column="47">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="230" pos:column="17">var</name></type> <name pos:line="230" pos:column="21">indirectWords</name> =<init pos:line="230" pos:column="36"> <expr><op:operator pos:line="230" pos:column="37">new</op:operator> <name><name pos:line="230" pos:column="41">string</name><index pos:line="230" pos:column="47">[]</index></name> <block pos:line="230" pos:column="50">{ }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="231" pos:column="17">bool</name></type> <name pos:line="231" pos:column="22">queryInAction</name> =<init pos:line="231" pos:column="37"> <expr><lit:literal type="boolean" pos:line="231" pos:column="38">false</lit:literal></expr></init><op:operator pos:line="231" pos:column="43">,</op:operator> <name pos:line="231" pos:column="45">queryInTheme</name> =<init pos:line="231" pos:column="59"> <expr><lit:literal type="boolean" pos:line="231" pos:column="60">false</lit:literal></expr></init><op:operator pos:line="231" pos:column="65">,</op:operator> <name pos:line="231" pos:column="67">queryInIndirect</name> =<init pos:line="231" pos:column="84"> <expr><lit:literal type="boolean" pos:line="231" pos:column="85">false</lit:literal></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="232" pos:column="17">int</name></type> <name pos:line="232" pos:column="21">queryActionIndex</name> =<init pos:line="232" pos:column="39"> <expr><op:operator pos:line="232" pos:column="40">-</op:operator><lit:literal type="number" pos:line="232" pos:column="41">1</lit:literal></expr></init><op:operator pos:line="232" pos:column="42">,</op:operator> <name pos:line="232" pos:column="44">queryThemeIndex</name> =<init pos:line="232" pos:column="61"> <expr><op:operator pos:line="232" pos:column="62">-</op:operator><lit:literal type="number" pos:line="232" pos:column="63">1</lit:literal></expr></init><op:operator pos:line="232" pos:column="64">,</op:operator> <name pos:line="232" pos:column="66">queryIndirectIndex</name> =<init pos:line="232" pos:column="86"> <expr><op:operator pos:line="232" pos:column="87">-</op:operator><lit:literal type="number" pos:line="232" pos:column="88">1</lit:literal></expr></init></decl>;</decl_stmt>
                <if pos:line="233" pos:column="17">if<condition pos:line="233" pos:column="19">(<expr><op:operator pos:line="233" pos:column="20">!</op:operator><call><name><name pos:line="233" pos:column="21">string</name><op:operator pos:line="233" pos:column="27">.</op:operator><name pos:line="233" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="233" pos:column="46">(<argument><expr><name><name pos:line="233" pos:column="47">swumRecord</name><op:operator pos:line="233" pos:column="57">.</op:operator><name pos:line="233" pos:column="58">Action</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="233" pos:column="66"> <block pos:line="233" pos:column="67">{
                    <expr_stmt><expr><name pos:line="234" pos:column="21">actionWords</name> <op:operator pos:line="234" pos:column="33">=</op:operator> <call><name><name pos:line="234" pos:column="35">swumRecord</name><op:operator pos:line="234" pos:column="45">.</op:operator><name pos:line="234" pos:column="46">Action</name><op:operator pos:line="234" pos:column="52">.</op:operator><name pos:line="234" pos:column="53">Split</name></name><argument_list pos:line="234" pos:column="58">(<argument><expr><op:operator pos:line="234" pos:column="59">new</op:operator><index pos:line="234" pos:column="62">[]</index> <block pos:line="234" pos:column="65">{ <expr><lit:literal type="char" pos:line="234" pos:column="67">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="234" pos:column="72">,</op:operator> <argument><expr><name><name pos:line="234" pos:column="74">StringSplitOptions</name><op:operator pos:line="234" pos:column="92">.</op:operator><name pos:line="234" pos:column="93">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="235" pos:column="21">queryActionIndex</name> <op:operator pos:line="235" pos:column="38">=</op:operator> <call><name><name pos:line="235" pos:column="40">Array</name><op:operator pos:line="235" pos:column="45">.</op:operator><name pos:line="235" pos:column="46">FindIndex</name></name><argument_list pos:line="235" pos:column="55">(<argument><expr><name pos:line="235" pos:column="56">actionWords</name></expr></argument><op:operator pos:line="235" pos:column="67">,</op:operator> <argument><expr><name pos:line="235" pos:column="69">s</name> <op:operator pos:line="235" pos:column="71">=&gt;</op:operator> <call><name><name pos:line="235" pos:column="74">string</name><op:operator pos:line="235" pos:column="80">.</op:operator><name pos:line="235" pos:column="81">Compare</name></name><argument_list pos:line="235" pos:column="88">(<argument><expr><name pos:line="235" pos:column="89">s</name></expr></argument><op:operator pos:line="235" pos:column="90">,</op:operator> <argument><expr><name pos:line="235" pos:column="92">query</name></expr></argument><op:operator pos:line="235" pos:column="97">,</op:operator> <argument><expr><name><name pos:line="235" pos:column="99">StringComparison</name><op:operator pos:line="235" pos:column="115">.</op:operator><name pos:line="235" pos:column="116">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="235" pos:column="144">==</op:operator> <lit:literal type="number" pos:line="235" pos:column="147">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="236" pos:column="21">if<condition pos:line="236" pos:column="23">(<expr><name pos:line="236" pos:column="24">queryActionIndex</name> <op:operator pos:line="236" pos:column="41">&gt;</op:operator> <op:operator pos:line="236" pos:column="43">-</op:operator><lit:literal type="number" pos:line="236" pos:column="44">1</lit:literal></expr>)</condition><then pos:line="236" pos:column="46"> <block pos:line="236" pos:column="47">{ <expr_stmt><expr><name pos:line="236" pos:column="49">queryInAction</name> <op:operator pos:line="236" pos:column="63">=</op:operator> <lit:literal type="boolean" pos:line="236" pos:column="65">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
                }</block></then></if>
                <if pos:line="238" pos:column="17">if<condition pos:line="238" pos:column="19">(<expr><op:operator pos:line="238" pos:column="20">!</op:operator><call><name><name pos:line="238" pos:column="21">string</name><op:operator pos:line="238" pos:column="27">.</op:operator><name pos:line="238" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="238" pos:column="46">(<argument><expr><name><name pos:line="238" pos:column="47">swumRecord</name><op:operator pos:line="238" pos:column="57">.</op:operator><name pos:line="238" pos:column="58">Theme</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="238" pos:column="65"> <block pos:line="238" pos:column="66">{
                    <expr_stmt><expr><name pos:line="239" pos:column="21">themeWords</name> <op:operator pos:line="239" pos:column="32">=</op:operator> <call><name><name pos:line="239" pos:column="34">swumRecord</name><op:operator pos:line="239" pos:column="44">.</op:operator><name pos:line="239" pos:column="45">Theme</name><op:operator pos:line="239" pos:column="50">.</op:operator><name pos:line="239" pos:column="51">Split</name></name><argument_list pos:line="239" pos:column="56">(<argument><expr><op:operator pos:line="239" pos:column="57">new</op:operator><index pos:line="239" pos:column="60">[]</index> <block pos:line="239" pos:column="63">{ <expr><lit:literal type="char" pos:line="239" pos:column="65">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="239" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="239" pos:column="72">StringSplitOptions</name><op:operator pos:line="239" pos:column="90">.</op:operator><name pos:line="239" pos:column="91">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="240" pos:column="21">queryThemeIndex</name> <op:operator pos:line="240" pos:column="37">=</op:operator> <call><name><name pos:line="240" pos:column="39">Array</name><op:operator pos:line="240" pos:column="44">.</op:operator><name pos:line="240" pos:column="45">FindIndex</name></name><argument_list pos:line="240" pos:column="54">(<argument><expr><name pos:line="240" pos:column="55">themeWords</name></expr></argument><op:operator pos:line="240" pos:column="65">,</op:operator> <argument><expr><name pos:line="240" pos:column="67">s</name> <op:operator pos:line="240" pos:column="69">=&gt;</op:operator> <call><name><name pos:line="240" pos:column="72">string</name><op:operator pos:line="240" pos:column="78">.</op:operator><name pos:line="240" pos:column="79">Compare</name></name><argument_list pos:line="240" pos:column="86">(<argument><expr><name pos:line="240" pos:column="87">s</name></expr></argument><op:operator pos:line="240" pos:column="88">,</op:operator> <argument><expr><name pos:line="240" pos:column="90">query</name></expr></argument><op:operator pos:line="240" pos:column="95">,</op:operator> <argument><expr><name><name pos:line="240" pos:column="97">StringComparison</name><op:operator pos:line="240" pos:column="113">.</op:operator><name pos:line="240" pos:column="114">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="240" pos:column="142">==</op:operator> <lit:literal type="number" pos:line="240" pos:column="145">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="241" pos:column="21">if<condition pos:line="241" pos:column="23">(<expr><name pos:line="241" pos:column="24">queryThemeIndex</name> <op:operator pos:line="241" pos:column="40">&gt;</op:operator> <op:operator pos:line="241" pos:column="42">-</op:operator><lit:literal type="number" pos:line="241" pos:column="43">1</lit:literal></expr>)</condition><then pos:line="241" pos:column="45"> <block pos:line="241" pos:column="46">{ <expr_stmt><expr><name pos:line="241" pos:column="48">queryInTheme</name> <op:operator pos:line="241" pos:column="61">=</op:operator> <lit:literal type="boolean" pos:line="241" pos:column="63">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
                }</block></then></if>
                <if pos:line="243" pos:column="17">if<condition pos:line="243" pos:column="19">(<expr><op:operator pos:line="243" pos:column="20">!</op:operator><call><name><name pos:line="243" pos:column="21">string</name><op:operator pos:line="243" pos:column="27">.</op:operator><name pos:line="243" pos:column="28">IsNullOrWhiteSpace</name></name><argument_list pos:line="243" pos:column="46">(<argument><expr><name><name pos:line="243" pos:column="47">swumRecord</name><op:operator pos:line="243" pos:column="57">.</op:operator><name pos:line="243" pos:column="58">IndirectObject</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="243" pos:column="74"> <block pos:line="243" pos:column="75">{
                    <expr_stmt><expr><name pos:line="244" pos:column="21">indirectWords</name> <op:operator pos:line="244" pos:column="35">=</op:operator> <call><name><name pos:line="244" pos:column="37">swumRecord</name><op:operator pos:line="244" pos:column="47">.</op:operator><name pos:line="244" pos:column="48">IndirectObject</name><op:operator pos:line="244" pos:column="62">.</op:operator><name pos:line="244" pos:column="63">Split</name></name><argument_list pos:line="244" pos:column="68">(<argument><expr><op:operator pos:line="244" pos:column="69">new</op:operator><index pos:line="244" pos:column="72">[]</index> <block pos:line="244" pos:column="75">{ <expr><lit:literal type="char" pos:line="244" pos:column="77">' '</lit:literal></expr> }</block></expr></argument><op:operator pos:line="244" pos:column="82">,</op:operator> <argument><expr><name><name pos:line="244" pos:column="84">StringSplitOptions</name><op:operator pos:line="244" pos:column="102">.</op:operator><name pos:line="244" pos:column="103">RemoveEmptyEntries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="245" pos:column="21">queryIndirectIndex</name> <op:operator pos:line="245" pos:column="40">=</op:operator> <call><name><name pos:line="245" pos:column="42">Array</name><op:operator pos:line="245" pos:column="47">.</op:operator><name pos:line="245" pos:column="48">FindIndex</name></name><argument_list pos:line="245" pos:column="57">(<argument><expr><name pos:line="245" pos:column="58">indirectWords</name></expr></argument><op:operator pos:line="245" pos:column="71">,</op:operator> <argument><expr><name pos:line="245" pos:column="73">s</name> <op:operator pos:line="245" pos:column="75">=&gt;</op:operator> <call><name><name pos:line="245" pos:column="78">string</name><op:operator pos:line="245" pos:column="84">.</op:operator><name pos:line="245" pos:column="85">Compare</name></name><argument_list pos:line="245" pos:column="92">(<argument><expr><name pos:line="245" pos:column="93">s</name></expr></argument><op:operator pos:line="245" pos:column="94">,</op:operator> <argument><expr><name pos:line="245" pos:column="96">query</name></expr></argument><op:operator pos:line="245" pos:column="101">,</op:operator> <argument><expr><name><name pos:line="245" pos:column="103">StringComparison</name><op:operator pos:line="245" pos:column="119">.</op:operator><name pos:line="245" pos:column="120">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="245" pos:column="148">==</op:operator> <lit:literal type="number" pos:line="245" pos:column="151">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="246" pos:column="21">if<condition pos:line="246" pos:column="23">(<expr><name pos:line="246" pos:column="24">queryIndirectIndex</name> <op:operator pos:line="246" pos:column="43">&gt;</op:operator> <op:operator pos:line="246" pos:column="45">-</op:operator><lit:literal type="number" pos:line="246" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="246" pos:column="48"> <block pos:line="246" pos:column="49">{ <expr_stmt><expr><name pos:line="246" pos:column="51">queryInIndirect</name> <op:operator pos:line="246" pos:column="67">=</op:operator> <lit:literal type="boolean" pos:line="246" pos:column="69">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
                }</block></then></if>

                <if pos:line="249" pos:column="17">if<condition pos:line="249" pos:column="19">(<expr><name pos:line="249" pos:column="20">queryInAction</name> <op:operator pos:line="249" pos:column="34">||</op:operator> <name pos:line="249" pos:column="37">queryInTheme</name> <op:operator pos:line="249" pos:column="50">||</op:operator> <name pos:line="249" pos:column="53">queryInIndirect</name></expr>)</condition><then pos:line="249" pos:column="69"> <block pos:line="249" pos:column="70">{
                    <comment type="line" pos:line="250" pos:column="21">//add words from action</comment>
                    <for pos:line="251" pos:column="21">for(<init><decl><type><name pos:line="251" pos:column="25">int</name></type> <name pos:line="251" pos:column="29">i</name> =<init pos:line="251" pos:column="32"> <expr><lit:literal type="number" pos:line="251" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="251" pos:column="36">i</name> <op:operator pos:line="251" pos:column="38">&lt;</op:operator> <name><name pos:line="251" pos:column="40">actionWords</name><op:operator pos:line="251" pos:column="51">.</op:operator><name pos:line="251" pos:column="52">Length</name></name></expr>;</condition> <incr><expr><name pos:line="251" pos:column="60">i</name><op:operator pos:line="251" pos:column="61">++</op:operator></expr></incr>) <block pos:line="251" pos:column="65">{
                        <if pos:line="252" pos:column="25">if<condition pos:line="252" pos:column="27">(<expr><name pos:line="252" pos:column="28">queryInAction</name></expr>)</condition><then pos:line="252" pos:column="42"> <block pos:line="252" pos:column="43">{
                            <if pos:line="253" pos:column="29">if<condition pos:line="253" pos:column="31">(<expr><name pos:line="253" pos:column="32">i</name> <op:operator pos:line="253" pos:column="34">&lt;</op:operator> <name pos:line="253" pos:column="36">queryActionIndex</name></expr>)</condition><then pos:line="253" pos:column="53"> <block pos:line="253" pos:column="54">{
                                <expr_stmt><expr><call><name pos:line="254" pos:column="33">AddRecommendation</name><argument_list pos:line="254" pos:column="50">(<argument><expr><call><name><name pos:line="254" pos:column="51">string</name><op:operator pos:line="254" pos:column="57">.</op:operator><name pos:line="254" pos:column="58">Format</name></name><argument_list pos:line="254" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="254" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="254" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="254" pos:column="76">actionWords</name><index pos:line="254" pos:column="87">[<expr><name pos:line="254" pos:column="88">i</name></expr>]</index></name></expr></argument><op:operator pos:line="254" pos:column="90">,</op:operator> <argument><expr><name pos:line="254" pos:column="92">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="254" pos:column="98">,</op:operator> <argument><expr><name pos:line="254" pos:column="100">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="255" pos:column="31">else <if pos:line="255" pos:column="36">if<condition pos:line="255" pos:column="38">(<expr><name pos:line="255" pos:column="39">queryActionIndex</name> <op:operator pos:line="255" pos:column="56">&lt;</op:operator> <name pos:line="255" pos:column="58">i</name></expr>)</condition><then pos:line="255" pos:column="60"> <block pos:line="255" pos:column="61">{
                                <expr_stmt><expr><call><name pos:line="256" pos:column="33">AddRecommendation</name><argument_list pos:line="256" pos:column="50">(<argument><expr><call><name><name pos:line="256" pos:column="51">string</name><op:operator pos:line="256" pos:column="57">.</op:operator><name pos:line="256" pos:column="58">Format</name></name><argument_list pos:line="256" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="256" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="256" pos:column="74">,</op:operator> <argument><expr><name pos:line="256" pos:column="76">query</name></expr></argument><op:operator pos:line="256" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="256" pos:column="83">actionWords</name><index pos:line="256" pos:column="94">[<expr><name pos:line="256" pos:column="95">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="256" pos:column="98">,</op:operator> <argument><expr><name pos:line="256" pos:column="100">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if></else></if>
                        }</block></then> <else pos:line="258" pos:column="27">else <block pos:line="258" pos:column="32">{
                            <comment type="line" pos:line="259" pos:column="29">//the action words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="260" pos:column="29">AddRecommendation</name><argument_list pos:line="260" pos:column="46">(<argument><expr><call><name><name pos:line="260" pos:column="47">string</name><op:operator pos:line="260" pos:column="53">.</op:operator><name pos:line="260" pos:column="54">Format</name></name><argument_list pos:line="260" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="260" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="260" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="260" pos:column="72">actionWords</name><index pos:line="260" pos:column="83">[<expr><name pos:line="260" pos:column="84">i</name></expr>]</index></name></expr></argument><op:operator pos:line="260" pos:column="86">,</op:operator> <argument><expr><name pos:line="260" pos:column="88">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="260" pos:column="94">,</op:operator> <argument><expr><name pos:line="260" pos:column="96">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></for>
                    <if pos:line="263" pos:column="21">if<condition pos:line="263" pos:column="23">(<expr><name pos:line="263" pos:column="24">queryInAction</name> <op:operator pos:line="263" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="263" pos:column="41">actionWords</name><op:operator pos:line="263" pos:column="52">.</op:operator><name pos:line="263" pos:column="53">Count</name></name><argument_list pos:line="263" pos:column="58">()</argument_list></call> <op:operator pos:line="263" pos:column="61">&gt;</op:operator> <lit:literal type="number" pos:line="263" pos:column="63">2</lit:literal></expr>)</condition><then pos:line="263" pos:column="65"> <block pos:line="263" pos:column="66">{
                        <expr_stmt><expr><call><name pos:line="264" pos:column="25">AddRecommendation</name><argument_list pos:line="264" pos:column="42">(<argument><expr><name><name pos:line="264" pos:column="43">swumRecord</name><op:operator pos:line="264" pos:column="53">.</op:operator><name pos:line="264" pos:column="54">Action</name></name></expr></argument><op:operator pos:line="264" pos:column="60">,</op:operator> <argument><expr><name pos:line="264" pos:column="62">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="265" pos:column="23">else <if pos:line="265" pos:column="28">if<condition pos:line="265" pos:column="30">(<expr><op:operator pos:line="265" pos:column="31">!</op:operator><name pos:line="265" pos:column="32">queryInAction</name> <op:operator pos:line="265" pos:column="46">&amp;&amp;</op:operator> <call><name><name pos:line="265" pos:column="49">actionWords</name><op:operator pos:line="265" pos:column="60">.</op:operator><name pos:line="265" pos:column="61">Count</name></name><argument_list pos:line="265" pos:column="66">()</argument_list></call> <op:operator pos:line="265" pos:column="69">&gt;</op:operator> <lit:literal type="number" pos:line="265" pos:column="71">1</lit:literal></expr>)</condition><then pos:line="265" pos:column="73"> <block pos:line="265" pos:column="74">{
                        <expr_stmt><expr><call><name pos:line="266" pos:column="25">AddRecommendation</name><argument_list pos:line="266" pos:column="42">(<argument><expr><call><name><name pos:line="266" pos:column="43">string</name><op:operator pos:line="266" pos:column="49">.</op:operator><name pos:line="266" pos:column="50">Format</name></name><argument_list pos:line="266" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="266" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="266" pos:column="66">,</op:operator> <argument><expr><name><name pos:line="266" pos:column="68">swumRecord</name><op:operator pos:line="266" pos:column="78">.</op:operator><name pos:line="266" pos:column="79">Action</name></name></expr></argument><op:operator pos:line="266" pos:column="85">,</op:operator> <argument><expr><name pos:line="266" pos:column="87">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="266" pos:column="93">,</op:operator> <argument><expr><name pos:line="266" pos:column="95">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="269" pos:column="21">//add words from theme</comment>
                    <for pos:line="270" pos:column="21">for(<init><decl><type><name pos:line="270" pos:column="25">int</name></type> <name pos:line="270" pos:column="29">i</name> =<init pos:line="270" pos:column="32"> <expr><lit:literal type="number" pos:line="270" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="270" pos:column="36">i</name> <op:operator pos:line="270" pos:column="38">&lt;</op:operator> <name><name pos:line="270" pos:column="40">themeWords</name><op:operator pos:line="270" pos:column="50">.</op:operator><name pos:line="270" pos:column="51">Length</name></name></expr>;</condition> <incr><expr><name pos:line="270" pos:column="59">i</name><op:operator pos:line="270" pos:column="60">++</op:operator></expr></incr>) <block pos:line="270" pos:column="64">{
                        <if pos:line="271" pos:column="25">if<condition pos:line="271" pos:column="27">(<expr><name pos:line="271" pos:column="28">queryInTheme</name></expr>)</condition><then pos:line="271" pos:column="41"> <block pos:line="271" pos:column="42">{
                            <if pos:line="272" pos:column="29">if<condition pos:line="272" pos:column="31">(<expr><name pos:line="272" pos:column="32">i</name> <op:operator pos:line="272" pos:column="34">&lt;</op:operator> <name pos:line="272" pos:column="36">queryThemeIndex</name></expr>)</condition><then pos:line="272" pos:column="52"> <block pos:line="272" pos:column="53">{
                                <expr_stmt><expr><call><name pos:line="273" pos:column="33">AddRecommendation</name><argument_list pos:line="273" pos:column="50">(<argument><expr><call><name><name pos:line="273" pos:column="51">string</name><op:operator pos:line="273" pos:column="57">.</op:operator><name pos:line="273" pos:column="58">Format</name></name><argument_list pos:line="273" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="273" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="273" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="273" pos:column="76">themeWords</name><index pos:line="273" pos:column="86">[<expr><name pos:line="273" pos:column="87">i</name></expr>]</index></name></expr></argument><op:operator pos:line="273" pos:column="89">,</op:operator> <argument><expr><name pos:line="273" pos:column="91">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="273" pos:column="97">,</op:operator> <argument><expr><name pos:line="273" pos:column="99">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="274" pos:column="31">else <if pos:line="274" pos:column="36">if<condition pos:line="274" pos:column="38">(<expr><name pos:line="274" pos:column="39">queryThemeIndex</name> <op:operator pos:line="274" pos:column="55">&lt;</op:operator> <name pos:line="274" pos:column="57">i</name></expr>)</condition><then pos:line="274" pos:column="59"> <block pos:line="274" pos:column="60">{
                                <expr_stmt><expr><call><name pos:line="275" pos:column="33">AddRecommendation</name><argument_list pos:line="275" pos:column="50">(<argument><expr><call><name><name pos:line="275" pos:column="51">string</name><op:operator pos:line="275" pos:column="57">.</op:operator><name pos:line="275" pos:column="58">Format</name></name><argument_list pos:line="275" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="275" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="275" pos:column="74">,</op:operator> <argument><expr><name pos:line="275" pos:column="76">query</name></expr></argument><op:operator pos:line="275" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="275" pos:column="83">themeWords</name><index pos:line="275" pos:column="93">[<expr><name pos:line="275" pos:column="94">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="275" pos:column="97">,</op:operator> <argument><expr><name pos:line="275" pos:column="99">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if></else></if>
                        }</block></then> <else pos:line="277" pos:column="27">else <block pos:line="277" pos:column="32">{
                            <comment type="line" pos:line="278" pos:column="29">//the theme words do not contain the query word</comment>
                            <if pos:line="279" pos:column="29">if<condition pos:line="279" pos:column="31">(<expr><name pos:line="279" pos:column="32">queryInAction</name></expr>)</condition><then pos:line="279" pos:column="46"> <block pos:line="279" pos:column="47">{
                                <expr_stmt><expr><call><name pos:line="280" pos:column="33">AddRecommendation</name><argument_list pos:line="280" pos:column="50">(<argument><expr><call><name><name pos:line="280" pos:column="51">string</name><op:operator pos:line="280" pos:column="57">.</op:operator><name pos:line="280" pos:column="58">Format</name></name><argument_list pos:line="280" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="280" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="280" pos:column="74">,</op:operator> <argument><expr><name pos:line="280" pos:column="76">query</name></expr></argument><op:operator pos:line="280" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="280" pos:column="83">themeWords</name><index pos:line="280" pos:column="93">[<expr><name pos:line="280" pos:column="94">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="280" pos:column="97">,</op:operator> <argument><expr><name pos:line="280" pos:column="99">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                            <if pos:line="282" pos:column="29">if<condition pos:line="282" pos:column="31">(<expr><name pos:line="282" pos:column="32">queryInIndirect</name></expr>)</condition><then pos:line="282" pos:column="48"> <block pos:line="282" pos:column="49">{
                                <expr_stmt><expr><call><name pos:line="283" pos:column="33">AddRecommendation</name><argument_list pos:line="283" pos:column="50">(<argument><expr><call><name><name pos:line="283" pos:column="51">string</name><op:operator pos:line="283" pos:column="57">.</op:operator><name pos:line="283" pos:column="58">Format</name></name><argument_list pos:line="283" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="283" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="283" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="283" pos:column="76">themeWords</name><index pos:line="283" pos:column="86">[<expr><name pos:line="283" pos:column="87">i</name></expr>]</index></name></expr></argument><op:operator pos:line="283" pos:column="89">,</op:operator> <argument><expr><name pos:line="283" pos:column="91">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="283" pos:column="97">,</op:operator> <argument><expr><name pos:line="283" pos:column="99">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                        }</block></else></if>
                    }</block></for>
                    <if pos:line="287" pos:column="21">if<condition pos:line="287" pos:column="23">(<expr><name pos:line="287" pos:column="24">queryInTheme</name> <op:operator pos:line="287" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="287" pos:column="40">themeWords</name><op:operator pos:line="287" pos:column="50">.</op:operator><name pos:line="287" pos:column="51">Count</name></name><argument_list pos:line="287" pos:column="56">()</argument_list></call> <op:operator pos:line="287" pos:column="59">&gt;</op:operator> <lit:literal type="number" pos:line="287" pos:column="61">2</lit:literal></expr>)</condition><then pos:line="287" pos:column="63"> <block pos:line="287" pos:column="64">{
                        <expr_stmt><expr><call><name pos:line="288" pos:column="25">AddRecommendation</name><argument_list pos:line="288" pos:column="42">(<argument><expr><name><name pos:line="288" pos:column="43">swumRecord</name><op:operator pos:line="288" pos:column="53">.</op:operator><name pos:line="288" pos:column="54">Theme</name></name></expr></argument><op:operator pos:line="288" pos:column="59">,</op:operator> <argument><expr><name pos:line="288" pos:column="61">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="289" pos:column="23">else <if pos:line="289" pos:column="28">if<condition pos:line="289" pos:column="30">(<expr><op:operator pos:line="289" pos:column="31">!</op:operator><name pos:line="289" pos:column="32">queryInTheme</name> <op:operator pos:line="289" pos:column="45">&amp;&amp;</op:operator> <call><name><name pos:line="289" pos:column="48">themeWords</name><op:operator pos:line="289" pos:column="58">.</op:operator><name pos:line="289" pos:column="59">Count</name></name><argument_list pos:line="289" pos:column="64">()</argument_list></call> <op:operator pos:line="289" pos:column="67">&gt;</op:operator> <lit:literal type="number" pos:line="289" pos:column="69">1</lit:literal></expr>)</condition><then pos:line="289" pos:column="71"> <block pos:line="289" pos:column="72">{
                        <if pos:line="290" pos:column="25">if<condition pos:line="290" pos:column="27">(<expr><name pos:line="290" pos:column="28">queryInAction</name></expr>)</condition><then pos:line="290" pos:column="42"> <block pos:line="290" pos:column="43">{
                            <expr_stmt><expr><call><name pos:line="291" pos:column="29">AddRecommendation</name><argument_list pos:line="291" pos:column="46">(<argument><expr><call><name><name pos:line="291" pos:column="47">string</name><op:operator pos:line="291" pos:column="53">.</op:operator><name pos:line="291" pos:column="54">Format</name></name><argument_list pos:line="291" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="291" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="291" pos:column="70">,</op:operator> <argument><expr><name pos:line="291" pos:column="72">query</name></expr></argument><op:operator pos:line="291" pos:column="77">,</op:operator> <argument><expr><name><name pos:line="291" pos:column="79">swumRecord</name><op:operator pos:line="291" pos:column="89">.</op:operator><name pos:line="291" pos:column="90">Theme</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="291" pos:column="96">,</op:operator> <argument><expr><name pos:line="291" pos:column="98">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                        <if pos:line="293" pos:column="25">if<condition pos:line="293" pos:column="27">(<expr><name pos:line="293" pos:column="28">queryInIndirect</name></expr>)</condition><then pos:line="293" pos:column="44"> <block pos:line="293" pos:column="45">{
                            <expr_stmt><expr><call><name pos:line="294" pos:column="29">AddRecommendation</name><argument_list pos:line="294" pos:column="46">(<argument><expr><call><name><name pos:line="294" pos:column="47">string</name><op:operator pos:line="294" pos:column="53">.</op:operator><name pos:line="294" pos:column="54">Format</name></name><argument_list pos:line="294" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="294" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="294" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="294" pos:column="72">swumRecord</name><op:operator pos:line="294" pos:column="82">.</op:operator><name pos:line="294" pos:column="83">Theme</name></name></expr></argument><op:operator pos:line="294" pos:column="88">,</op:operator> <argument><expr><name pos:line="294" pos:column="90">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="294" pos:column="96">,</op:operator> <argument><expr><name pos:line="294" pos:column="98">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="298" pos:column="21">//add words from indirect object</comment>
                    <for pos:line="299" pos:column="21">for(<init><decl><type><name pos:line="299" pos:column="25">int</name></type> <name pos:line="299" pos:column="29">i</name> =<init pos:line="299" pos:column="32"> <expr><lit:literal type="number" pos:line="299" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="299" pos:column="36">i</name> <op:operator pos:line="299" pos:column="38">&lt;</op:operator> <name><name pos:line="299" pos:column="40">indirectWords</name><op:operator pos:line="299" pos:column="53">.</op:operator><name pos:line="299" pos:column="54">Length</name></name></expr>;</condition> <incr><expr><name pos:line="299" pos:column="62">i</name><op:operator pos:line="299" pos:column="63">++</op:operator></expr></incr>) <block pos:line="299" pos:column="67">{
                        <if pos:line="300" pos:column="25">if<condition pos:line="300" pos:column="27">(<expr><name pos:line="300" pos:column="28">queryInIndirect</name></expr>)</condition><then pos:line="300" pos:column="44"> <block pos:line="300" pos:column="45">{
                            <if pos:line="301" pos:column="29">if<condition pos:line="301" pos:column="31">(<expr><name pos:line="301" pos:column="32">i</name> <op:operator pos:line="301" pos:column="34">&lt;</op:operator> <name pos:line="301" pos:column="36">queryIndirectIndex</name></expr>)</condition><then pos:line="301" pos:column="55"> <block pos:line="301" pos:column="56">{
                                <expr_stmt><expr><call><name pos:line="302" pos:column="33">AddRecommendation</name><argument_list pos:line="302" pos:column="50">(<argument><expr><call><name><name pos:line="302" pos:column="51">string</name><op:operator pos:line="302" pos:column="57">.</op:operator><name pos:line="302" pos:column="58">Format</name></name><argument_list pos:line="302" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="302" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="302" pos:column="76">indirectWords</name><index pos:line="302" pos:column="89">[<expr><name pos:line="302" pos:column="90">i</name></expr>]</index></name></expr></argument><op:operator pos:line="302" pos:column="92">,</op:operator> <argument><expr><name pos:line="302" pos:column="94">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="302" pos:column="100">,</op:operator> <argument><expr><name pos:line="302" pos:column="102">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="303" pos:column="31">else <if pos:line="303" pos:column="36">if<condition pos:line="303" pos:column="38">(<expr><name pos:line="303" pos:column="39">queryIndirectIndex</name> <op:operator pos:line="303" pos:column="58">&lt;</op:operator> <name pos:line="303" pos:column="60">i</name></expr>)</condition><then pos:line="303" pos:column="62"> <block pos:line="303" pos:column="63">{
                                <expr_stmt><expr><call><name pos:line="304" pos:column="33">AddRecommendation</name><argument_list pos:line="304" pos:column="50">(<argument><expr><call><name><name pos:line="304" pos:column="51">string</name><op:operator pos:line="304" pos:column="57">.</op:operator><name pos:line="304" pos:column="58">Format</name></name><argument_list pos:line="304" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="304" pos:column="74">,</op:operator> <argument><expr><name pos:line="304" pos:column="76">query</name></expr></argument><op:operator pos:line="304" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="304" pos:column="83">indirectWords</name><index pos:line="304" pos:column="96">[<expr><name pos:line="304" pos:column="97">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="304" pos:column="100">,</op:operator> <argument><expr><name pos:line="304" pos:column="102">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if></else></if>
                        }</block></then> <else pos:line="306" pos:column="27">else <block pos:line="306" pos:column="32">{
                            <comment type="line" pos:line="307" pos:column="29">//the indirect object words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="308" pos:column="29">AddRecommendation</name><argument_list pos:line="308" pos:column="46">(<argument><expr><call><name><name pos:line="308" pos:column="47">string</name><op:operator pos:line="308" pos:column="53">.</op:operator><name pos:line="308" pos:column="54">Format</name></name><argument_list pos:line="308" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="308" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="308" pos:column="70">,</op:operator> <argument><expr><name pos:line="308" pos:column="72">query</name></expr></argument><op:operator pos:line="308" pos:column="77">,</op:operator> <argument><expr><name><name pos:line="308" pos:column="79">indirectWords</name><index pos:line="308" pos:column="92">[<expr><name pos:line="308" pos:column="93">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="308" pos:column="96">,</op:operator> <argument><expr><name pos:line="308" pos:column="98">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></for>
                    <if pos:line="311" pos:column="21">if<condition pos:line="311" pos:column="23">(<expr><name pos:line="311" pos:column="24">queryInIndirect</name> <op:operator pos:line="311" pos:column="40">&amp;&amp;</op:operator> <call><name><name pos:line="311" pos:column="43">indirectWords</name><op:operator pos:line="311" pos:column="56">.</op:operator><name pos:line="311" pos:column="57">Count</name></name><argument_list pos:line="311" pos:column="62">()</argument_list></call> <op:operator pos:line="311" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="311" pos:column="67">2</lit:literal></expr>)</condition><then pos:line="311" pos:column="69"> <block pos:line="311" pos:column="70">{
                        <expr_stmt><expr><call><name pos:line="312" pos:column="25">AddRecommendation</name><argument_list pos:line="312" pos:column="42">(<argument><expr><name><name pos:line="312" pos:column="43">swumRecord</name><op:operator pos:line="312" pos:column="53">.</op:operator><name pos:line="312" pos:column="54">IndirectObject</name></name></expr></argument><op:operator pos:line="312" pos:column="68">,</op:operator> <argument><expr><name pos:line="312" pos:column="70">QueryInFieldWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="313" pos:column="23">else <if pos:line="313" pos:column="28">if<condition pos:line="313" pos:column="30">(<expr><op:operator pos:line="313" pos:column="31">!</op:operator><name pos:line="313" pos:column="32">queryInIndirect</name> <op:operator pos:line="313" pos:column="48">&amp;&amp;</op:operator> <call><name><name pos:line="313" pos:column="51">indirectWords</name><op:operator pos:line="313" pos:column="64">.</op:operator><name pos:line="313" pos:column="65">Count</name></name><argument_list pos:line="313" pos:column="70">()</argument_list></call> <op:operator pos:line="313" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="313" pos:column="75">1</lit:literal></expr>)</condition><then pos:line="313" pos:column="77"> <block pos:line="313" pos:column="78">{
                        <expr_stmt><expr><call><name pos:line="314" pos:column="25">AddRecommendation</name><argument_list pos:line="314" pos:column="42">(<argument><expr><call><name><name pos:line="314" pos:column="43">string</name><op:operator pos:line="314" pos:column="49">.</op:operator><name pos:line="314" pos:column="50">Format</name></name><argument_list pos:line="314" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="314" pos:column="66">,</op:operator> <argument><expr><name pos:line="314" pos:column="68">query</name></expr></argument><op:operator pos:line="314" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="314" pos:column="75">swumRecord</name><op:operator pos:line="314" pos:column="85">.</op:operator><name pos:line="314" pos:column="86">IndirectObject</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="314" pos:column="101">,</op:operator> <argument><expr><name pos:line="314" pos:column="103">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>
                }</block></then></if>
            }</block></foreach>
        }</block></function>

        <comment type="line" pos:line="320" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="321" pos:column="9">/// Generates query recommendations. Nouns and verbs are weighted higher than other parts of speech.</comment>
        <comment type="line" pos:line="322" pos:column="9">/// The words in the generated recommendations are sorted in the same order as they appear in the method signature.</comment>
        <comment type="line" pos:line="323" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="324" pos:column="9">/// &lt;param name="query"&gt;The query string to create recommended completions for.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="325" pos:column="9">private</specifier> <name pos:line="325" pos:column="17">void</name></type> <name pos:line="325" pos:column="22">WeightByPartOfSpeech</name><parameter_list pos:line="325" pos:column="42">(<param><decl><type><name pos:line="325" pos:column="43">string</name></type> <name pos:line="325" pos:column="50">query</name></decl></param>)</parameter_list> <block pos:line="325" pos:column="57">{
            <decl_stmt><decl><type><name pos:line="326" pos:column="13">const</name> <name pos:line="326" pos:column="19">int</name></type> <name pos:line="326" pos:column="23">NormalWeight</name> =<init pos:line="326" pos:column="37"> <expr><lit:literal type="number" pos:line="326" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
            
            <comment type="line" pos:line="328" pos:column="13">//search through all the SWUM data</comment>
            <decl_stmt><decl><type><name><name pos:line="329" pos:column="13">Dictionary</name><argument_list pos:line="329" pos:column="23">&lt;<argument><name pos:line="329" pos:column="24">string</name></argument>, <argument><name pos:line="329" pos:column="32">SwumDataRecord</name></argument>&gt;</argument_list></name></type> <name pos:line="329" pos:column="48">swumData</name> =<init pos:line="329" pos:column="58"> <expr><call><name><name pos:line="329" pos:column="59">SwumManager</name><op:operator pos:line="329" pos:column="70">.</op:operator><name pos:line="329" pos:column="71">Instance</name><op:operator pos:line="329" pos:column="79">.</op:operator><name pos:line="329" pos:column="80">GetSwumData</name></name><argument_list pos:line="329" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>            
            <foreach pos:line="330" pos:column="13">foreach(<init><decl><type><name pos:line="330" pos:column="21">var</name></type> <name pos:line="330" pos:column="25">swumRecord</name> <init pos:line="330" pos:column="36">in <expr><name><name pos:line="330" pos:column="39">swumData</name><op:operator pos:line="330" pos:column="47">.</op:operator><name pos:line="330" pos:column="48">Values</name></name></expr></init></decl></init>) <block pos:line="330" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="331" pos:column="17">var</name></type> <name pos:line="331" pos:column="21">actionWords</name> =<init pos:line="331" pos:column="34"> <expr><op:operator pos:line="331" pos:column="35">new</op:operator> <call><name><name pos:line="331" pos:column="39">Collection</name><argument_list pos:line="331" pos:column="49">&lt;<argument><name pos:line="331" pos:column="50">WordNode</name></argument>&gt;</argument_list></name><argument_list pos:line="331" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="332" pos:column="17">var</name></type> <name pos:line="332" pos:column="21">themeWords</name> =<init pos:line="332" pos:column="33"> <expr><op:operator pos:line="332" pos:column="34">new</op:operator> <call><name><name pos:line="332" pos:column="38">Collection</name><argument_list pos:line="332" pos:column="48">&lt;<argument><name pos:line="332" pos:column="49">WordNode</name></argument>&gt;</argument_list></name><argument_list pos:line="332" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="333" pos:column="17">var</name></type> <name pos:line="333" pos:column="21">indirectWords</name> =<init pos:line="333" pos:column="36"> <expr><op:operator pos:line="333" pos:column="37">new</op:operator> <call><name><name pos:line="333" pos:column="41">Collection</name><argument_list pos:line="333" pos:column="51">&lt;<argument><name pos:line="333" pos:column="52">WordNode</name></argument>&gt;</argument_list></name><argument_list pos:line="333" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="334" pos:column="17">bool</name></type> <name pos:line="334" pos:column="22">queryInAction</name> =<init pos:line="334" pos:column="37"> <expr><lit:literal type="boolean" pos:line="334" pos:column="38">false</lit:literal></expr></init><op:operator pos:line="334" pos:column="43">,</op:operator> <name pos:line="334" pos:column="45">queryInTheme</name> =<init pos:line="334" pos:column="59"> <expr><lit:literal type="boolean" pos:line="334" pos:column="60">false</lit:literal></expr></init><op:operator pos:line="334" pos:column="65">,</op:operator> <name pos:line="334" pos:column="67">queryInIndirect</name> =<init pos:line="334" pos:column="84"> <expr><lit:literal type="boolean" pos:line="334" pos:column="85">false</lit:literal></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="335" pos:column="17">int</name></type> <name pos:line="335" pos:column="21">queryActionIndex</name> =<init pos:line="335" pos:column="39"> <expr><op:operator pos:line="335" pos:column="40">-</op:operator><lit:literal type="number" pos:line="335" pos:column="41">1</lit:literal></expr></init><op:operator pos:line="335" pos:column="42">,</op:operator> <name pos:line="335" pos:column="44">queryThemeIndex</name> =<init pos:line="335" pos:column="61"> <expr><op:operator pos:line="335" pos:column="62">-</op:operator><lit:literal type="number" pos:line="335" pos:column="63">1</lit:literal></expr></init><op:operator pos:line="335" pos:column="64">,</op:operator> <name pos:line="335" pos:column="66">queryIndirectIndex</name> =<init pos:line="335" pos:column="86"> <expr><op:operator pos:line="335" pos:column="87">-</op:operator><lit:literal type="number" pos:line="335" pos:column="88">1</lit:literal></expr></init></decl>;</decl_stmt>
                <if pos:line="336" pos:column="17">if<condition pos:line="336" pos:column="19">(<expr><name><name pos:line="336" pos:column="20">swumRecord</name><op:operator pos:line="336" pos:column="30">.</op:operator><name pos:line="336" pos:column="31">ParsedAction</name></name> <op:operator pos:line="336" pos:column="44">!=</op:operator> <name pos:line="336" pos:column="47">null</name></expr>)</condition><then pos:line="336" pos:column="52"> <block pos:line="336" pos:column="53">{
                    <expr_stmt><expr><name pos:line="337" pos:column="21">actionWords</name> <op:operator pos:line="337" pos:column="33">=</op:operator> <call><name><name pos:line="337" pos:column="35">swumRecord</name><op:operator pos:line="337" pos:column="45">.</op:operator><name pos:line="337" pos:column="46">ParsedAction</name><op:operator pos:line="337" pos:column="58">.</op:operator><name pos:line="337" pos:column="59">GetPhrase</name></name><argument_list pos:line="337" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="338" pos:column="21">queryActionIndex</name> <op:operator pos:line="338" pos:column="38">=</op:operator> <call><name pos:line="338" pos:column="40">FindWordInPhraseNode</name><argument_list pos:line="338" pos:column="60">(<argument><expr><name><name pos:line="338" pos:column="61">swumRecord</name><op:operator pos:line="338" pos:column="71">.</op:operator><name pos:line="338" pos:column="72">ParsedAction</name></name></expr></argument><op:operator pos:line="338" pos:column="84">,</op:operator> <argument><expr><name pos:line="338" pos:column="86">query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="339" pos:column="21">if<condition pos:line="339" pos:column="23">(<expr><name pos:line="339" pos:column="24">queryActionIndex</name> <op:operator pos:line="339" pos:column="41">&gt;</op:operator> <op:operator pos:line="339" pos:column="43">-</op:operator><lit:literal type="number" pos:line="339" pos:column="44">1</lit:literal></expr>)</condition><then pos:line="339" pos:column="46"> <block pos:line="339" pos:column="47">{ <expr_stmt><expr><name pos:line="339" pos:column="49">queryInAction</name> <op:operator pos:line="339" pos:column="63">=</op:operator> <lit:literal type="boolean" pos:line="339" pos:column="65">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
                }</block></then></if>
                <if pos:line="341" pos:column="17">if<condition pos:line="341" pos:column="19">(<expr><name><name pos:line="341" pos:column="20">swumRecord</name><op:operator pos:line="341" pos:column="30">.</op:operator><name pos:line="341" pos:column="31">ParsedTheme</name></name> <op:operator pos:line="341" pos:column="43">!=</op:operator> <name pos:line="341" pos:column="46">null</name></expr>)</condition><then pos:line="341" pos:column="51"> <block pos:line="341" pos:column="52">{
                    <expr_stmt><expr><name pos:line="342" pos:column="21">themeWords</name> <op:operator pos:line="342" pos:column="32">=</op:operator> <call><name><name pos:line="342" pos:column="34">swumRecord</name><op:operator pos:line="342" pos:column="44">.</op:operator><name pos:line="342" pos:column="45">ParsedTheme</name><op:operator pos:line="342" pos:column="56">.</op:operator><name pos:line="342" pos:column="57">GetPhrase</name></name><argument_list pos:line="342" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="343" pos:column="21">queryThemeIndex</name> <op:operator pos:line="343" pos:column="37">=</op:operator> <call><name pos:line="343" pos:column="39">FindWordInPhraseNode</name><argument_list pos:line="343" pos:column="59">(<argument><expr><name><name pos:line="343" pos:column="60">swumRecord</name><op:operator pos:line="343" pos:column="70">.</op:operator><name pos:line="343" pos:column="71">ParsedTheme</name></name></expr></argument><op:operator pos:line="343" pos:column="82">,</op:operator> <argument><expr><name pos:line="343" pos:column="84">query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="344" pos:column="21">if<condition pos:line="344" pos:column="23">(<expr><name pos:line="344" pos:column="24">queryThemeIndex</name> <op:operator pos:line="344" pos:column="40">&gt;</op:operator> <op:operator pos:line="344" pos:column="42">-</op:operator><lit:literal type="number" pos:line="344" pos:column="43">1</lit:literal></expr>)</condition><then pos:line="344" pos:column="45"> <block pos:line="344" pos:column="46">{ <expr_stmt><expr><name pos:line="344" pos:column="48">queryInTheme</name> <op:operator pos:line="344" pos:column="61">=</op:operator> <lit:literal type="boolean" pos:line="344" pos:column="63">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
                }</block></then></if>
                <if pos:line="346" pos:column="17">if<condition pos:line="346" pos:column="19">(<expr><name><name pos:line="346" pos:column="20">swumRecord</name><op:operator pos:line="346" pos:column="30">.</op:operator><name pos:line="346" pos:column="31">ParsedIndirectObject</name></name> <op:operator pos:line="346" pos:column="52">!=</op:operator> <name pos:line="346" pos:column="55">null</name></expr>)</condition><then pos:line="346" pos:column="60"> <block pos:line="346" pos:column="61">{
                    <expr_stmt><expr><name pos:line="347" pos:column="21">indirectWords</name> <op:operator pos:line="347" pos:column="35">=</op:operator> <call><name><name pos:line="347" pos:column="37">swumRecord</name><op:operator pos:line="347" pos:column="47">.</op:operator><name pos:line="347" pos:column="48">ParsedIndirectObject</name><op:operator pos:line="347" pos:column="68">.</op:operator><name pos:line="347" pos:column="69">GetPhrase</name></name><argument_list pos:line="347" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="348" pos:column="21">queryIndirectIndex</name> <op:operator pos:line="348" pos:column="40">=</op:operator> <call><name pos:line="348" pos:column="42">FindWordInPhraseNode</name><argument_list pos:line="348" pos:column="62">(<argument><expr><name><name pos:line="348" pos:column="63">swumRecord</name><op:operator pos:line="348" pos:column="73">.</op:operator><name pos:line="348" pos:column="74">ParsedIndirectObject</name></name></expr></argument><op:operator pos:line="348" pos:column="94">,</op:operator> <argument><expr><name pos:line="348" pos:column="96">query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="349" pos:column="21">if<condition pos:line="349" pos:column="23">(<expr><name pos:line="349" pos:column="24">queryIndirectIndex</name> <op:operator pos:line="349" pos:column="43">&gt;</op:operator> <op:operator pos:line="349" pos:column="45">-</op:operator><lit:literal type="number" pos:line="349" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="349" pos:column="48"> <block pos:line="349" pos:column="49">{ <expr_stmt><expr><name pos:line="349" pos:column="51">queryInIndirect</name> <op:operator pos:line="349" pos:column="67">=</op:operator> <lit:literal type="boolean" pos:line="349" pos:column="69">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
                }</block></then></if>

                <if pos:line="352" pos:column="17">if<condition pos:line="352" pos:column="19">(<expr><name pos:line="352" pos:column="20">queryInAction</name> <op:operator pos:line="352" pos:column="34">||</op:operator> <name pos:line="352" pos:column="37">queryInTheme</name> <op:operator pos:line="352" pos:column="50">||</op:operator> <name pos:line="352" pos:column="53">queryInIndirect</name></expr>)</condition><then pos:line="352" pos:column="69"> <block pos:line="352" pos:column="70">{
                    <comment type="line" pos:line="353" pos:column="21">//add words from action</comment>
                    <for pos:line="354" pos:column="21">for(<init><decl><type><name pos:line="354" pos:column="25">int</name></type> <name pos:line="354" pos:column="29">i</name> =<init pos:line="354" pos:column="32"> <expr><lit:literal type="number" pos:line="354" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="354" pos:column="36">i</name> <op:operator pos:line="354" pos:column="38">&lt;</op:operator> <name><name pos:line="354" pos:column="40">actionWords</name><op:operator pos:line="354" pos:column="51">.</op:operator><name pos:line="354" pos:column="52">Count</name></name></expr>;</condition> <incr><expr><name pos:line="354" pos:column="59">i</name><op:operator pos:line="354" pos:column="60">++</op:operator></expr></incr>) <block pos:line="354" pos:column="64">{
                        <decl_stmt><decl><type><name pos:line="355" pos:column="25">int</name></type> <name pos:line="355" pos:column="29">wordWeight</name> =<init pos:line="355" pos:column="41"> <expr><call><name pos:line="355" pos:column="42">GetWeightForPartOfSpeech</name><argument_list pos:line="355" pos:column="66">(<argument><expr><name><name pos:line="355" pos:column="67">actionWords</name><index pos:line="355" pos:column="78">[<expr><name pos:line="355" pos:column="79">i</name></expr>]</index></name><op:operator pos:line="355" pos:column="81">.</op:operator><name pos:line="355" pos:column="82">Tag</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <if pos:line="356" pos:column="25">if<condition pos:line="356" pos:column="27">(<expr><name pos:line="356" pos:column="28">queryInAction</name></expr>)</condition><then pos:line="356" pos:column="42"> <block pos:line="356" pos:column="43">{
                            <if pos:line="357" pos:column="29">if<condition pos:line="357" pos:column="31">(<expr><name pos:line="357" pos:column="32">i</name> <op:operator pos:line="357" pos:column="34">&lt;</op:operator> <name pos:line="357" pos:column="36">queryActionIndex</name></expr>)</condition><then pos:line="357" pos:column="53"> <block pos:line="357" pos:column="54">{
                                <expr_stmt><expr><call><name pos:line="358" pos:column="33">AddRecommendation</name><argument_list pos:line="358" pos:column="50">(<argument><expr><call><name><name pos:line="358" pos:column="51">string</name><op:operator pos:line="358" pos:column="57">.</op:operator><name pos:line="358" pos:column="58">Format</name></name><argument_list pos:line="358" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="358" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="358" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="358" pos:column="76">actionWords</name><index pos:line="358" pos:column="87">[<expr><name pos:line="358" pos:column="88">i</name></expr>]</index></name><op:operator pos:line="358" pos:column="90">.</op:operator><name pos:line="358" pos:column="91">Text</name></expr></argument><op:operator pos:line="358" pos:column="95">,</op:operator> <argument><expr><name pos:line="358" pos:column="97">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="358" pos:column="103">,</op:operator> <argument><expr><name pos:line="358" pos:column="105">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="359" pos:column="31">else <if pos:line="359" pos:column="36">if<condition pos:line="359" pos:column="38">(<expr><name pos:line="359" pos:column="39">queryActionIndex</name> <op:operator pos:line="359" pos:column="56">&lt;</op:operator> <name pos:line="359" pos:column="58">i</name></expr>)</condition><then pos:line="359" pos:column="60"> <block pos:line="359" pos:column="61">{
                                <expr_stmt><expr><call><name pos:line="360" pos:column="33">AddRecommendation</name><argument_list pos:line="360" pos:column="50">(<argument><expr><call><name><name pos:line="360" pos:column="51">string</name><op:operator pos:line="360" pos:column="57">.</op:operator><name pos:line="360" pos:column="58">Format</name></name><argument_list pos:line="360" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="360" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="360" pos:column="74">,</op:operator> <argument><expr><name pos:line="360" pos:column="76">query</name></expr></argument><op:operator pos:line="360" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="360" pos:column="83">actionWords</name><index pos:line="360" pos:column="94">[<expr><name pos:line="360" pos:column="95">i</name></expr>]</index></name><op:operator pos:line="360" pos:column="97">.</op:operator><name pos:line="360" pos:column="98">Text</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="360" pos:column="103">,</op:operator> <argument><expr><name pos:line="360" pos:column="105">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if></else></if>
                        }</block></then> <else pos:line="362" pos:column="27">else <block pos:line="362" pos:column="32">{
                            <comment type="line" pos:line="363" pos:column="29">//the action words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="364" pos:column="29">AddRecommendation</name><argument_list pos:line="364" pos:column="46">(<argument><expr><call><name><name pos:line="364" pos:column="47">string</name><op:operator pos:line="364" pos:column="53">.</op:operator><name pos:line="364" pos:column="54">Format</name></name><argument_list pos:line="364" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="364" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="364" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="364" pos:column="72">actionWords</name><index pos:line="364" pos:column="83">[<expr><name pos:line="364" pos:column="84">i</name></expr>]</index></name><op:operator pos:line="364" pos:column="86">.</op:operator><name pos:line="364" pos:column="87">Text</name></expr></argument><op:operator pos:line="364" pos:column="91">,</op:operator> <argument><expr><name pos:line="364" pos:column="93">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="364" pos:column="99">,</op:operator> <argument><expr><name pos:line="364" pos:column="101">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></for>
                    <if pos:line="367" pos:column="21">if<condition pos:line="367" pos:column="23">(<expr><name pos:line="367" pos:column="24">queryInAction</name> <op:operator pos:line="367" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="367" pos:column="41">actionWords</name><op:operator pos:line="367" pos:column="52">.</op:operator><name pos:line="367" pos:column="53">Count</name></name><argument_list pos:line="367" pos:column="58">()</argument_list></call> <op:operator pos:line="367" pos:column="61">&gt;</op:operator> <lit:literal type="number" pos:line="367" pos:column="63">2</lit:literal></expr>)</condition><then pos:line="367" pos:column="65"> <block pos:line="367" pos:column="66">{
                        <expr_stmt><expr><call><name pos:line="368" pos:column="25">AddRecommendation</name><argument_list pos:line="368" pos:column="42">(<argument><expr><name><name pos:line="368" pos:column="43">swumRecord</name><op:operator pos:line="368" pos:column="53">.</op:operator><name pos:line="368" pos:column="54">Action</name></name></expr></argument><op:operator pos:line="368" pos:column="60">,</op:operator> <argument><expr><name pos:line="368" pos:column="62">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="369" pos:column="23">else <if pos:line="369" pos:column="28">if<condition pos:line="369" pos:column="30">(<expr><op:operator pos:line="369" pos:column="31">!</op:operator><name pos:line="369" pos:column="32">queryInAction</name> <op:operator pos:line="369" pos:column="46">&amp;&amp;</op:operator> <call><name><name pos:line="369" pos:column="49">actionWords</name><op:operator pos:line="369" pos:column="60">.</op:operator><name pos:line="369" pos:column="61">Count</name></name><argument_list pos:line="369" pos:column="66">()</argument_list></call> <op:operator pos:line="369" pos:column="69">&gt;</op:operator> <lit:literal type="number" pos:line="369" pos:column="71">1</lit:literal></expr>)</condition><then pos:line="369" pos:column="73"> <block pos:line="369" pos:column="74">{
                        <expr_stmt><expr><call><name pos:line="370" pos:column="25">AddRecommendation</name><argument_list pos:line="370" pos:column="42">(<argument><expr><call><name><name pos:line="370" pos:column="43">string</name><op:operator pos:line="370" pos:column="49">.</op:operator><name pos:line="370" pos:column="50">Format</name></name><argument_list pos:line="370" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="370" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="370" pos:column="66">,</op:operator> <argument><expr><name><name pos:line="370" pos:column="68">swumRecord</name><op:operator pos:line="370" pos:column="78">.</op:operator><name pos:line="370" pos:column="79">Action</name></name></expr></argument><op:operator pos:line="370" pos:column="85">,</op:operator> <argument><expr><name pos:line="370" pos:column="87">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="370" pos:column="93">,</op:operator> <argument><expr><name pos:line="370" pos:column="95">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="373" pos:column="21">//add words from theme</comment>
                    <for pos:line="374" pos:column="21">for(<init><decl><type><name pos:line="374" pos:column="25">int</name></type> <name pos:line="374" pos:column="29">i</name> =<init pos:line="374" pos:column="32"> <expr><lit:literal type="number" pos:line="374" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="374" pos:column="36">i</name> <op:operator pos:line="374" pos:column="38">&lt;</op:operator> <name><name pos:line="374" pos:column="40">themeWords</name><op:operator pos:line="374" pos:column="50">.</op:operator><name pos:line="374" pos:column="51">Count</name></name></expr>;</condition> <incr><expr><name pos:line="374" pos:column="58">i</name><op:operator pos:line="374" pos:column="59">++</op:operator></expr></incr>) <block pos:line="374" pos:column="63">{
                        <decl_stmt><decl><type><name pos:line="375" pos:column="25">int</name></type> <name pos:line="375" pos:column="29">wordWeight</name> =<init pos:line="375" pos:column="41"> <expr><call><name pos:line="375" pos:column="42">GetWeightForPartOfSpeech</name><argument_list pos:line="375" pos:column="66">(<argument><expr><name><name pos:line="375" pos:column="67">themeWords</name><index pos:line="375" pos:column="77">[<expr><name pos:line="375" pos:column="78">i</name></expr>]</index></name><op:operator pos:line="375" pos:column="80">.</op:operator><name pos:line="375" pos:column="81">Tag</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <if pos:line="376" pos:column="25">if<condition pos:line="376" pos:column="27">(<expr><name pos:line="376" pos:column="28">queryInTheme</name></expr>)</condition><then pos:line="376" pos:column="41"> <block pos:line="376" pos:column="42">{
                            <if pos:line="377" pos:column="29">if<condition pos:line="377" pos:column="31">(<expr><name pos:line="377" pos:column="32">i</name> <op:operator pos:line="377" pos:column="34">&lt;</op:operator> <name pos:line="377" pos:column="36">queryThemeIndex</name></expr>)</condition><then pos:line="377" pos:column="52"> <block pos:line="377" pos:column="53">{
                                <expr_stmt><expr><call><name pos:line="378" pos:column="33">AddRecommendation</name><argument_list pos:line="378" pos:column="50">(<argument><expr><call><name><name pos:line="378" pos:column="51">string</name><op:operator pos:line="378" pos:column="57">.</op:operator><name pos:line="378" pos:column="58">Format</name></name><argument_list pos:line="378" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="378" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="378" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="378" pos:column="76">themeWords</name><index pos:line="378" pos:column="86">[<expr><name pos:line="378" pos:column="87">i</name></expr>]</index></name><op:operator pos:line="378" pos:column="89">.</op:operator><name pos:line="378" pos:column="90">Text</name></expr></argument><op:operator pos:line="378" pos:column="94">,</op:operator> <argument><expr><name pos:line="378" pos:column="96">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="378" pos:column="102">,</op:operator> <argument><expr><name pos:line="378" pos:column="104">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="379" pos:column="31">else <if pos:line="379" pos:column="36">if<condition pos:line="379" pos:column="38">(<expr><name pos:line="379" pos:column="39">queryThemeIndex</name> <op:operator pos:line="379" pos:column="55">&lt;</op:operator> <name pos:line="379" pos:column="57">i</name></expr>)</condition><then pos:line="379" pos:column="59"> <block pos:line="379" pos:column="60">{
                                <expr_stmt><expr><call><name pos:line="380" pos:column="33">AddRecommendation</name><argument_list pos:line="380" pos:column="50">(<argument><expr><call><name><name pos:line="380" pos:column="51">string</name><op:operator pos:line="380" pos:column="57">.</op:operator><name pos:line="380" pos:column="58">Format</name></name><argument_list pos:line="380" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="380" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="380" pos:column="74">,</op:operator> <argument><expr><name pos:line="380" pos:column="76">query</name></expr></argument><op:operator pos:line="380" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="380" pos:column="83">themeWords</name><index pos:line="380" pos:column="93">[<expr><name pos:line="380" pos:column="94">i</name></expr>]</index></name><op:operator pos:line="380" pos:column="96">.</op:operator><name pos:line="380" pos:column="97">Text</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="380" pos:column="102">,</op:operator> <argument><expr><name pos:line="380" pos:column="104">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if></else></if>
                        }</block></then> <else pos:line="382" pos:column="27">else <block pos:line="382" pos:column="32">{
                            <comment type="line" pos:line="383" pos:column="29">//the theme words do not contain the query word</comment>
                            <if pos:line="384" pos:column="29">if<condition pos:line="384" pos:column="31">(<expr><name pos:line="384" pos:column="32">queryInAction</name></expr>)</condition><then pos:line="384" pos:column="46"> <block pos:line="384" pos:column="47">{
                                <expr_stmt><expr><call><name pos:line="385" pos:column="33">AddRecommendation</name><argument_list pos:line="385" pos:column="50">(<argument><expr><call><name><name pos:line="385" pos:column="51">string</name><op:operator pos:line="385" pos:column="57">.</op:operator><name pos:line="385" pos:column="58">Format</name></name><argument_list pos:line="385" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="385" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="385" pos:column="74">,</op:operator> <argument><expr><name pos:line="385" pos:column="76">query</name></expr></argument><op:operator pos:line="385" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="385" pos:column="83">themeWords</name><index pos:line="385" pos:column="93">[<expr><name pos:line="385" pos:column="94">i</name></expr>]</index></name><op:operator pos:line="385" pos:column="96">.</op:operator><name pos:line="385" pos:column="97">Text</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="385" pos:column="102">,</op:operator> <argument><expr><name pos:line="385" pos:column="104">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                            <if pos:line="387" pos:column="29">if<condition pos:line="387" pos:column="31">(<expr><name pos:line="387" pos:column="32">queryInIndirect</name></expr>)</condition><then pos:line="387" pos:column="48"> <block pos:line="387" pos:column="49">{
                                <expr_stmt><expr><call><name pos:line="388" pos:column="33">AddRecommendation</name><argument_list pos:line="388" pos:column="50">(<argument><expr><call><name><name pos:line="388" pos:column="51">string</name><op:operator pos:line="388" pos:column="57">.</op:operator><name pos:line="388" pos:column="58">Format</name></name><argument_list pos:line="388" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="388" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="388" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="388" pos:column="76">themeWords</name><index pos:line="388" pos:column="86">[<expr><name pos:line="388" pos:column="87">i</name></expr>]</index></name><op:operator pos:line="388" pos:column="89">.</op:operator><name pos:line="388" pos:column="90">Text</name></expr></argument><op:operator pos:line="388" pos:column="94">,</op:operator> <argument><expr><name pos:line="388" pos:column="96">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="388" pos:column="102">,</op:operator> <argument><expr><name pos:line="388" pos:column="104">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                        }</block></else></if>
                    }</block></for>
                    <if pos:line="392" pos:column="21">if<condition pos:line="392" pos:column="23">(<expr><name pos:line="392" pos:column="24">queryInTheme</name> <op:operator pos:line="392" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="392" pos:column="40">themeWords</name><op:operator pos:line="392" pos:column="50">.</op:operator><name pos:line="392" pos:column="51">Count</name></name><argument_list pos:line="392" pos:column="56">()</argument_list></call> <op:operator pos:line="392" pos:column="59">&gt;</op:operator> <lit:literal type="number" pos:line="392" pos:column="61">2</lit:literal></expr>)</condition><then pos:line="392" pos:column="63"> <block pos:line="392" pos:column="64">{
                        <expr_stmt><expr><call><name pos:line="393" pos:column="25">AddRecommendation</name><argument_list pos:line="393" pos:column="42">(<argument><expr><name><name pos:line="393" pos:column="43">swumRecord</name><op:operator pos:line="393" pos:column="53">.</op:operator><name pos:line="393" pos:column="54">Theme</name></name></expr></argument><op:operator pos:line="393" pos:column="59">,</op:operator> <argument><expr><name pos:line="393" pos:column="61">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="394" pos:column="23">else <if pos:line="394" pos:column="28">if<condition pos:line="394" pos:column="30">(<expr><op:operator pos:line="394" pos:column="31">!</op:operator><name pos:line="394" pos:column="32">queryInTheme</name> <op:operator pos:line="394" pos:column="45">&amp;&amp;</op:operator> <call><name><name pos:line="394" pos:column="48">themeWords</name><op:operator pos:line="394" pos:column="58">.</op:operator><name pos:line="394" pos:column="59">Count</name></name><argument_list pos:line="394" pos:column="64">()</argument_list></call> <op:operator pos:line="394" pos:column="67">&gt;</op:operator> <lit:literal type="number" pos:line="394" pos:column="69">1</lit:literal></expr>)</condition><then pos:line="394" pos:column="71"> <block pos:line="394" pos:column="72">{
                        <if pos:line="395" pos:column="25">if<condition pos:line="395" pos:column="27">(<expr><name pos:line="395" pos:column="28">queryInAction</name></expr>)</condition><then pos:line="395" pos:column="42"> <block pos:line="395" pos:column="43">{
                            <expr_stmt><expr><call><name pos:line="396" pos:column="29">AddRecommendation</name><argument_list pos:line="396" pos:column="46">(<argument><expr><call><name><name pos:line="396" pos:column="47">string</name><op:operator pos:line="396" pos:column="53">.</op:operator><name pos:line="396" pos:column="54">Format</name></name><argument_list pos:line="396" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="396" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="396" pos:column="70">,</op:operator> <argument><expr><name pos:line="396" pos:column="72">query</name></expr></argument><op:operator pos:line="396" pos:column="77">,</op:operator> <argument><expr><name><name pos:line="396" pos:column="79">swumRecord</name><op:operator pos:line="396" pos:column="89">.</op:operator><name pos:line="396" pos:column="90">Theme</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="396" pos:column="96">,</op:operator> <argument><expr><name pos:line="396" pos:column="98">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                        <if pos:line="398" pos:column="25">if<condition pos:line="398" pos:column="27">(<expr><name pos:line="398" pos:column="28">queryInIndirect</name></expr>)</condition><then pos:line="398" pos:column="44"> <block pos:line="398" pos:column="45">{
                            <expr_stmt><expr><call><name pos:line="399" pos:column="29">AddRecommendation</name><argument_list pos:line="399" pos:column="46">(<argument><expr><call><name><name pos:line="399" pos:column="47">string</name><op:operator pos:line="399" pos:column="53">.</op:operator><name pos:line="399" pos:column="54">Format</name></name><argument_list pos:line="399" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="399" pos:column="70">,</op:operator> <argument><expr><name><name pos:line="399" pos:column="72">swumRecord</name><op:operator pos:line="399" pos:column="82">.</op:operator><name pos:line="399" pos:column="83">Theme</name></name></expr></argument><op:operator pos:line="399" pos:column="88">,</op:operator> <argument><expr><name pos:line="399" pos:column="90">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="399" pos:column="96">,</op:operator> <argument><expr><name pos:line="399" pos:column="98">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></then></if></else></if>

                    <comment type="line" pos:line="403" pos:column="21">//add words from indirect object</comment>
                    <for pos:line="404" pos:column="21">for(<init><decl><type><name pos:line="404" pos:column="25">int</name></type> <name pos:line="404" pos:column="29">i</name> =<init pos:line="404" pos:column="32"> <expr><lit:literal type="number" pos:line="404" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="404" pos:column="36">i</name> <op:operator pos:line="404" pos:column="38">&lt;</op:operator> <name><name pos:line="404" pos:column="40">indirectWords</name><op:operator pos:line="404" pos:column="53">.</op:operator><name pos:line="404" pos:column="54">Count</name></name></expr>;</condition> <incr><expr><name pos:line="404" pos:column="61">i</name><op:operator pos:line="404" pos:column="62">++</op:operator></expr></incr>) <block pos:line="404" pos:column="66">{
                        <decl_stmt><decl><type><name pos:line="405" pos:column="25">int</name></type> <name pos:line="405" pos:column="29">wordWeight</name> =<init pos:line="405" pos:column="41"> <expr><call><name pos:line="405" pos:column="42">GetWeightForPartOfSpeech</name><argument_list pos:line="405" pos:column="66">(<argument><expr><name><name pos:line="405" pos:column="67">indirectWords</name><index pos:line="405" pos:column="80">[<expr><name pos:line="405" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="405" pos:column="83">.</op:operator><name pos:line="405" pos:column="84">Tag</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <if pos:line="406" pos:column="25">if<condition pos:line="406" pos:column="27">(<expr><name pos:line="406" pos:column="28">queryInIndirect</name></expr>)</condition><then pos:line="406" pos:column="44"> <block pos:line="406" pos:column="45">{
                            <if pos:line="407" pos:column="29">if<condition pos:line="407" pos:column="31">(<expr><name pos:line="407" pos:column="32">i</name> <op:operator pos:line="407" pos:column="34">&lt;</op:operator> <name pos:line="407" pos:column="36">queryIndirectIndex</name></expr>)</condition><then pos:line="407" pos:column="55"> <block pos:line="407" pos:column="56">{
                                <expr_stmt><expr><call><name pos:line="408" pos:column="33">AddRecommendation</name><argument_list pos:line="408" pos:column="50">(<argument><expr><call><name><name pos:line="408" pos:column="51">string</name><op:operator pos:line="408" pos:column="57">.</op:operator><name pos:line="408" pos:column="58">Format</name></name><argument_list pos:line="408" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="408" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="408" pos:column="74">,</op:operator> <argument><expr><name><name pos:line="408" pos:column="76">indirectWords</name><index pos:line="408" pos:column="89">[<expr><name pos:line="408" pos:column="90">i</name></expr>]</index></name><op:operator pos:line="408" pos:column="92">.</op:operator><name pos:line="408" pos:column="93">Text</name></expr></argument><op:operator pos:line="408" pos:column="97">,</op:operator> <argument><expr><name pos:line="408" pos:column="99">query</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="408" pos:column="105">,</op:operator> <argument><expr><name pos:line="408" pos:column="107">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="409" pos:column="31">else <if pos:line="409" pos:column="36">if<condition pos:line="409" pos:column="38">(<expr><name pos:line="409" pos:column="39">queryIndirectIndex</name> <op:operator pos:line="409" pos:column="58">&lt;</op:operator> <name pos:line="409" pos:column="60">i</name></expr>)</condition><then pos:line="409" pos:column="62"> <block pos:line="409" pos:column="63">{
                                <expr_stmt><expr><call><name pos:line="410" pos:column="33">AddRecommendation</name><argument_list pos:line="410" pos:column="50">(<argument><expr><call><name><name pos:line="410" pos:column="51">string</name><op:operator pos:line="410" pos:column="57">.</op:operator><name pos:line="410" pos:column="58">Format</name></name><argument_list pos:line="410" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="410" pos:column="65">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="410" pos:column="74">,</op:operator> <argument><expr><name pos:line="410" pos:column="76">query</name></expr></argument><op:operator pos:line="410" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="410" pos:column="83">indirectWords</name><index pos:line="410" pos:column="96">[<expr><name pos:line="410" pos:column="97">i</name></expr>]</index></name><op:operator pos:line="410" pos:column="99">.</op:operator><name pos:line="410" pos:column="100">Text</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="410" pos:column="105">,</op:operator> <argument><expr><name pos:line="410" pos:column="107">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if></else></if>
                        }</block></then> <else pos:line="412" pos:column="27">else <block pos:line="412" pos:column="32">{
                            <comment type="line" pos:line="413" pos:column="29">//the indirect object words do not contain the query word</comment>
                            <expr_stmt><expr><call><name pos:line="414" pos:column="29">AddRecommendation</name><argument_list pos:line="414" pos:column="46">(<argument><expr><call><name><name pos:line="414" pos:column="47">string</name><op:operator pos:line="414" pos:column="53">.</op:operator><name pos:line="414" pos:column="54">Format</name></name><argument_list pos:line="414" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="414" pos:column="61">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="414" pos:column="70">,</op:operator> <argument><expr><name pos:line="414" pos:column="72">query</name></expr></argument><op:operator pos:line="414" pos:column="77">,</op:operator> <argument><expr><name><name pos:line="414" pos:column="79">indirectWords</name><index pos:line="414" pos:column="92">[<expr><name pos:line="414" pos:column="93">i</name></expr>]</index></name><op:operator pos:line="414" pos:column="95">.</op:operator><name pos:line="414" pos:column="96">Text</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="414" pos:column="101">,</op:operator> <argument><expr><name pos:line="414" pos:column="103">wordWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></for>
                    <if pos:line="417" pos:column="21">if<condition pos:line="417" pos:column="23">(<expr><name pos:line="417" pos:column="24">queryInIndirect</name> <op:operator pos:line="417" pos:column="40">&amp;&amp;</op:operator> <call><name><name pos:line="417" pos:column="43">indirectWords</name><op:operator pos:line="417" pos:column="56">.</op:operator><name pos:line="417" pos:column="57">Count</name></name><argument_list pos:line="417" pos:column="62">()</argument_list></call> <op:operator pos:line="417" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="417" pos:column="67">2</lit:literal></expr>)</condition><then pos:line="417" pos:column="69"> <block pos:line="417" pos:column="70">{
                        <expr_stmt><expr><call><name pos:line="418" pos:column="25">AddRecommendation</name><argument_list pos:line="418" pos:column="42">(<argument><expr><name><name pos:line="418" pos:column="43">swumRecord</name><op:operator pos:line="418" pos:column="53">.</op:operator><name pos:line="418" pos:column="54">IndirectObject</name></name></expr></argument><op:operator pos:line="418" pos:column="68">,</op:operator> <argument><expr><name pos:line="418" pos:column="70">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="419" pos:column="23">else <if pos:line="419" pos:column="28">if<condition pos:line="419" pos:column="30">(<expr><op:operator pos:line="419" pos:column="31">!</op:operator><name pos:line="419" pos:column="32">queryInIndirect</name> <op:operator pos:line="419" pos:column="48">&amp;&amp;</op:operator> <call><name><name pos:line="419" pos:column="51">indirectWords</name><op:operator pos:line="419" pos:column="64">.</op:operator><name pos:line="419" pos:column="65">Count</name></name><argument_list pos:line="419" pos:column="70">()</argument_list></call> <op:operator pos:line="419" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="419" pos:column="75">1</lit:literal></expr>)</condition><then pos:line="419" pos:column="77"> <block pos:line="419" pos:column="78">{
                        <expr_stmt><expr><call><name pos:line="420" pos:column="25">AddRecommendation</name><argument_list pos:line="420" pos:column="42">(<argument><expr><call><name><name pos:line="420" pos:column="43">string</name><op:operator pos:line="420" pos:column="49">.</op:operator><name pos:line="420" pos:column="50">Format</name></name><argument_list pos:line="420" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="420" pos:column="57">"{0} {1}"</lit:literal></expr></argument><op:operator pos:line="420" pos:column="66">,</op:operator> <argument><expr><name pos:line="420" pos:column="68">query</name></expr></argument><op:operator pos:line="420" pos:column="73">,</op:operator> <argument><expr><name><name pos:line="420" pos:column="75">swumRecord</name><op:operator pos:line="420" pos:column="85">.</op:operator><name pos:line="420" pos:column="86">IndirectObject</name></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="420" pos:column="101">,</op:operator> <argument><expr><name pos:line="420" pos:column="103">NormalWeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>
                }</block></then></if>
            }</block></foreach>
        }</block></function>

        <comment type="line" pos:line="426" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="427" pos:column="9">/// Returns the index of &lt;paramref name="word"/&gt; within &lt;paramref name="phraseNode"/&gt;, or -1 if it's not found.</comment>
        <comment type="line" pos:line="428" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="429" pos:column="9">private</specifier> <name pos:line="429" pos:column="17">int</name></type> <name pos:line="429" pos:column="21">FindWordInPhraseNode</name><parameter_list pos:line="429" pos:column="41">(<param><decl><type><name pos:line="429" pos:column="42">PhraseNode</name></type> <name pos:line="429" pos:column="53">phraseNode</name></decl></param><op:operator pos:line="429" pos:column="63">,</op:operator> <param><decl><type><name pos:line="429" pos:column="65">string</name></type> <name pos:line="429" pos:column="72">word</name></decl></param>)</parameter_list> <block pos:line="429" pos:column="78">{
            <if pos:line="430" pos:column="13">if<condition pos:line="430" pos:column="15">(<expr><name pos:line="430" pos:column="16">phraseNode</name> <op:operator pos:line="430" pos:column="27">==</op:operator> <name pos:line="430" pos:column="30">null</name></expr>)</condition><then pos:line="430" pos:column="35"> <block pos:line="430" pos:column="36">{ <throw pos:line="430" pos:column="38">throw <expr><op:operator pos:line="430" pos:column="44">new</op:operator> <call><name pos:line="430" pos:column="48">ArgumentNullException</name><argument_list pos:line="430" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="430" pos:column="70">"phraseNode"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw> }</block></then></if>
            <if pos:line="431" pos:column="13">if<condition pos:line="431" pos:column="15">(<expr><name pos:line="431" pos:column="16">word</name> <op:operator pos:line="431" pos:column="21">==</op:operator> <name pos:line="431" pos:column="24">null</name></expr>)</condition><then pos:line="431" pos:column="29"> <block pos:line="431" pos:column="30">{ <throw pos:line="431" pos:column="32">throw <expr><op:operator pos:line="431" pos:column="38">new</op:operator> <call><name pos:line="431" pos:column="42">ArgumentNullException</name><argument_list pos:line="431" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="431" pos:column="64">"word"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw> }</block></then></if>
            
            <decl_stmt><decl><type><name pos:line="433" pos:column="13">int</name></type> <name pos:line="433" pos:column="17">index</name> =<init pos:line="433" pos:column="24"> <expr><op:operator pos:line="433" pos:column="25">-</op:operator><lit:literal type="number" pos:line="433" pos:column="26">1</lit:literal></expr></init></decl>;</decl_stmt>
            <for pos:line="434" pos:column="13">for(<init><decl><type><name pos:line="434" pos:column="17">int</name></type> <name pos:line="434" pos:column="21">i</name> =<init pos:line="434" pos:column="24"> <expr><lit:literal type="number" pos:line="434" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="434" pos:column="28">i</name> <op:operator pos:line="434" pos:column="30">&lt;</op:operator> <call><name><name pos:line="434" pos:column="32">phraseNode</name><op:operator pos:line="434" pos:column="42">.</op:operator><name pos:line="434" pos:column="43">Size</name></name><argument_list pos:line="434" pos:column="47">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="434" pos:column="51">i</name><op:operator pos:line="434" pos:column="52">++</op:operator></expr></incr>) <block pos:line="434" pos:column="56">{
                <if pos:line="435" pos:column="17">if<condition pos:line="435" pos:column="19">(<expr><call><name><name pos:line="435" pos:column="20">string</name><op:operator pos:line="435" pos:column="26">.</op:operator><name pos:line="435" pos:column="27">Compare</name></name><argument_list pos:line="435" pos:column="34">(<argument><expr><name><name pos:line="435" pos:column="35">phraseNode</name><index pos:line="435" pos:column="45">[<expr><name pos:line="435" pos:column="46">i</name></expr>]</index></name><op:operator pos:line="435" pos:column="48">.</op:operator><name pos:line="435" pos:column="49">Text</name></expr></argument><op:operator pos:line="435" pos:column="53">,</op:operator> <argument><expr><name pos:line="435" pos:column="55">word</name></expr></argument><op:operator pos:line="435" pos:column="59">,</op:operator> <argument><expr><name><name pos:line="435" pos:column="61">StringComparison</name><op:operator pos:line="435" pos:column="77">.</op:operator><name pos:line="435" pos:column="78">InvariantCultureIgnoreCase</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="435" pos:column="106">==</op:operator> <lit:literal type="number" pos:line="435" pos:column="109">0</lit:literal></expr>)</condition><then pos:line="435" pos:column="111"> <block pos:line="435" pos:column="112">{
                    <expr_stmt><expr><name pos:line="436" pos:column="21">index</name> <op:operator pos:line="436" pos:column="27">=</op:operator> <name pos:line="436" pos:column="29">i</name></expr>;</expr_stmt>
                    <break pos:line="437" pos:column="21">break;</break>
                }</block></then></if>
            }</block></for>
            <return pos:line="440" pos:column="13">return <expr><name pos:line="440" pos:column="20">index</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="443" pos:column="9">private</specifier> <name pos:line="443" pos:column="17">int</name></type> <name pos:line="443" pos:column="21">GetWeightForPartOfSpeech</name><parameter_list pos:line="443" pos:column="45">(<param><decl><type><name pos:line="443" pos:column="46">PartOfSpeechTag</name></type> <name pos:line="443" pos:column="62">pos</name></decl></param>)</parameter_list> <block pos:line="443" pos:column="67">{
            <decl_stmt><decl><type><name pos:line="444" pos:column="13">const</name> <name pos:line="444" pos:column="19">int</name></type> <name pos:line="444" pos:column="23">NormalWeight</name> =<init pos:line="444" pos:column="37"> <expr><lit:literal type="number" pos:line="444" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="445" pos:column="13">const</name> <name pos:line="445" pos:column="19">int</name></type> <name pos:line="445" pos:column="23">PrimaryPosWeight</name> =<init pos:line="445" pos:column="41"> <expr><lit:literal type="number" pos:line="445" pos:column="42">5</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="446" pos:column="13">const</name> <name pos:line="446" pos:column="19">int</name></type> <name pos:line="446" pos:column="23">PreambleWeight</name> =<init pos:line="446" pos:column="39"> <expr><lit:literal type="number" pos:line="446" pos:column="40">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="447" pos:column="13">var</name></type> <name pos:line="447" pos:column="17">primaryPos</name> =<init pos:line="447" pos:column="29"> <expr><op:operator pos:line="447" pos:column="30">new</op:operator><index pos:line="447" pos:column="33">[]</index> <block pos:line="447" pos:column="36">{ <expr><name><name pos:line="447" pos:column="38">PartOfSpeechTag</name><op:operator pos:line="447" pos:column="53">.</op:operator><name pos:line="447" pos:column="54">Noun</name></name></expr><op:operator pos:line="447" pos:column="58">,</op:operator> <expr><name><name pos:line="447" pos:column="60">PartOfSpeechTag</name><op:operator pos:line="447" pos:column="75">.</op:operator><name pos:line="447" pos:column="76">NounPlural</name></name></expr><op:operator pos:line="447" pos:column="86">,</op:operator> <expr><name><name pos:line="447" pos:column="88">PartOfSpeechTag</name><op:operator pos:line="447" pos:column="103">.</op:operator><name pos:line="447" pos:column="104">PastParticiple</name></name></expr><op:operator pos:line="447" pos:column="118">,</op:operator> <expr><name><name pos:line="447" pos:column="120">PartOfSpeechTag</name><op:operator pos:line="447" pos:column="135">.</op:operator><name pos:line="447" pos:column="136">Verb</name></name></expr><op:operator pos:line="447" pos:column="140">,</op:operator> <expr><name><name pos:line="447" pos:column="142">PartOfSpeechTag</name><op:operator pos:line="447" pos:column="157">.</op:operator><name pos:line="447" pos:column="158">Verb3PS</name></name></expr><op:operator pos:line="447" pos:column="165">,</op:operator> <expr><name><name pos:line="447" pos:column="167">PartOfSpeechTag</name><op:operator pos:line="447" pos:column="182">.</op:operator><name pos:line="447" pos:column="183">VerbIng</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="449" pos:column="13">int</name></type> <name pos:line="449" pos:column="17">result</name> =<init pos:line="449" pos:column="25"> <expr><name pos:line="449" pos:column="26">NormalWeight</name></expr></init></decl>;</decl_stmt>
            <if pos:line="450" pos:column="13">if<condition pos:line="450" pos:column="15">(<expr><call><name><name pos:line="450" pos:column="16">primaryPos</name><op:operator pos:line="450" pos:column="26">.</op:operator><name pos:line="450" pos:column="27">Contains</name></name><argument_list pos:line="450" pos:column="35">(<argument><expr><name pos:line="450" pos:column="36">pos</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="450" pos:column="41"> <block pos:line="450" pos:column="42">{
                <expr_stmt><expr><name pos:line="451" pos:column="17">result</name> <op:operator pos:line="451" pos:column="24">=</op:operator> <name pos:line="451" pos:column="26">PrimaryPosWeight</name></expr>;</expr_stmt>
            }</block></then> <else pos:line="452" pos:column="15">else <if pos:line="452" pos:column="20">if<condition pos:line="452" pos:column="22">(<expr><name pos:line="452" pos:column="23">pos</name> <op:operator pos:line="452" pos:column="27">==</op:operator> <name><name pos:line="452" pos:column="30">PartOfSpeechTag</name><op:operator pos:line="452" pos:column="45">.</op:operator><name pos:line="452" pos:column="46">Preamble</name></name></expr>)</condition><then pos:line="452" pos:column="55"> <block pos:line="452" pos:column="56">{
                <expr_stmt><expr><name pos:line="453" pos:column="17">result</name> <op:operator pos:line="453" pos:column="24">=</op:operator> <name pos:line="453" pos:column="26">PreambleWeight</name></expr>;</expr_stmt>
            }</block></then></if></else></if>
            <return pos:line="455" pos:column="13">return <expr><name pos:line="455" pos:column="20">result</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
