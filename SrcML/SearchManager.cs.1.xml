<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\View\SearchManager.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">IO</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Configuration</name><op:operator pos:line="5" pos:column="20">.</op:operator><name pos:line="5" pos:column="21">OptionsPages</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Core</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Core</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">Extensions</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">Indexer</name><op:operator pos:line="9" pos:column="20">.</op:operator><name pos:line="9" pos:column="21">Searching</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">SearchEngine</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Indexer</name><op:operator pos:line="11" pos:column="20">.</op:operator><name pos:line="11" pos:column="21">Searching</name><op:operator pos:line="11" pos:column="30">.</op:operator><name pos:line="11" pos:column="31">Criteria</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">Core</name><op:operator pos:line="12" pos:column="17">.</op:operator><name pos:line="12" pos:column="18">Tools</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">Core</name><op:operator pos:line="13" pos:column="17">.</op:operator><name pos:line="13" pos:column="18">Extensions</name><op:operator pos:line="13" pos:column="28">.</op:operator><name pos:line="13" pos:column="29">Logging</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">UI</name><op:operator pos:line="14" pos:column="15">.</op:operator><name pos:line="14" pos:column="16">Monitoring</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">ABB</name><op:operator pos:line="15" pos:column="10">.</op:operator><name pos:line="15" pos:column="11">SrcML</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">VisualStudio</name><op:operator pos:line="15" pos:column="29">.</op:operator><name pos:line="15" pos:column="30">SolutionMonitor</name></name>;</using>

<namespace pos:line="17" pos:column="1">namespace <name><name pos:line="17" pos:column="11">Sando</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">UI</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">View</name></name>
<block pos:line="18" pos:column="1">{
    <class><specifier pos:line="19" pos:column="5">public</specifier> class <name pos:line="19" pos:column="18">SearchManager</name>
    <block pos:line="20" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">private</specifier> <specifier pos:line="21" pos:column="17">readonly</specifier> <name pos:line="21" pos:column="26">ISearchResultListener</name></type> <name pos:line="21" pos:column="48">_searchResultListener</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">SearchManager</name><parameter_list pos:line="23" pos:column="29">(<param><decl><type><name pos:line="23" pos:column="30">ISearchResultListener</name></type> <name pos:line="23" pos:column="52">searchResultListener</name></decl></param>)</parameter_list>
        <block pos:line="24" pos:column="9">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">_searchResultListener</name> <op:operator pos:line="25" pos:column="35">=</op:operator> <name pos:line="25" pos:column="37">searchResultListener</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">void</name></type> <name pos:line="28" pos:column="21">Search</name><parameter_list pos:line="28" pos:column="27">(<param><decl><type><name pos:line="28" pos:column="28">String</name></type> <name pos:line="28" pos:column="35">searchString</name></decl></param><op:operator pos:line="28" pos:column="47">,</op:operator> <param><decl><type><name pos:line="28" pos:column="49">SimpleSearchCriteria</name></type> <name pos:line="28" pos:column="70">searchCriteria</name> =<init pos:line="28" pos:column="86"> <expr><name pos:line="28" pos:column="87">null</name></expr></init></decl></param><op:operator pos:line="28" pos:column="91">,</op:operator> <param><decl><type><name pos:line="28" pos:column="93">bool</name></type> <name pos:line="28" pos:column="98">interactive</name> =<init pos:line="28" pos:column="111"> <expr><lit:literal type="boolean" pos:line="28" pos:column="112">true</lit:literal></expr></init></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <try pos:line="30" pos:column="13">try
            <block pos:line="31" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="32" pos:column="17">var</name></type> <name pos:line="32" pos:column="21">codeSearcher</name> =<init pos:line="32" pos:column="35"> <expr><op:operator pos:line="32" pos:column="36">new</op:operator> <call><name pos:line="32" pos:column="40">CodeSearcher</name><argument_list pos:line="32" pos:column="52">(<argument><expr><op:operator pos:line="32" pos:column="53">new</op:operator> <call><name pos:line="32" pos:column="57">IndexerSearcher</name><argument_list pos:line="32" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name><name pos:line="33" pos:column="21">String</name><op:operator pos:line="33" pos:column="27">.</op:operator><name pos:line="33" pos:column="28">IsNullOrEmpty</name></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">searchString</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="33" pos:column="56">
                    <return pos:line="34" pos:column="21">return;</return></then></if>
                
                <decl_stmt><decl><type><name pos:line="36" pos:column="17">var</name></type> <name pos:line="36" pos:column="21">solutionKey</name> =<init pos:line="36" pos:column="34"> <expr><call><name><name pos:line="36" pos:column="35">ServiceLocator</name><op:operator pos:line="36" pos:column="49">.</op:operator><name><name pos:line="36" pos:column="50">ResolveOptional</name><argument_list pos:line="36" pos:column="65">&lt;<argument><name pos:line="36" pos:column="66">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="36" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="36" pos:column="82">//no opened solution</comment>
                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">solutionKey</name> <op:operator pos:line="37" pos:column="33">==</op:operator> <name pos:line="37" pos:column="36">null</name></expr>)</condition><then pos:line="37" pos:column="41">
                <block pos:line="38" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="39" pos:column="21">_searchResultListener</name><op:operator pos:line="39" pos:column="42">.</op:operator><name pos:line="39" pos:column="43">UpdateMessage</name></name><argument_list pos:line="39" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="57">"Sando searches only the currently open Solution.  Please open a Solution and try again."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="40" pos:column="21">return;</return>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="43" pos:column="17">searchString</name> <op:operator pos:line="43" pos:column="30">=</op:operator> <call><name><name pos:line="43" pos:column="32">ExtensionPointsRepository</name><op:operator pos:line="43" pos:column="57">.</op:operator><name pos:line="43" pos:column="58">Instance</name><op:operator pos:line="43" pos:column="66">.</op:operator><name pos:line="43" pos:column="67">GetQueryRewriterImplementation</name></name><argument_list pos:line="43" pos:column="97">()</argument_list></call><op:operator pos:line="43" pos:column="99">.</op:operator><call><name pos:line="43" pos:column="100">RewriteQuery</name><argument_list pos:line="43" pos:column="112">(<argument><expr><name pos:line="43" pos:column="113">searchString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="44" pos:column="17">var</name></type> <name pos:line="44" pos:column="21">searchStringContainedInvalidCharacters</name> =<init pos:line="44" pos:column="61"> <expr><call><name><name pos:line="44" pos:column="62">WordSplitter</name><op:operator pos:line="44" pos:column="74">.</op:operator><name pos:line="44" pos:column="75">InvalidCharactersFound</name></name><argument_list pos:line="44" pos:column="97">(<argument><expr><name pos:line="44" pos:column="98">searchString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">searchStringContainedInvalidCharacters</name></expr>)</condition><then pos:line="45" pos:column="60">
                <block pos:line="46" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="47" pos:column="21">_searchResultListener</name><op:operator pos:line="47" pos:column="42">.</op:operator><name pos:line="47" pos:column="43">UpdateMessage</name></name><argument_list pos:line="47" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="57">"Invalid Query String - only complete words or partial words followed by a '*' are accepted as input."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="48" pos:column="21">return;</return>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="51" pos:column="17">var</name></type> <name pos:line="51" pos:column="21">criteria</name> =<init pos:line="51" pos:column="31"> <expr><call><name pos:line="51" pos:column="32">GetCriteria</name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">searchString</name></expr></argument><op:operator pos:line="51" pos:column="56">,</op:operator> <argument><expr><name pos:line="51" pos:column="58">searchCriteria</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="52" pos:column="17">var</name></type> <name pos:line="52" pos:column="21">results</name> =<init pos:line="52" pos:column="30"> <expr><call><name><name pos:line="52" pos:column="31">codeSearcher</name><op:operator pos:line="52" pos:column="43">.</op:operator><name pos:line="52" pos:column="44">Search</name></name><argument_list pos:line="52" pos:column="50">(<argument><expr><name pos:line="52" pos:column="51">criteria</name></expr></argument><op:operator pos:line="52" pos:column="59">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="52" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="66">.</op:operator><call><name pos:line="52" pos:column="67">AsQueryable</name><argument_list pos:line="52" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">var</name></type> <name pos:line="53" pos:column="21">resultsReorderer</name> =<init pos:line="53" pos:column="39"> <expr><call><name><name pos:line="53" pos:column="40">ExtensionPointsRepository</name><op:operator pos:line="53" pos:column="65">.</op:operator><name pos:line="53" pos:column="66">Instance</name><op:operator pos:line="53" pos:column="74">.</op:operator><name pos:line="53" pos:column="75">GetResultsReordererImplementation</name></name><argument_list pos:line="53" pos:column="108">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="54" pos:column="17">results</name> <op:operator pos:line="54" pos:column="25">=</op:operator> <call><name><name pos:line="54" pos:column="27">resultsReorderer</name><op:operator pos:line="54" pos:column="43">.</op:operator><name pos:line="54" pos:column="44">ReorderSearchResults</name></name><argument_list pos:line="54" pos:column="64">(<argument><expr><name pos:line="54" pos:column="65">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="56" pos:column="17">var</name></type> <name pos:line="56" pos:column="21">returnString</name> =<init pos:line="56" pos:column="35"> <expr><op:operator pos:line="56" pos:column="36">new</op:operator> <call><name pos:line="56" pos:column="40">StringBuilder</name><argument_list pos:line="56" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><op:operator pos:line="57" pos:column="21">!</op:operator><call><name><name pos:line="57" pos:column="22">results</name><op:operator pos:line="57" pos:column="29">.</op:operator><name pos:line="57" pos:column="30">Any</name></name><argument_list pos:line="57" pos:column="33">()</argument_list></call></expr>)</condition><then pos:line="57" pos:column="36">
                <block pos:line="58" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="59" pos:column="21">returnString</name><op:operator pos:line="59" pos:column="33">.</op:operator><name pos:line="59" pos:column="34">Append</name></name><argument_list pos:line="59" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="41">"No results found. "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="61" pos:column="17">else
                <block pos:line="62" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="63" pos:column="21">returnString</name><op:operator pos:line="63" pos:column="33">.</op:operator><name pos:line="63" pos:column="34">Append</name></name><argument_list pos:line="63" pos:column="40">(<argument><expr><call><name><name pos:line="63" pos:column="41">results</name><op:operator pos:line="63" pos:column="48">.</op:operator><name pos:line="63" pos:column="49">Count</name></name><argument_list pos:line="63" pos:column="54">()</argument_list></call> <op:operator pos:line="63" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="63" pos:column="59">" results returned. "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name><name pos:line="65" pos:column="21">ServiceLocator</name><op:operator pos:line="65" pos:column="35">.</op:operator><name><name pos:line="65" pos:column="36">Resolve</name><argument_list pos:line="65" pos:column="43">&lt;<argument><name pos:line="65" pos:column="44">InitialIndexingWatcher</name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="67">()</argument_list></call><op:operator pos:line="65" pos:column="69">.</op:operator><call><name pos:line="65" pos:column="70">IsInitialIndexingInProgress</name><argument_list pos:line="65" pos:column="97">()</argument_list></call></expr>)</condition><then pos:line="65" pos:column="100">
                <block pos:line="66" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="67" pos:column="21">returnString</name><op:operator pos:line="67" pos:column="33">.</op:operator><name pos:line="67" pos:column="34">Append</name></name><argument_list pos:line="67" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="41">"Sando is still performing its initial index of this project, results may be incomplete."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="69" pos:column="17">_searchResultListener</name><op:operator pos:line="69" pos:column="38">.</op:operator><name pos:line="69" pos:column="39">Update</name></name><argument_list pos:line="69" pos:column="45">(<argument><expr><name pos:line="69" pos:column="46">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="70" pos:column="17">_searchResultListener</name><op:operator pos:line="70" pos:column="38">.</op:operator><name pos:line="70" pos:column="39">UpdateMessage</name></name><argument_list pos:line="70" pos:column="52">(<argument><expr><call><name><name pos:line="70" pos:column="53">returnString</name><op:operator pos:line="70" pos:column="65">.</op:operator><name pos:line="70" pos:column="66">ToString</name></name><argument_list pos:line="70" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="72" pos:column="13">catch (<param><decl><type><name pos:line="72" pos:column="20">Exception</name></type> <name pos:line="72" pos:column="30">e</name></decl></param>)
            <block pos:line="73" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="74" pos:column="17">_searchResultListener</name><op:operator pos:line="74" pos:column="38">.</op:operator><name pos:line="74" pos:column="39">UpdateMessage</name></name><argument_list pos:line="74" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="53">"Sando is experiencing difficulties. See log file for details."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="75" pos:column="17">FileLogger</name><op:operator pos:line="75" pos:column="27">.</op:operator><name pos:line="75" pos:column="28">DefaultLogger</name><op:operator pos:line="75" pos:column="41">.</op:operator><name pos:line="75" pos:column="42">Error</name></name><argument_list pos:line="75" pos:column="47">(<argument><expr><name><name pos:line="75" pos:column="48">e</name><op:operator pos:line="75" pos:column="49">.</op:operator><name pos:line="75" pos:column="50">Message</name></name></expr></argument><op:operator pos:line="75" pos:column="57">,</op:operator> <argument><expr><name pos:line="75" pos:column="59">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="79" pos:column="9">private</specifier> <specifier pos:line="79" pos:column="17">static</specifier> <name pos:line="79" pos:column="24">SearchCriteria</name></type> <name pos:line="79" pos:column="39">GetCriteria</name><parameter_list pos:line="79" pos:column="50">(<param><decl><type><name pos:line="79" pos:column="51">string</name></type> <name pos:line="79" pos:column="58">searchString</name></decl></param><op:operator pos:line="79" pos:column="70">,</op:operator> <param><decl><type><name pos:line="79" pos:column="72">SimpleSearchCriteria</name></type> <name pos:line="79" pos:column="93">searchCriteria</name> =<init pos:line="79" pos:column="109"> <expr><name pos:line="79" pos:column="110">null</name></expr></init></decl></param>)</parameter_list>
        <block pos:line="80" pos:column="9">{            
            <decl_stmt><decl><type><name pos:line="81" pos:column="13">var</name></type> <name pos:line="81" pos:column="17">sandoOptions</name> =<init pos:line="81" pos:column="31"> <expr><call><name><name pos:line="81" pos:column="32">ServiceLocator</name><op:operator pos:line="81" pos:column="46">.</op:operator><name><name pos:line="81" pos:column="47">Resolve</name><argument_list pos:line="81" pos:column="54">&lt;<argument><name pos:line="81" pos:column="55">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="81" pos:column="77">()</argument_list></call><op:operator pos:line="81" pos:column="79">.</op:operator><call><name pos:line="81" pos:column="80">GetSandoOptions</name><argument_list pos:line="81" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>                       
            <return pos:line="82" pos:column="13">return <expr><call><name><name pos:line="82" pos:column="20">CriteriaBuilder</name><op:operator pos:line="82" pos:column="35">.</op:operator><name pos:line="82" pos:column="36">GetBuilder</name></name><argument_list pos:line="82" pos:column="46">()</argument_list></call><op:operator pos:line="82" pos:column="48">.</op:operator>
                <call><name pos:line="83" pos:column="17">AddCriteria</name><argument_list pos:line="83" pos:column="28">(<argument><expr><name pos:line="83" pos:column="29">searchCriteria</name></expr></argument>)</argument_list></call><op:operator pos:line="83" pos:column="44">.</op:operator>
                <call><name pos:line="84" pos:column="17">AddSearchString</name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">searchString</name></expr></argument>)</argument_list></call><op:operator pos:line="84" pos:column="46">.</op:operator>
                <call><name pos:line="85" pos:column="17">NumResults</name><argument_list pos:line="85" pos:column="27">(<argument><expr><name><name pos:line="85" pos:column="28">sandoOptions</name><op:operator pos:line="85" pos:column="40">.</op:operator><name pos:line="85" pos:column="41">NumberOfSearchResultsReturned</name></name></expr></argument>)</argument_list></call><op:operator pos:line="85" pos:column="71">.</op:operator>
                <call><name pos:line="86" pos:column="17">Ext</name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">searchString</name></expr></argument>)</argument_list></call><op:operator pos:line="86" pos:column="34">.</op:operator><call><name pos:line="86" pos:column="35">GetCriteria</name><argument_list pos:line="86" pos:column="46">()</argument_list></call></expr>;</return>                        
        }</block></function>
    }</block></class>

}</block></namespace>
</unit>
