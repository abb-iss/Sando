<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer.UnitTests\TestFiles\Searching\Results\SearchTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Analysis</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Lucene</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Net</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">Analysis</name><op:operator pos:line="6" pos:column="26">.</op:operator><name pos:line="6" pos:column="27">Snowball</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">NUnit</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Framework</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Core</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">ExtensionContracts</name><op:operator pos:line="10" pos:column="31">.</op:operator><name pos:line="10" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">ExtensionContracts</name><op:operator pos:line="11" pos:column="31">.</op:operator><name pos:line="11" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">Indexer</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">Documents</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">Indexer</name><op:operator pos:line="13" pos:column="20">.</op:operator><name pos:line="13" pos:column="21">Searching</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">Indexer</name><op:operator pos:line="14" pos:column="20">.</op:operator><name pos:line="14" pos:column="21">Searching</name><op:operator pos:line="14" pos:column="30">.</op:operator><name pos:line="14" pos:column="31">Criteria</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Sando</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">Parser</name></name>;</using>
<using pos:line="16" pos:column="1">using <name pos:line="16" pos:column="7">UnitTestHelpers</name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">ABB</name><op:operator pos:line="17" pos:column="10">.</op:operator><name pos:line="17" pos:column="11">SrcML</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">VisualStudio</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">SolutionMonitor</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">Sando</name><op:operator pos:line="18" pos:column="12">.</op:operator><name pos:line="18" pos:column="13">Core</name><op:operator pos:line="18" pos:column="17">.</op:operator><name pos:line="18" pos:column="18">Tools</name></name>;</using>

<namespace pos:line="20" pos:column="1">namespace <name><name pos:line="20" pos:column="11">Sando</name><op:operator pos:line="20" pos:column="16">.</op:operator><name pos:line="20" pos:column="17">Indexer</name><op:operator pos:line="20" pos:column="24">.</op:operator><name pos:line="20" pos:column="25">UnitTests</name><op:operator pos:line="20" pos:column="34">.</op:operator><name pos:line="20" pos:column="35">TestFiles</name><op:operator pos:line="20" pos:column="44">.</op:operator><name pos:line="20" pos:column="45">Searching</name><op:operator pos:line="20" pos:column="54">.</op:operator><name pos:line="20" pos:column="55">Results</name></name>
<block pos:line="21" pos:column="1">{
    <class><specifier pos:line="22" pos:column="5">public</specifier> class <name pos:line="22" pos:column="18">SearchTester</name>
    <block pos:line="23" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">private</specifier> <specifier pos:line="24" pos:column="17">readonly</specifier> <name pos:line="24" pos:column="26">SrcMLCSharpParser</name></type> <name pos:line="24" pos:column="44">_parser</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <specifier pos:line="25" pos:column="17">readonly</specifier> <name pos:line="25" pos:column="26">string</name></type> <name pos:line="25" pos:column="33">_luceneTempIndexesDirectory</name></decl>;</decl_stmt>        
        
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <name pos:line="27" pos:column="17">DocumentIndexer</name></type> <name pos:line="27" pos:column="33">_indexer</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="29" pos:column="9">public</specifier> <specifier pos:line="29" pos:column="16">static</specifier> <name pos:line="29" pos:column="23">SearchTester</name></type> <name pos:line="29" pos:column="36">Create</name><parameter_list pos:line="29" pos:column="42">()</parameter_list>
        <block pos:line="30" pos:column="9">{
            <return pos:line="31" pos:column="13">return <expr><op:operator pos:line="31" pos:column="20">new</op:operator> <call><name pos:line="31" pos:column="24">SearchTester</name><argument_list pos:line="31" pos:column="36">()</argument_list></call></expr>;</return>
        }</block></function>

        <constructor><specifier pos:line="34" pos:column="9">private</specifier> <name pos:line="34" pos:column="17">SearchTester</name><parameter_list pos:line="34" pos:column="29">()</parameter_list>
        <block pos:line="35" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">TestUtils</name><op:operator pos:line="36" pos:column="22">.</op:operator><name pos:line="36" pos:column="23">InitializeDefaultExtensionPoints</name></name><argument_list pos:line="36" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="37" pos:column="13">//set up generator</comment>
            <expr_stmt><expr><name pos:line="38" pos:column="13">_parser</name> <op:operator pos:line="38" pos:column="21">=</op:operator> <op:operator pos:line="38" pos:column="23">new</op:operator> <call><name pos:line="38" pos:column="27">SrcMLCSharpParser</name><argument_list pos:line="38" pos:column="44">(<argument><expr><op:operator pos:line="38" pos:column="45">new</op:operator> <call><name><name pos:line="38" pos:column="49">ABB</name><op:operator pos:line="38" pos:column="52">.</op:operator><name pos:line="38" pos:column="53">SrcML</name><op:operator pos:line="38" pos:column="58">.</op:operator><name pos:line="38" pos:column="59">SrcMLGenerator</name></name><argument_list pos:line="38" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="74">@"LIBS\SrcML"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">_luceneTempIndexesDirectory</name> <op:operator pos:line="39" pos:column="41">=</op:operator> <call><name><name pos:line="39" pos:column="43">PathManager</name><op:operator pos:line="39" pos:column="54">.</op:operator><name pos:line="39" pos:column="55">Instance</name><op:operator pos:line="39" pos:column="63">.</op:operator><name pos:line="39" pos:column="64">GetIndexPath</name></name><argument_list pos:line="39" pos:column="76">(<argument><expr><call><name><name pos:line="39" pos:column="77">ServiceLocator</name><op:operator pos:line="39" pos:column="91">.</op:operator><name><name pos:line="39" pos:column="92">Resolve</name><argument_list pos:line="39" pos:column="99">&lt;<argument><name pos:line="39" pos:column="100">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="39" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Directory</name><op:operator pos:line="40" pos:column="22">.</op:operator><name pos:line="40" pos:column="23">CreateDirectory</name></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">_luceneTempIndexesDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">TestUtils</name><op:operator pos:line="41" pos:column="22">.</op:operator><name pos:line="41" pos:column="23">ClearDirectory</name></name><argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">_luceneTempIndexesDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">void</name></type> <name pos:line="44" pos:column="21">CheckFolderForExpectedResults</name><parameter_list pos:line="44" pos:column="50">(<param><decl><type><name pos:line="44" pos:column="51">string</name></type> <name pos:line="44" pos:column="58">searchString</name></decl></param><op:operator pos:line="44" pos:column="70">,</op:operator> <param><decl><type><name pos:line="44" pos:column="72">string</name></type> <name pos:line="44" pos:column="79">methodNameToFind</name></decl></param><op:operator pos:line="44" pos:column="95">,</op:operator> <param><decl><type><name pos:line="44" pos:column="97">string</name></type> <name pos:line="44" pos:column="104">solutionPath</name></decl></param>)</parameter_list>
        <block pos:line="45" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">ServiceLocator</name><op:operator pos:line="46" pos:column="27">.</op:operator><name><name pos:line="46" pos:column="28">RegisterInstance</name><argument_list pos:line="46" pos:column="44">&lt;<argument><name pos:line="46" pos:column="45">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="46" pos:column="54">(<argument><expr><op:operator pos:line="46" pos:column="55">new</op:operator> <call><name pos:line="46" pos:column="59">SnowballAnalyzer</name><argument_list pos:line="46" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="76">"English"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">_indexer</name> <op:operator pos:line="47" pos:column="22">=</op:operator> <op:operator pos:line="47" pos:column="24">new</op:operator> <call><name pos:line="47" pos:column="28">DocumentIndexer</name><argument_list pos:line="47" pos:column="43">(<argument><expr><call><name><name pos:line="47" pos:column="44">TimeSpan</name><op:operator pos:line="47" pos:column="52">.</op:operator><name pos:line="47" pos:column="53">FromSeconds</name></name><argument_list pos:line="47" pos:column="64">(<argument><expr><lit:literal type="number" pos:line="47" pos:column="65">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">ServiceLocator</name><op:operator pos:line="48" pos:column="27">.</op:operator><name pos:line="48" pos:column="28">RegisterInstance</name></name><argument_list pos:line="48" pos:column="44">(<argument><expr><name pos:line="48" pos:column="45">_indexer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <try pos:line="50" pos:column="13">try
            <block pos:line="51" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">IndexFilesInDirectory</name><argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">solutionPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">var</name></type> <name pos:line="53" pos:column="21">results</name> =<init pos:line="53" pos:column="30"> <expr><call><name pos:line="53" pos:column="31">GetResults</name><argument_list pos:line="53" pos:column="41">(<argument><expr><name pos:line="53" pos:column="42">searchString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="54" pos:column="17">Assert</name><op:operator pos:line="54" pos:column="23">.</op:operator><name pos:line="54" pos:column="24">IsTrue</name></name><argument_list pos:line="54" pos:column="30">(<argument><expr><call><name pos:line="54" pos:column="31">HasResults</name><argument_list pos:line="54" pos:column="41">(<argument><expr><name pos:line="54" pos:column="42">methodNameToFind</name></expr></argument><op:operator pos:line="54" pos:column="58">,</op:operator> <argument><expr><name pos:line="54" pos:column="60">results</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="54" pos:column="68">,</op:operator> <argument><expr><lit:literal type="string" pos:line="54" pos:column="70">"Can't find expected results"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="56" pos:column="13">catch (<param><decl><type><name pos:line="56" pos:column="20">Exception</name></type> <name pos:line="56" pos:column="30">ex</name></decl></param>)
            <block pos:line="57" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="58" pos:column="17">Assert</name><op:operator pos:line="58" pos:column="23">.</op:operator><name pos:line="58" pos:column="24">Fail</name></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name><name pos:line="58" pos:column="29">ex</name><op:operator pos:line="58" pos:column="31">.</op:operator><name pos:line="58" pos:column="32">Message</name></name> <op:operator pos:line="58" pos:column="40">+</op:operator> <lit:literal type="string" pos:line="58" pos:column="42">". "</lit:literal> <op:operator pos:line="58" pos:column="47">+</op:operator> <name><name pos:line="58" pos:column="49">ex</name><op:operator pos:line="58" pos:column="51">.</op:operator><name pos:line="58" pos:column="52">StackTrace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch>
            <finally pos:line="60" pos:column="13">finally
            <block pos:line="61" pos:column="13">{
                <if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">_indexer</name> <op:operator pos:line="62" pos:column="30">!=</op:operator> <name pos:line="62" pos:column="33">null</name></expr>)</condition><then pos:line="62" pos:column="38">
                    <expr_stmt><expr><call><name><name pos:line="63" pos:column="21">_indexer</name><op:operator pos:line="63" pos:column="29">.</op:operator><name pos:line="63" pos:column="30">Dispose</name></name><argument_list pos:line="63" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="63" pos:column="38">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></finally></try>
        }</block></function>

        <function><type><specifier pos:line="67" pos:column="9">private</specifier> <name pos:line="67" pos:column="17">void</name></type> <name pos:line="67" pos:column="22">IndexFilesInDirectory</name><parameter_list pos:line="67" pos:column="43">(<param><decl><type><name pos:line="67" pos:column="44">string</name></type> <name pos:line="67" pos:column="51">solutionPath</name></decl></param>)</parameter_list>
        <block pos:line="68" pos:column="9">{

            <decl_stmt><decl><type><name pos:line="70" pos:column="13">var</name></type> <name pos:line="70" pos:column="17">files</name> =<init pos:line="70" pos:column="24"> <expr><call><name><name pos:line="70" pos:column="25">Directory</name><op:operator pos:line="70" pos:column="34">.</op:operator><name pos:line="70" pos:column="35">GetFiles</name></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">solutionPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="71" pos:column="13">foreach (<init><decl><type><name pos:line="71" pos:column="22">var</name></type> <name pos:line="71" pos:column="26">file</name> <init pos:line="71" pos:column="31">in <expr><name pos:line="71" pos:column="34">files</name></expr></init></decl></init>)
            <block pos:line="72" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="73" pos:column="17">string</name></type> <name pos:line="73" pos:column="24">fullPath</name> =<init pos:line="73" pos:column="34"> <expr><call><name><name pos:line="73" pos:column="35">Path</name><op:operator pos:line="73" pos:column="39">.</op:operator><name pos:line="73" pos:column="40">GetFullPath</name></name><argument_list pos:line="73" pos:column="51">(<argument><expr><name pos:line="73" pos:column="52">file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="74" pos:column="17">var</name></type> <name pos:line="74" pos:column="21">srcMl</name> =<init pos:line="74" pos:column="28"> <expr><call><name><name pos:line="74" pos:column="29">_parser</name><op:operator pos:line="74" pos:column="36">.</op:operator><name pos:line="74" pos:column="37">Parse</name></name><argument_list pos:line="74" pos:column="42">(<argument><expr><name pos:line="74" pos:column="43">fullPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <foreach pos:line="75" pos:column="17">foreach (<init><decl><type><name pos:line="75" pos:column="26">var</name></type> <name pos:line="75" pos:column="30">programElement</name> <init pos:line="75" pos:column="45">in <expr><name pos:line="75" pos:column="48">srcMl</name></expr></init></decl></init>)
                <block pos:line="76" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="77" pos:column="21">_indexer</name><op:operator pos:line="77" pos:column="29">.</op:operator><name pos:line="77" pos:column="30">AddDocument</name></name><argument_list pos:line="77" pos:column="41">(<argument><expr><call><name><name pos:line="77" pos:column="42">DocumentFactory</name><op:operator pos:line="77" pos:column="57">.</op:operator><name pos:line="77" pos:column="58">Create</name></name><argument_list pos:line="77" pos:column="64">(<argument><expr><name pos:line="77" pos:column="65">programElement</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="82" pos:column="9">private</specifier> <name><name pos:line="82" pos:column="17">IEnumerable</name><argument_list pos:line="82" pos:column="28">&lt;<argument><name pos:line="82" pos:column="29">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="82" pos:column="47">GetResults</name><parameter_list pos:line="82" pos:column="57">(<param><decl><type><name pos:line="82" pos:column="58">string</name></type> <name pos:line="82" pos:column="65">searchString</name></decl></param>)</parameter_list>
        <block pos:line="83" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="84" pos:column="13">var</name></type> <name pos:line="84" pos:column="17">searcher</name> =<init pos:line="84" pos:column="27"> <expr><op:operator pos:line="84" pos:column="28">new</op:operator> <call><name pos:line="84" pos:column="32">IndexerSearcher</name><argument_list pos:line="84" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">var</name></type> <name pos:line="85" pos:column="17">criteria</name> =<init pos:line="85" pos:column="27"> <expr><op:operator pos:line="85" pos:column="28">new</op:operator> <name pos:line="85" pos:column="32">SimpleSearchCriteria</name>
                <block pos:line="86" pos:column="17">{
                    <expr><name pos:line="87" pos:column="21">SearchTerms</name> <op:operator pos:line="87" pos:column="33">=</op:operator> <op:operator pos:line="87" pos:column="35">new</op:operator> <call><name><name pos:line="87" pos:column="39">SortedSet</name><argument_list pos:line="87" pos:column="48">&lt;<argument><name pos:line="87" pos:column="49">string</name></argument>&gt;</argument_list></name><argument_list pos:line="87" pos:column="56">(<argument><expr><call><name><name pos:line="87" pos:column="57">searchString</name><op:operator pos:line="87" pos:column="69">.</op:operator><name pos:line="87" pos:column="70">Split</name></name><argument_list pos:line="87" pos:column="75">(<argument><expr><lit:literal type="char" pos:line="87" pos:column="76">' '</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="87" pos:column="80">.</op:operator><call><name pos:line="87" pos:column="81">ToList</name><argument_list pos:line="87" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>
                }</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="89" pos:column="13">var</name></type> <name pos:line="89" pos:column="17">results</name> =<init pos:line="89" pos:column="26"> <expr><call><name><name pos:line="89" pos:column="27">searcher</name><op:operator pos:line="89" pos:column="35">.</op:operator><name pos:line="89" pos:column="36">Search</name></name><argument_list pos:line="89" pos:column="42">(<argument><expr><name pos:line="89" pos:column="43">criteria</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="90" pos:column="13">return <expr><name pos:line="90" pos:column="20">results</name></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="94" pos:column="9">private</specifier> <name pos:line="94" pos:column="17">bool</name></type> <name pos:line="94" pos:column="22">HasResults</name><parameter_list pos:line="94" pos:column="32">(<param><decl><type><name pos:line="94" pos:column="33">string</name></type> <name pos:line="94" pos:column="40">methodNameToFind</name></decl></param><op:operator pos:line="94" pos:column="56">,</op:operator> <param><decl><type><name><name pos:line="94" pos:column="58">IEnumerable</name><argument_list pos:line="94" pos:column="69">&lt;<argument><name pos:line="94" pos:column="70">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="94" pos:column="88">results</name></decl></param>)</parameter_list>
        <block pos:line="95" pos:column="9">{
            <return pos:line="96" pos:column="13">return <expr><call><name><name pos:line="96" pos:column="20">results</name><op:operator pos:line="96" pos:column="27">.</op:operator><name pos:line="96" pos:column="28">Select</name></name><argument_list pos:line="96" pos:column="34">(<argument><expr><name pos:line="96" pos:column="35">result</name> <op:operator pos:line="96" pos:column="42">=&gt;</op:operator> <name><name pos:line="96" pos:column="45">result</name><op:operator pos:line="96" pos:column="51">.</op:operator><name pos:line="96" pos:column="52">ProgramElement</name></name></expr></argument>)</argument_list></call><op:operator pos:line="96" pos:column="67">.</op:operator><call><name><name pos:line="96" pos:column="68">OfType</name><argument_list pos:line="96" pos:column="74">&lt;<argument><name pos:line="96" pos:column="75">MethodElement</name></argument>&gt;</argument_list></name><argument_list pos:line="96" pos:column="89">()</argument_list></call><op:operator pos:line="96" pos:column="91">.</op:operator><call><name pos:line="96" pos:column="92">Any</name><argument_list pos:line="96" pos:column="95">(<argument><expr><name pos:line="96" pos:column="96">method</name> <op:operator pos:line="96" pos:column="103">=&gt;</op:operator> <call><name><name pos:line="96" pos:column="106">method</name><op:operator pos:line="96" pos:column="112">.</op:operator><name pos:line="96" pos:column="113">Name</name><op:operator pos:line="96" pos:column="117">.</op:operator><name pos:line="96" pos:column="118">Equals</name></name><argument_list pos:line="96" pos:column="124">(<argument><expr><name pos:line="96" pos:column="125">methodNameToFind</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
