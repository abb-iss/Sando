<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\View\SearchViewControl.xaml.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Collections</name><op:operator pos:line="4" pos:column="25">.</op:operator><name pos:line="4" pos:column="26">Specialized</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Linq</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Threading</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Windows</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Windows</name><op:operator pos:line="10" pos:column="21">.</op:operator><name pos:line="10" pos:column="22">Controls</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">System</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">Windows</name><op:operator pos:line="11" pos:column="21">.</op:operator><name pos:line="11" pos:column="22">Input</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">Core</name><op:operator pos:line="12" pos:column="17">.</op:operator><name pos:line="12" pos:column="18">Extensions</name><op:operator pos:line="12" pos:column="28">.</op:operator><name pos:line="12" pos:column="29">Logging</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">ExtensionContracts</name><op:operator pos:line="13" pos:column="31">.</op:operator><name pos:line="13" pos:column="32">ProgramElementContracts</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">ExtensionContracts</name><op:operator pos:line="14" pos:column="31">.</op:operator><name pos:line="14" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Sando</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">Indexer</name><op:operator pos:line="15" pos:column="20">.</op:operator><name pos:line="15" pos:column="21">Searching</name><op:operator pos:line="15" pos:column="30">.</op:operator><name pos:line="15" pos:column="31">Criteria</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Sando</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">Translation</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Sando</name><op:operator pos:line="17" pos:column="12">.</op:operator><name pos:line="17" pos:column="13">Recommender</name></name>;</using>
<using pos:line="18" pos:column="1">using <name pos:line="18" pos:column="7">FocusTestVC</name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">Sando</name><op:operator pos:line="19" pos:column="12">.</op:operator><name pos:line="19" pos:column="13">UI</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">View</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Search</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">Sando</name><op:operator pos:line="20" pos:column="12">.</op:operator><name pos:line="20" pos:column="13">UI</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">Actions</name></name>;</using>

<namespace pos:line="22" pos:column="1">namespace <name><name pos:line="22" pos:column="11">Sando</name><op:operator pos:line="22" pos:column="16">.</op:operator><name pos:line="22" pos:column="17">UI</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">View</name></name>
<block pos:line="23" pos:column="1">{
    <class><specifier pos:line="24" pos:column="5">public</specifier> <specifier pos:line="24" pos:column="12">partial</specifier> class <name pos:line="24" pos:column="26">SearchViewControl</name> <super pos:line="24" pos:column="44">: <name pos:line="24" pos:column="46">ISearchResultListener</name></super>
    <block pos:line="25" pos:column="5">{
        <constructor><specifier pos:line="26" pos:column="9">public</specifier> <name pos:line="26" pos:column="16">SearchViewControl</name><parameter_list pos:line="26" pos:column="33">()</parameter_list>
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">DataContext</name> <op:operator pos:line="28" pos:column="25">=</op:operator> <name pos:line="28" pos:column="27">this</name></expr>;</expr_stmt> <comment type="line" pos:line="28" pos:column="33">//so we can show results</comment>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">InitializeComponent</name><argument_list pos:line="29" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="31" pos:column="13">_searchManager</name> <op:operator pos:line="31" pos:column="28">=</op:operator> <op:operator pos:line="31" pos:column="30">new</op:operator> <call><name pos:line="31" pos:column="34">SearchManager</name><argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">SearchResults</name> <op:operator pos:line="32" pos:column="27">=</op:operator> <op:operator pos:line="32" pos:column="29">new</op:operator> <call><name><name pos:line="32" pos:column="33">ObservableCollection</name><argument_list pos:line="32" pos:column="53">&lt;<argument><name pos:line="32" pos:column="54">CodeSearchResult</name></argument>&gt;</argument_list></name><argument_list pos:line="32" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">SearchCriteria</name> <op:operator pos:line="33" pos:column="28">=</op:operator> <op:operator pos:line="33" pos:column="30">new</op:operator> <call><name pos:line="33" pos:column="34">SimpleSearchCriteria</name><argument_list pos:line="33" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">InitAccessLevels</name><argument_list pos:line="34" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">InitProgramElements</name><argument_list pos:line="35" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><op:operator pos:line="36" pos:column="13">(</op:operator><op:operator pos:line="36" pos:column="14">(</op:operator><name pos:line="36" pos:column="15">INotifyCollectionChanged</name><op:operator pos:line="36" pos:column="39">)</op:operator><name><name pos:line="36" pos:column="40">searchResultListbox</name><op:operator pos:line="36" pos:column="59">.</op:operator><name pos:line="36" pos:column="60">Items</name></name><op:operator pos:line="36" pos:column="65">)</op:operator><op:operator pos:line="36" pos:column="66">.</op:operator><name pos:line="36" pos:column="67">CollectionChanged</name> <op:operator pos:line="36" pos:column="85">+=</op:operator> <name pos:line="36" pos:column="88">SelectFirstResult</name></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="38" pos:column="13">SearchStatus</name> <op:operator pos:line="38" pos:column="26">=</op:operator> <lit:literal type="string" pos:line="38" pos:column="28">"Enter search terms - only complete words or partial words followed by a '*' are accepted as input."</lit:literal></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="40" pos:column="13">_recommender</name> <op:operator pos:line="40" pos:column="26">=</op:operator> <op:operator pos:line="40" pos:column="28">new</op:operator> <call><name pos:line="40" pos:column="32">QueryRecommender</name><argument_list pos:line="40" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="43" pos:column="9">public</specifier> <name><name pos:line="43" pos:column="16">ObservableCollection</name><argument_list pos:line="43" pos:column="36">&lt;<argument><name pos:line="43" pos:column="37">AccessWrapper</name></argument>&gt;</argument_list></name></type> <name pos:line="43" pos:column="52">AccessLevels</name>
        <block pos:line="44" pos:column="9">{
            <function><name pos:line="45" pos:column="13">get</name> <block pos:line="45" pos:column="17">{ <return pos:line="45" pos:column="19">return <expr><op:operator pos:line="45" pos:column="26">(</op:operator><name><name pos:line="45" pos:column="27">ObservableCollection</name><argument_list pos:line="45" pos:column="47">&lt;<argument><name pos:line="45" pos:column="48">AccessWrapper</name></argument>&gt;</argument_list></name><op:operator pos:line="45" pos:column="62">)</op:operator> <call><name pos:line="45" pos:column="64">GetValue</name><argument_list pos:line="45" pos:column="72">(<argument><expr><name pos:line="45" pos:column="73">AccessLevelsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="46" pos:column="13">set</name> <block pos:line="46" pos:column="17">{ <expr_stmt><expr><call><name pos:line="46" pos:column="19">SetValue</name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">AccessLevelsProperty</name></expr></argument><op:operator pos:line="46" pos:column="48">,</op:operator> <argument><expr><name pos:line="46" pos:column="50">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">public</specifier> <name><name pos:line="50" pos:column="16">ObservableCollection</name><argument_list pos:line="50" pos:column="36">&lt;<argument><name pos:line="50" pos:column="37">ProgramElementWrapper</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="60">ProgramElements</name>
        <block pos:line="51" pos:column="9">{
            <function><name pos:line="52" pos:column="13">get</name> <block pos:line="52" pos:column="17">{ <return pos:line="52" pos:column="19">return <expr><op:operator pos:line="52" pos:column="26">(</op:operator><name><name pos:line="52" pos:column="27">ObservableCollection</name><argument_list pos:line="52" pos:column="47">&lt;<argument><name pos:line="52" pos:column="48">ProgramElementWrapper</name></argument>&gt;</argument_list></name><op:operator pos:line="52" pos:column="70">)</op:operator> <call><name pos:line="52" pos:column="72">GetValue</name><argument_list pos:line="52" pos:column="80">(<argument><expr><name pos:line="52" pos:column="81">ProgramElementsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="53" pos:column="13">set</name> <block pos:line="53" pos:column="17">{ <expr_stmt><expr><call><name pos:line="53" pos:column="19">SetValue</name><argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">ProgramElementsProperty</name></expr></argument><op:operator pos:line="53" pos:column="51">,</op:operator> <argument><expr><name pos:line="53" pos:column="53">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="56" pos:column="9">public</specifier> <name><name pos:line="56" pos:column="16">ObservableCollection</name><argument_list pos:line="56" pos:column="36">&lt;<argument><name pos:line="56" pos:column="37">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="56" pos:column="55">SearchResults</name>
        <block pos:line="57" pos:column="9">{
            <function><name pos:line="58" pos:column="13">get</name> <block pos:line="58" pos:column="17">{ <return pos:line="58" pos:column="19">return <expr><op:operator pos:line="58" pos:column="26">(</op:operator><name><name pos:line="58" pos:column="27">ObservableCollection</name><argument_list pos:line="58" pos:column="47">&lt;<argument><name pos:line="58" pos:column="48">CodeSearchResult</name></argument>&gt;</argument_list></name><op:operator pos:line="58" pos:column="65">)</op:operator> <call><name pos:line="58" pos:column="67">GetValue</name><argument_list pos:line="58" pos:column="75">(<argument><expr><name pos:line="58" pos:column="76">SearchResultsProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="59" pos:column="13">set</name> <block pos:line="59" pos:column="17">{ <expr_stmt><expr><call><name pos:line="59" pos:column="19">SetValue</name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">SearchResultsProperty</name></expr></argument><op:operator pos:line="59" pos:column="49">,</op:operator> <argument><expr><name pos:line="59" pos:column="51">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="62" pos:column="9">public</specifier> <name pos:line="62" pos:column="16">string</name></type> <name pos:line="62" pos:column="23">SearchStatus</name>
        <block pos:line="63" pos:column="9">{
            <function><name pos:line="64" pos:column="13">get</name> <block pos:line="64" pos:column="17">{ <return pos:line="64" pos:column="19">return <expr><op:operator pos:line="64" pos:column="26">(</op:operator><name pos:line="64" pos:column="27">string</name><op:operator pos:line="64" pos:column="33">)</op:operator> <call><name pos:line="64" pos:column="35">GetValue</name><argument_list pos:line="64" pos:column="43">(<argument><expr><name pos:line="64" pos:column="44">SearchStatusProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            private <function><name pos:line="65" pos:column="21">set</name> <block pos:line="65" pos:column="25">{ <expr_stmt><expr><call><name pos:line="65" pos:column="27">SetValue</name><argument_list pos:line="65" pos:column="35">(<argument><expr><name pos:line="65" pos:column="36">SearchStatusProperty</name></expr></argument><op:operator pos:line="65" pos:column="56">,</op:operator> <argument><expr><name pos:line="65" pos:column="58">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="68" pos:column="9">public</specifier> <name pos:line="68" pos:column="16">SimpleSearchCriteria</name></type> <name pos:line="68" pos:column="37">SearchCriteria</name>
        <block pos:line="69" pos:column="9">{
            <function><name pos:line="70" pos:column="13">get</name> <block pos:line="70" pos:column="17">{ <return pos:line="70" pos:column="19">return <expr><op:operator pos:line="70" pos:column="26">(</op:operator><name pos:line="70" pos:column="27">SimpleSearchCriteria</name><op:operator pos:line="70" pos:column="47">)</op:operator> <call><name pos:line="70" pos:column="49">GetValue</name><argument_list pos:line="70" pos:column="57">(<argument><expr><name pos:line="70" pos:column="58">SearchCriteriaProperty</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
            <function><name pos:line="71" pos:column="13">set</name> <block pos:line="71" pos:column="17">{ <expr_stmt><expr><call><name pos:line="71" pos:column="19">SetValue</name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">SearchCriteriaProperty</name></expr></argument><op:operator pos:line="71" pos:column="50">,</op:operator> <argument><expr><name pos:line="71" pos:column="52">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="74" pos:column="9">public</specifier> <name pos:line="74" pos:column="16">string</name></type> <name pos:line="74" pos:column="23">SearchLabel</name>
        <block pos:line="75" pos:column="9">{
            <function><name pos:line="76" pos:column="13">get</name> <block pos:line="76" pos:column="17">{ <return pos:line="76" pos:column="19">return <expr><call><name><name pos:line="76" pos:column="26">Translator</name><op:operator pos:line="76" pos:column="36">.</op:operator><name pos:line="76" pos:column="37">GetTranslation</name></name><argument_list pos:line="76" pos:column="51">(<argument><expr><name><name pos:line="76" pos:column="52">TranslationCode</name><op:operator pos:line="76" pos:column="67">.</op:operator><name pos:line="76" pos:column="68">SearchLabel</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="79" pos:column="9">public</specifier> <name pos:line="79" pos:column="16">string</name></type> <name pos:line="79" pos:column="23">ExpandCollapseResultsLabel</name>
        <block pos:line="80" pos:column="9">{
            <function><name pos:line="81" pos:column="13">get</name> <block pos:line="81" pos:column="17">{ <return pos:line="81" pos:column="19">return <expr><call><name><name pos:line="81" pos:column="26">Translator</name><op:operator pos:line="81" pos:column="36">.</op:operator><name pos:line="81" pos:column="37">GetTranslation</name></name><argument_list pos:line="81" pos:column="51">(<argument><expr><name><name pos:line="81" pos:column="52">TranslationCode</name><op:operator pos:line="81" pos:column="67">.</op:operator><name pos:line="81" pos:column="68">ExpandResultsLabel</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="84" pos:column="9">public</specifier> <name pos:line="84" pos:column="16">string</name></type> <name pos:line="84" pos:column="23">ComboBoxItemCurrentDocument</name>
        <block pos:line="85" pos:column="9">{
            <function><name pos:line="86" pos:column="13">get</name> <block pos:line="86" pos:column="17">{ <return pos:line="86" pos:column="19">return <expr><call><name><name pos:line="86" pos:column="26">Translator</name><op:operator pos:line="86" pos:column="36">.</op:operator><name pos:line="86" pos:column="37">GetTranslation</name></name><argument_list pos:line="86" pos:column="51">(<argument><expr><name><name pos:line="86" pos:column="52">TranslationCode</name><op:operator pos:line="86" pos:column="67">.</op:operator><name pos:line="86" pos:column="68">ComboBoxItemCurrentDocument</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="89" pos:column="9">public</specifier> <name pos:line="89" pos:column="16">string</name></type> <name pos:line="89" pos:column="23">ComboBoxItemEntireSolution</name>
        <block pos:line="90" pos:column="9">{
            <function><name pos:line="91" pos:column="13">get</name> <block pos:line="91" pos:column="17">{ <return pos:line="91" pos:column="19">return <expr><call><name><name pos:line="91" pos:column="26">Translator</name><op:operator pos:line="91" pos:column="36">.</op:operator><name pos:line="91" pos:column="37">GetTranslation</name></name><argument_list pos:line="91" pos:column="51">(<argument><expr><name><name pos:line="91" pos:column="52">TranslationCode</name><op:operator pos:line="91" pos:column="67">.</op:operator><name pos:line="91" pos:column="68">ComboBoxItemEntireSolution</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="94" pos:column="9">private</specifier> <name pos:line="94" pos:column="17">void</name></type> <name pos:line="94" pos:column="22">searchBox_Loaded</name><parameter_list pos:line="94" pos:column="38">(<param><decl><type><name pos:line="94" pos:column="39">object</name></type> <name pos:line="94" pos:column="46">sender</name></decl></param><op:operator pos:line="94" pos:column="52">,</op:operator> <param><decl><type><name pos:line="94" pos:column="54">RoutedEventArgs</name></type> <name pos:line="94" pos:column="70">e</name></decl></param>)</parameter_list>
        <block pos:line="95" pos:column="9">{
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">searchBox</name> <op:operator pos:line="96" pos:column="27">!=</op:operator> <name pos:line="96" pos:column="30">null</name></expr>)</condition><then pos:line="96" pos:column="35">
            <block pos:line="97" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="98" pos:column="17">var</name></type> <name pos:line="98" pos:column="21">textBox</name> =<init pos:line="98" pos:column="30"> <expr><call><name><name pos:line="98" pos:column="31">searchBox</name><op:operator pos:line="98" pos:column="40">.</op:operator><name pos:line="98" pos:column="41">Template</name><op:operator pos:line="98" pos:column="49">.</op:operator><name pos:line="98" pos:column="50">FindName</name></name><argument_list pos:line="98" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="59">"Text"</lit:literal></expr></argument><op:operator pos:line="98" pos:column="65">,</op:operator> <argument><expr><name pos:line="98" pos:column="67">searchBox</name></expr></argument>)</argument_list></call> <op:operator pos:line="98" pos:column="78">as</op:operator> <name pos:line="98" pos:column="81">TextBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><name pos:line="99" pos:column="21">textBox</name> <op:operator pos:line="99" pos:column="29">!=</op:operator> <name pos:line="99" pos:column="32">null</name></expr>)</condition><then pos:line="99" pos:column="37">
                <block pos:line="100" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="101" pos:column="21">TextBoxFocusHelper</name><op:operator pos:line="101" pos:column="39">.</op:operator><name pos:line="101" pos:column="40">RegisterFocus</name></name><argument_list pos:line="101" pos:column="53">(<argument><expr><name pos:line="101" pos:column="54">textBox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="102" pos:column="21">textBox</name><op:operator pos:line="102" pos:column="28">.</op:operator><name pos:line="102" pos:column="29">KeyDown</name></name> <op:operator pos:line="102" pos:column="37">+=</op:operator> <name pos:line="102" pos:column="40">HandleTextBoxKeyDown</name></expr>;</expr_stmt>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="105" pos:column="17">var</name></type> <name pos:line="105" pos:column="21">listBox</name> =<init pos:line="105" pos:column="30"> <expr><call><name><name pos:line="105" pos:column="31">searchBox</name><op:operator pos:line="105" pos:column="40">.</op:operator><name pos:line="105" pos:column="41">Template</name><op:operator pos:line="105" pos:column="49">.</op:operator><name pos:line="105" pos:column="50">FindName</name></name><argument_list pos:line="105" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="59">"Selector"</lit:literal></expr></argument><op:operator pos:line="105" pos:column="69">,</op:operator> <argument><expr><name pos:line="105" pos:column="71">searchBox</name></expr></argument>)</argument_list></call> <op:operator pos:line="105" pos:column="82">as</op:operator> <name pos:line="105" pos:column="85">ListBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><name pos:line="106" pos:column="21">listBox</name> <op:operator pos:line="106" pos:column="29">!=</op:operator> <name pos:line="106" pos:column="32">null</name></expr>)</condition><then pos:line="106" pos:column="37">
                <block pos:line="107" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="108" pos:column="21">listBox</name><op:operator pos:line="108" pos:column="28">.</op:operator><name pos:line="108" pos:column="29">SelectionChanged</name></name> <op:operator pos:line="108" pos:column="46">+=</op:operator> <name pos:line="108" pos:column="49">searchBoxListBox_SelectionChanged</name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="113" pos:column="9">private</specifier> <name pos:line="113" pos:column="17">void</name></type> <name pos:line="113" pos:column="22">HandleTextBoxKeyDown</name><parameter_list pos:line="113" pos:column="42">(<param><decl><type><name pos:line="113" pos:column="43">object</name></type> <name pos:line="113" pos:column="50">sender</name></decl></param><op:operator pos:line="113" pos:column="56">,</op:operator> <param><decl><type><name pos:line="113" pos:column="58">KeyEventArgs</name></type> <name pos:line="113" pos:column="71">e</name></decl></param>)</parameter_list>
        <block pos:line="114" pos:column="9">{
            <if pos:line="115" pos:column="13">if <condition pos:line="115" pos:column="16">(<expr><name><name pos:line="115" pos:column="17">e</name><op:operator pos:line="115" pos:column="18">.</op:operator><name pos:line="115" pos:column="19">Key</name></name> <op:operator pos:line="115" pos:column="23">==</op:operator> <name><name pos:line="115" pos:column="26">Key</name><op:operator pos:line="115" pos:column="29">.</op:operator><name pos:line="115" pos:column="30">Tab</name></name> <op:operator pos:line="115" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="115" pos:column="37">(</op:operator><call><name><name pos:line="115" pos:column="38">Keyboard</name><op:operator pos:line="115" pos:column="46">.</op:operator><name pos:line="115" pos:column="47">IsKeyDown</name></name><argument_list pos:line="115" pos:column="56">(<argument><expr><name><name pos:line="115" pos:column="57">Key</name><op:operator pos:line="115" pos:column="60">.</op:operator><name pos:line="115" pos:column="61">LeftShift</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="115" pos:column="72">||</op:operator> <call><name><name pos:line="115" pos:column="75">Keyboard</name><op:operator pos:line="115" pos:column="83">.</op:operator><name pos:line="115" pos:column="84">IsKeyDown</name></name><argument_list pos:line="115" pos:column="93">(<argument><expr><name><name pos:line="115" pos:column="94">Key</name><op:operator pos:line="115" pos:column="97">.</op:operator><name pos:line="115" pos:column="98">RightShift</name></name></expr></argument>)</argument_list></call><op:operator pos:line="115" pos:column="109">)</op:operator></expr>)</condition><then pos:line="115" pos:column="111">
            <block pos:line="116" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="117" pos:column="17">searchResultListbox</name><op:operator pos:line="117" pos:column="36">.</op:operator><name pos:line="117" pos:column="37">Focus</name></name><argument_list pos:line="117" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="118" pos:column="17">e</name><op:operator pos:line="118" pos:column="18">.</op:operator><name pos:line="118" pos:column="19">Handled</name></name> <op:operator pos:line="118" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="118" pos:column="29">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="122" pos:column="9">private</specifier> <name pos:line="122" pos:column="17">void</name></type> <name pos:line="122" pos:column="22">InitProgramElements</name><parameter_list pos:line="122" pos:column="41">()</parameter_list>
        <block pos:line="123" pos:column="9">{
            <expr_stmt><expr><name pos:line="124" pos:column="13">ProgramElements</name> <op:operator pos:line="124" pos:column="29">=</op:operator> <op:operator pos:line="124" pos:column="31">new</op:operator> <name><name pos:line="124" pos:column="35">ObservableCollection</name><argument_list pos:line="124" pos:column="55">&lt;<argument><name pos:line="124" pos:column="56">ProgramElementWrapper</name></argument>&gt;</argument_list></name>
                <block pos:line="125" pos:column="17">{
                    <expr><op:operator pos:line="126" pos:column="21">new</op:operator> <call><name pos:line="126" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="126" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="126" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="126" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="126" pos:column="53">ProgramElementType</name><op:operator pos:line="126" pos:column="71">.</op:operator><name pos:line="126" pos:column="72">Class</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="126" pos:column="78">,</op:operator>
                    <expr><op:operator pos:line="127" pos:column="21">new</op:operator> <call><name pos:line="127" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="127" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="127" pos:column="47">false</lit:literal></expr></argument><op:operator pos:line="127" pos:column="52">,</op:operator> <argument><expr><name><name pos:line="127" pos:column="54">ProgramElementType</name><op:operator pos:line="127" pos:column="72">.</op:operator><name pos:line="127" pos:column="73">Comment</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="127" pos:column="81">,</op:operator>
                    <expr><op:operator pos:line="128" pos:column="21">new</op:operator> <call><name pos:line="128" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="128" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="128" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="128" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="128" pos:column="53">ProgramElementType</name><op:operator pos:line="128" pos:column="71">.</op:operator><name pos:line="128" pos:column="72">Custom</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="128" pos:column="79">,</op:operator>
                    <expr><op:operator pos:line="129" pos:column="21">new</op:operator> <call><name pos:line="129" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="129" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="129" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="129" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="129" pos:column="53">ProgramElementType</name><op:operator pos:line="129" pos:column="71">.</op:operator><name pos:line="129" pos:column="72">Enum</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="129" pos:column="77">,</op:operator>
                    <expr><op:operator pos:line="130" pos:column="21">new</op:operator> <call><name pos:line="130" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="130" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="130" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="130" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="130" pos:column="53">ProgramElementType</name><op:operator pos:line="130" pos:column="71">.</op:operator><name pos:line="130" pos:column="72">Field</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="130" pos:column="78">,</op:operator>
                    <expr><op:operator pos:line="131" pos:column="21">new</op:operator> <call><name pos:line="131" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="131" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="131" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="131" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="131" pos:column="53">ProgramElementType</name><op:operator pos:line="131" pos:column="71">.</op:operator><name pos:line="131" pos:column="72">Method</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="131" pos:column="79">,</op:operator>
                    <expr><op:operator pos:line="132" pos:column="21">new</op:operator> <call><name pos:line="132" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="132" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="132" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="132" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="132" pos:column="53">ProgramElementType</name><op:operator pos:line="132" pos:column="71">.</op:operator><name pos:line="132" pos:column="72">MethodPrototype</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="132" pos:column="88">,</op:operator>
                    <expr><op:operator pos:line="133" pos:column="21">new</op:operator> <call><name pos:line="133" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="133" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="133" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="133" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="133" pos:column="53">ProgramElementType</name><op:operator pos:line="133" pos:column="71">.</op:operator><name pos:line="133" pos:column="72">Property</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="133" pos:column="81">,</op:operator>
                    <expr><op:operator pos:line="134" pos:column="21">new</op:operator> <call><name pos:line="134" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="134" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="134" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="134" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="134" pos:column="53">ProgramElementType</name><op:operator pos:line="134" pos:column="71">.</op:operator><name pos:line="134" pos:column="72">Struct</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="134" pos:column="79">,</op:operator>
                    <expr><op:operator pos:line="135" pos:column="21">new</op:operator> <call><name pos:line="135" pos:column="25">ProgramElementWrapper</name><argument_list pos:line="135" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="135" pos:column="47">true</lit:literal></expr></argument><op:operator pos:line="135" pos:column="51">,</op:operator> <argument><expr><name><name pos:line="135" pos:column="53">ProgramElementType</name><op:operator pos:line="135" pos:column="71">.</op:operator><name pos:line="135" pos:column="72">TextLine</name></name></expr></argument>)</argument_list></call></expr>
                }</block></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="139" pos:column="9">private</specifier> <name pos:line="139" pos:column="17">void</name></type> <name pos:line="139" pos:column="22">InitAccessLevels</name><parameter_list pos:line="139" pos:column="38">()</parameter_list>
        <block pos:line="140" pos:column="9">{
            <expr_stmt><expr><name pos:line="141" pos:column="13">AccessLevels</name> <op:operator pos:line="141" pos:column="26">=</op:operator> <op:operator pos:line="141" pos:column="28">new</op:operator> <name><name pos:line="141" pos:column="32">ObservableCollection</name><argument_list pos:line="141" pos:column="52">&lt;<argument><name pos:line="141" pos:column="53">AccessWrapper</name></argument>&gt;</argument_list></name>
                <block pos:line="142" pos:column="17">{
                    <expr><op:operator pos:line="143" pos:column="21">new</op:operator> <call><name pos:line="143" pos:column="25">AccessWrapper</name><argument_list pos:line="143" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="143" pos:column="39">true</lit:literal></expr></argument><op:operator pos:line="143" pos:column="43">,</op:operator> <argument><expr><name><name pos:line="143" pos:column="45">AccessLevel</name><op:operator pos:line="143" pos:column="56">.</op:operator><name pos:line="143" pos:column="57">Private</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="143" pos:column="65">,</op:operator>
                    <expr><op:operator pos:line="144" pos:column="21">new</op:operator> <call><name pos:line="144" pos:column="25">AccessWrapper</name><argument_list pos:line="144" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="144" pos:column="39">true</lit:literal></expr></argument><op:operator pos:line="144" pos:column="43">,</op:operator> <argument><expr><name><name pos:line="144" pos:column="45">AccessLevel</name><op:operator pos:line="144" pos:column="56">.</op:operator><name pos:line="144" pos:column="57">Protected</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="144" pos:column="67">,</op:operator>
                    <expr><op:operator pos:line="145" pos:column="21">new</op:operator> <call><name pos:line="145" pos:column="25">AccessWrapper</name><argument_list pos:line="145" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="145" pos:column="39">true</lit:literal></expr></argument><op:operator pos:line="145" pos:column="43">,</op:operator> <argument><expr><name><name pos:line="145" pos:column="45">AccessLevel</name><op:operator pos:line="145" pos:column="56">.</op:operator><name pos:line="145" pos:column="57">Internal</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="145" pos:column="66">,</op:operator>
                    <expr><op:operator pos:line="146" pos:column="21">new</op:operator> <call><name pos:line="146" pos:column="25">AccessWrapper</name><argument_list pos:line="146" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="146" pos:column="39">true</lit:literal></expr></argument><op:operator pos:line="146" pos:column="43">,</op:operator> <argument><expr><name><name pos:line="146" pos:column="45">AccessLevel</name><op:operator pos:line="146" pos:column="56">.</op:operator><name pos:line="146" pos:column="57">Public</name></name></expr></argument>)</argument_list></call></expr>
                }</block></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="150" pos:column="9">private</specifier> <name pos:line="150" pos:column="17">void</name></type> <name pos:line="150" pos:column="22">SelectFirstResult</name><parameter_list pos:line="150" pos:column="39">(<param><decl><type><name pos:line="150" pos:column="40">object</name></type> <name pos:line="150" pos:column="47">sender</name></decl></param><op:operator pos:line="150" pos:column="53">,</op:operator> <param><decl><type><name pos:line="150" pos:column="55">NotifyCollectionChangedEventArgs</name></type> <name pos:line="150" pos:column="88">e</name></decl></param>)</parameter_list>
        <block pos:line="151" pos:column="9">{
            <comment type="line" pos:line="152" pos:column="13">//searchResultListbox.SelectedIndex = 0;</comment>
            <comment type="line" pos:line="153" pos:column="13">//searchResultListbox_SelectionChanged(searchResultListbox,null);</comment>
            <expr_stmt><expr><name><name pos:line="154" pos:column="13">searchResultListbox</name><op:operator pos:line="154" pos:column="32">.</op:operator><name pos:line="154" pos:column="33">SelectedIndex</name></name> <op:operator pos:line="154" pos:column="47">=</op:operator> <op:operator pos:line="154" pos:column="49">-</op:operator><lit:literal type="number" pos:line="154" pos:column="50">1</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="155" pos:column="13">searchResultListbox</name><op:operator pos:line="155" pos:column="32">.</op:operator><name pos:line="155" pos:column="33">Focus</name></name><argument_list pos:line="155" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="158" pos:column="9">[<expr><call><name><name pos:line="158" pos:column="10">System</name><op:operator pos:line="158" pos:column="16">.</op:operator><name pos:line="158" pos:column="17">Diagnostics</name><op:operator pos:line="158" pos:column="28">.</op:operator><name pos:line="158" pos:column="29">CodeAnalysis</name><op:operator pos:line="158" pos:column="41">.</op:operator><name pos:line="158" pos:column="42">SuppressMessage</name></name><argument_list pos:line="158" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="58">"Microsoft.Globalization"</lit:literal></expr></argument><op:operator pos:line="158" pos:column="83">,</op:operator> <argument><expr><lit:literal type="string" pos:line="158" pos:column="85">"CA1300:SpecifyMessageBoxOptions"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="159" pos:column="9">private</specifier> <name pos:line="159" pos:column="17">void</name></type> <name pos:line="159" pos:column="22">SearchButtonClick</name><parameter_list pos:line="159" pos:column="39">(<param><decl><type><name pos:line="159" pos:column="40">object</name></type> <name pos:line="159" pos:column="47">sender</name></decl></param><op:operator pos:line="159" pos:column="53">,</op:operator> <param><decl><type><name pos:line="159" pos:column="55">RoutedEventArgs</name></type> <name pos:line="159" pos:column="71">e</name></decl></param>)</parameter_list>
        <block pos:line="160" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="161" pos:column="13">BeginSearch</name><argument_list pos:line="161" pos:column="24">(<argument><expr><name><name pos:line="161" pos:column="25">searchBox</name><op:operator pos:line="161" pos:column="34">.</op:operator><name pos:line="161" pos:column="35">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="164" pos:column="9">private</specifier> <name pos:line="164" pos:column="17">void</name></type> <name pos:line="164" pos:column="22">OnKeyUpHandler</name><parameter_list pos:line="164" pos:column="36">(<param><decl><type><name pos:line="164" pos:column="37">object</name></type> <name pos:line="164" pos:column="44">sender</name></decl></param><op:operator pos:line="164" pos:column="50">,</op:operator> <param><decl><type><name pos:line="164" pos:column="52">KeyEventArgs</name></type> <name pos:line="164" pos:column="65">e</name></decl></param>)</parameter_list>
        <block pos:line="165" pos:column="9">{
            <if pos:line="166" pos:column="13">if <condition pos:line="166" pos:column="16">(<expr><name><name pos:line="166" pos:column="17">e</name><op:operator pos:line="166" pos:column="18">.</op:operator><name pos:line="166" pos:column="19">Key</name></name> <op:operator pos:line="166" pos:column="23">==</op:operator> <name><name pos:line="166" pos:column="26">Key</name><op:operator pos:line="166" pos:column="29">.</op:operator><name pos:line="166" pos:column="30">Return</name></name></expr>)</condition><then pos:line="166" pos:column="37">
            <block pos:line="167" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="168" pos:column="17">var</name></type> <name pos:line="168" pos:column="21">text</name> =<init pos:line="168" pos:column="27"> <expr><name pos:line="168" pos:column="28">sender</name> <op:operator pos:line="168" pos:column="35">as</op:operator> <name pos:line="168" pos:column="38">AutoCompleteBox</name></expr></init></decl>;</decl_stmt>
                <if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><name pos:line="169" pos:column="21">text</name> <op:operator pos:line="169" pos:column="26">!=</op:operator> <name pos:line="169" pos:column="29">null</name></expr>)</condition><then pos:line="169" pos:column="34">
                <block pos:line="170" pos:column="17">{
                    <expr_stmt><expr><call><name pos:line="171" pos:column="21">BeginSearch</name><argument_list pos:line="171" pos:column="32">(<argument><expr><name><name pos:line="171" pos:column="33">text</name><op:operator pos:line="171" pos:column="37">.</op:operator><name pos:line="171" pos:column="38">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="176" pos:column="9">private</specifier> <name pos:line="176" pos:column="17">void</name></type> <name pos:line="176" pos:column="22">BeginSearch</name><parameter_list pos:line="176" pos:column="33">(<param><decl><type><name pos:line="176" pos:column="34">string</name></type> <name pos:line="176" pos:column="41">searchString</name></decl></param>)</parameter_list>
        <block pos:line="177" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="178" pos:column="13">var</name></type> <name pos:line="178" pos:column="17">selectedAccessLevels</name> =<init pos:line="178" pos:column="39"> <expr><call><name><name pos:line="178" pos:column="40">AccessLevels</name><op:operator pos:line="178" pos:column="52">.</op:operator><name pos:line="178" pos:column="53">Where</name></name><argument_list pos:line="178" pos:column="58">(<argument><expr><name pos:line="178" pos:column="59">a</name> <op:operator pos:line="178" pos:column="61">=&gt;</op:operator> <name><name pos:line="178" pos:column="64">a</name><op:operator pos:line="178" pos:column="65">.</op:operator><name pos:line="178" pos:column="66">Checked</name></name></expr></argument>)</argument_list></call><op:operator pos:line="178" pos:column="74">.</op:operator><call><name pos:line="178" pos:column="75">Select</name><argument_list pos:line="178" pos:column="81">(<argument><expr><name pos:line="178" pos:column="82">a</name> <op:operator pos:line="178" pos:column="84">=&gt;</op:operator> <name><name pos:line="178" pos:column="87">a</name><op:operator pos:line="178" pos:column="88">.</op:operator><name pos:line="178" pos:column="89">Access</name></name></expr></argument>)</argument_list></call><op:operator pos:line="178" pos:column="96">.</op:operator><call><name pos:line="178" pos:column="97">ToList</name><argument_list pos:line="178" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><call><name><name pos:line="179" pos:column="17">selectedAccessLevels</name><op:operator pos:line="179" pos:column="37">.</op:operator><name pos:line="179" pos:column="38">Any</name></name><argument_list pos:line="179" pos:column="41">()</argument_list></call></expr>)</condition><then pos:line="179" pos:column="44">
            <block pos:line="180" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="181" pos:column="17">SearchCriteria</name><op:operator pos:line="181" pos:column="31">.</op:operator><name pos:line="181" pos:column="32">SearchByAccessLevel</name></name> <op:operator pos:line="181" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="181" pos:column="54">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="182" pos:column="17">SearchCriteria</name><op:operator pos:line="182" pos:column="31">.</op:operator><name pos:line="182" pos:column="32">AccessLevels</name></name> <op:operator pos:line="182" pos:column="45">=</op:operator> <op:operator pos:line="182" pos:column="47">new</op:operator> <call><name><name pos:line="182" pos:column="51">SortedSet</name><argument_list pos:line="182" pos:column="60">&lt;<argument><name pos:line="182" pos:column="61">AccessLevel</name></argument>&gt;</argument_list></name><argument_list pos:line="182" pos:column="73">(<argument><expr><name pos:line="182" pos:column="74">selectedAccessLevels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="184" pos:column="13">else
            <block pos:line="185" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="186" pos:column="17">SearchCriteria</name><op:operator pos:line="186" pos:column="31">.</op:operator><name pos:line="186" pos:column="32">SearchByAccessLevel</name></name> <op:operator pos:line="186" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="186" pos:column="54">false</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="187" pos:column="17">SearchCriteria</name><op:operator pos:line="187" pos:column="31">.</op:operator><name pos:line="187" pos:column="32">AccessLevels</name><op:operator pos:line="187" pos:column="44">.</op:operator><name pos:line="187" pos:column="45">Clear</name></name><argument_list pos:line="187" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <decl_stmt><decl><type><name pos:line="190" pos:column="13">var</name></type> <name pos:line="190" pos:column="17">selectedProgramElementTypes</name> =<init pos:line="190" pos:column="46">
                <expr><call><name><name pos:line="191" pos:column="17">ProgramElements</name><op:operator pos:line="191" pos:column="32">.</op:operator><name pos:line="191" pos:column="33">Where</name></name><argument_list pos:line="191" pos:column="38">(<argument><expr><name pos:line="191" pos:column="39">e</name> <op:operator pos:line="191" pos:column="41">=&gt;</op:operator> <name><name pos:line="191" pos:column="44">e</name><op:operator pos:line="191" pos:column="45">.</op:operator><name pos:line="191" pos:column="46">Checked</name></name></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="54">.</op:operator><call><name pos:line="191" pos:column="55">Select</name><argument_list pos:line="191" pos:column="61">(<argument><expr><name pos:line="191" pos:column="62">e</name> <op:operator pos:line="191" pos:column="64">=&gt;</op:operator> <name><name pos:line="191" pos:column="67">e</name><op:operator pos:line="191" pos:column="68">.</op:operator><name pos:line="191" pos:column="69">ProgramElement</name></name></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="84">.</op:operator><call><name pos:line="191" pos:column="85">ToList</name><argument_list pos:line="191" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="192" pos:column="13">if <condition pos:line="192" pos:column="16">(<expr><call><name><name pos:line="192" pos:column="17">selectedProgramElementTypes</name><op:operator pos:line="192" pos:column="44">.</op:operator><name pos:line="192" pos:column="45">Any</name></name><argument_list pos:line="192" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="192" pos:column="51">
            <block pos:line="193" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="194" pos:column="17">SearchCriteria</name><op:operator pos:line="194" pos:column="31">.</op:operator><name pos:line="194" pos:column="32">SearchByProgramElementType</name></name> <op:operator pos:line="194" pos:column="59">=</op:operator> <lit:literal type="boolean" pos:line="194" pos:column="61">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="195" pos:column="17">SearchCriteria</name><op:operator pos:line="195" pos:column="31">.</op:operator><name pos:line="195" pos:column="32">ProgramElementTypes</name></name> <op:operator pos:line="195" pos:column="52">=</op:operator> <op:operator pos:line="195" pos:column="54">new</op:operator> <call><name><name pos:line="195" pos:column="58">SortedSet</name><argument_list pos:line="195" pos:column="67">&lt;<argument><name pos:line="195" pos:column="68">ProgramElementType</name></argument>&gt;</argument_list></name><argument_list pos:line="195" pos:column="87">(<argument><expr><name pos:line="195" pos:column="88">selectedProgramElementTypes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="197" pos:column="13">else
            <block pos:line="198" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="199" pos:column="17">SearchCriteria</name><op:operator pos:line="199" pos:column="31">.</op:operator><name pos:line="199" pos:column="32">SearchByProgramElementType</name></name> <op:operator pos:line="199" pos:column="59">=</op:operator> <lit:literal type="boolean" pos:line="199" pos:column="61">false</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="200" pos:column="17">SearchCriteria</name><op:operator pos:line="200" pos:column="31">.</op:operator><name pos:line="200" pos:column="32">ProgramElementTypes</name><op:operator pos:line="200" pos:column="51">.</op:operator><name pos:line="200" pos:column="52">Clear</name></name><argument_list pos:line="200" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <expr_stmt><expr><call><name pos:line="203" pos:column="13">SearchAsync</name><argument_list pos:line="203" pos:column="24">(<argument><expr><name pos:line="203" pos:column="25">searchString</name></expr></argument><op:operator pos:line="203" pos:column="37">,</op:operator> <argument><expr><name pos:line="203" pos:column="39">SearchCriteria</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="206" pos:column="9">private</specifier> <name pos:line="206" pos:column="17">void</name></type> <name pos:line="206" pos:column="22">SearchAsync</name><parameter_list pos:line="206" pos:column="33">(<param><decl><type><name pos:line="206" pos:column="34">String</name></type> <name pos:line="206" pos:column="41">text</name></decl></param><op:operator pos:line="206" pos:column="45">,</op:operator> <param><decl><type><name pos:line="206" pos:column="47">SimpleSearchCriteria</name></type> <name pos:line="206" pos:column="68">searchCriteria</name></decl></param>)</parameter_list>
        <block pos:line="207" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="208" pos:column="13">var</name></type> <name pos:line="208" pos:column="17">sandoWorker</name> =<init pos:line="208" pos:column="30"> <expr><op:operator pos:line="208" pos:column="31">new</op:operator> <call><name pos:line="208" pos:column="35">BackgroundWorker</name><argument_list pos:line="208" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="209" pos:column="13">sandoWorker</name><op:operator pos:line="209" pos:column="24">.</op:operator><name pos:line="209" pos:column="25">DoWork</name></name> <op:operator pos:line="209" pos:column="32">+=</op:operator> <name pos:line="209" pos:column="35">sandoWorker_DoWork</name></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="210" pos:column="13">var</name></type> <name pos:line="210" pos:column="17">workerSearchParams</name> =<init pos:line="210" pos:column="37"> <expr><op:operator pos:line="210" pos:column="38">new</op:operator> <name pos:line="210" pos:column="42">WorkerSearchParameters</name> <block pos:line="210" pos:column="65">{ <expr><name pos:line="210" pos:column="67">Query</name> <op:operator pos:line="210" pos:column="73">=</op:operator> <name pos:line="210" pos:column="75">text</name></expr><op:operator pos:line="210" pos:column="79">,</op:operator> <expr><name pos:line="210" pos:column="81">Criteria</name> <op:operator pos:line="210" pos:column="90">=</op:operator> <name pos:line="210" pos:column="92">searchCriteria</name></expr> }</block></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="211" pos:column="13">sandoWorker</name><op:operator pos:line="211" pos:column="24">.</op:operator><name pos:line="211" pos:column="25">RunWorkerAsync</name></name><argument_list pos:line="211" pos:column="39">(<argument><expr><name pos:line="211" pos:column="40">workerSearchParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="214" pos:column="9">private</specifier> class <name pos:line="214" pos:column="23">WorkerSearchParameters</name>
        <block pos:line="215" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="216" pos:column="13">public</specifier> <name pos:line="216" pos:column="20">SimpleSearchCriteria</name></type> <name pos:line="216" pos:column="41">Criteria</name> <block pos:line="216" pos:column="50">{ <function><name pos:line="216" pos:column="52">get</name>;</function> <function><name pos:line="216" pos:column="57">set</name>;</function> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="217" pos:column="13">public</specifier> <name pos:line="217" pos:column="20">String</name></type> <name pos:line="217" pos:column="27">Query</name> <block pos:line="217" pos:column="33">{ <function><name pos:line="217" pos:column="35">get</name>;</function> <function><name pos:line="217" pos:column="40">set</name>;</function> }</block></decl></decl_stmt>
        }</block></class>
      
        <function><type><name pos:line="220" pos:column="9">void</name></type> <name pos:line="220" pos:column="14">sandoWorker_DoWork</name><parameter_list pos:line="220" pos:column="32">(<param><decl><type><name pos:line="220" pos:column="33">object</name></type> <name pos:line="220" pos:column="40">sender</name></decl></param><op:operator pos:line="220" pos:column="46">,</op:operator> <param><decl><type><name pos:line="220" pos:column="48">DoWorkEventArgs</name></type> <name pos:line="220" pos:column="64">e</name></decl></param>)</parameter_list>
        <block pos:line="221" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="222" pos:column="13">var</name></type> <name pos:line="222" pos:column="17">searchParams</name> =<init pos:line="222" pos:column="31"> <expr><op:operator pos:line="222" pos:column="32">(</op:operator><name pos:line="222" pos:column="33">WorkerSearchParameters</name><op:operator pos:line="222" pos:column="55">)</op:operator> <name><name pos:line="222" pos:column="57">e</name><op:operator pos:line="222" pos:column="58">.</op:operator><name pos:line="222" pos:column="59">Argument</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="223" pos:column="13">_searchManager</name><op:operator pos:line="223" pos:column="27">.</op:operator><name pos:line="223" pos:column="28">Search</name></name><argument_list pos:line="223" pos:column="34">(<argument><expr><name><name pos:line="223" pos:column="35">searchParams</name><op:operator pos:line="223" pos:column="47">.</op:operator><name pos:line="223" pos:column="48">Query</name></name></expr></argument><op:operator pos:line="223" pos:column="53">,</op:operator> <argument><expr><name><name pos:line="223" pos:column="55">searchParams</name><op:operator pos:line="223" pos:column="67">.</op:operator><name pos:line="223" pos:column="68">Criteria</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="226" pos:column="9">private</specifier> <name pos:line="226" pos:column="17">void</name></type> <name pos:line="226" pos:column="22">UIElement_OnMouseDown</name><parameter_list pos:line="226" pos:column="43">(<param><decl><type><name pos:line="226" pos:column="44">object</name></type> <name pos:line="226" pos:column="51">sender</name></decl></param><op:operator pos:line="226" pos:column="57">,</op:operator> <param><decl><type><name pos:line="226" pos:column="59">MouseButtonEventArgs</name></type> <name pos:line="226" pos:column="80">e</name></decl></param>)</parameter_list>
        <block pos:line="227" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">OpenFileWithSelectedResult</name><argument_list pos:line="228" pos:column="39">(<argument><expr><name pos:line="228" pos:column="40">sender</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="231" pos:column="9">private</specifier> <name pos:line="231" pos:column="17">void</name></type> <name pos:line="231" pos:column="22">UIElement_OnKeyDown</name><parameter_list pos:line="231" pos:column="41">(<param><decl><type><name pos:line="231" pos:column="42">object</name></type> <name pos:line="231" pos:column="49">sender</name></decl></param><op:operator pos:line="231" pos:column="55">,</op:operator> <param><decl><type><name pos:line="231" pos:column="57">KeyEventArgs</name></type> <name pos:line="231" pos:column="70">e</name></decl></param>)</parameter_list>
        <block pos:line="232" pos:column="9">{
            <if pos:line="233" pos:column="13">if <condition pos:line="233" pos:column="16">(<expr><name><name pos:line="233" pos:column="17">e</name><op:operator pos:line="233" pos:column="18">.</op:operator><name pos:line="233" pos:column="19">Key</name></name> <op:operator pos:line="233" pos:column="23">==</op:operator> <name><name pos:line="233" pos:column="26">Key</name><op:operator pos:line="233" pos:column="29">.</op:operator><name pos:line="233" pos:column="30">Return</name></name></expr>)</condition><then pos:line="233" pos:column="37">
            <block pos:line="234" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="235" pos:column="17">OpenFileWithSelectedResult</name><argument_list pos:line="235" pos:column="43">(<argument><expr><name pos:line="235" pos:column="44">sender</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="239" pos:column="9">private</specifier> <name pos:line="239" pos:column="17">void</name></type> <name pos:line="239" pos:column="22">OpenFileWithSelectedResult</name><parameter_list pos:line="239" pos:column="48">(<param><decl><type><name pos:line="239" pos:column="49">object</name></type> <name pos:line="239" pos:column="56">sender</name></decl></param>)</parameter_list>
        <block pos:line="240" pos:column="9">{
            <try pos:line="241" pos:column="13">try
            <block pos:line="242" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="243" pos:column="17">var</name></type> <name pos:line="243" pos:column="21">result</name> =<init pos:line="243" pos:column="29"> <expr><name pos:line="243" pos:column="30">sender</name> <op:operator pos:line="243" pos:column="37">as</op:operator> <name pos:line="243" pos:column="40">ListBoxItem</name></expr></init></decl>;</decl_stmt>
                <if pos:line="244" pos:column="17">if <condition pos:line="244" pos:column="20">(<expr><name pos:line="244" pos:column="21">result</name> <op:operator pos:line="244" pos:column="28">!=</op:operator> <name pos:line="244" pos:column="31">null</name></expr>)</condition><then pos:line="244" pos:column="36">
                <block pos:line="245" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="246" pos:column="21">FileOpener</name><op:operator pos:line="246" pos:column="31">.</op:operator><name pos:line="246" pos:column="32">OpenItem</name></name><argument_list pos:line="246" pos:column="40">(<argument><expr><name><name pos:line="246" pos:column="41">result</name><op:operator pos:line="246" pos:column="47">.</op:operator><name pos:line="246" pos:column="48">Content</name></name> <op:operator pos:line="246" pos:column="56">as</op:operator> <name pos:line="246" pos:column="59">CodeSearchResult</name></expr></argument><op:operator pos:line="246" pos:column="75">,</op:operator> <argument><expr><name><name pos:line="246" pos:column="77">searchBox</name><op:operator pos:line="246" pos:column="86">.</op:operator><name pos:line="246" pos:column="87">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="249" pos:column="13">catch (<param><decl><type><name pos:line="249" pos:column="20">ArgumentException</name></type> <name pos:line="249" pos:column="38">aex</name></decl></param>)
            <block pos:line="250" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="251" pos:column="17">FileLogger</name><op:operator pos:line="251" pos:column="27">.</op:operator><name pos:line="251" pos:column="28">DefaultLogger</name><op:operator pos:line="251" pos:column="41">.</op:operator><name pos:line="251" pos:column="42">Error</name></name><argument_list pos:line="251" pos:column="47">(<argument><expr><call><name><name pos:line="251" pos:column="48">ExceptionFormatter</name><op:operator pos:line="251" pos:column="66">.</op:operator><name pos:line="251" pos:column="67">CreateMessage</name></name><argument_list pos:line="251" pos:column="80">(<argument><expr><name pos:line="251" pos:column="81">aex</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="252" pos:column="17">MessageBox</name><op:operator pos:line="252" pos:column="27">.</op:operator><name pos:line="252" pos:column="28">Show</name></name><argument_list pos:line="252" pos:column="32">(<argument><expr><name pos:line="252" pos:column="33">FileNotFoundPopupMessage</name></expr></argument><op:operator pos:line="252" pos:column="57">,</op:operator> <argument><expr><name pos:line="252" pos:column="59">FileNotFoundPopupTitle</name></expr></argument><op:operator pos:line="252" pos:column="81">,</op:operator> <argument><expr><name><name pos:line="252" pos:column="83">MessageBoxButton</name><op:operator pos:line="252" pos:column="99">.</op:operator><name pos:line="252" pos:column="100">OK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="256" pos:column="9">public</specifier> <name pos:line="256" pos:column="16">void</name></type> <name pos:line="256" pos:column="21">Update</name><parameter_list pos:line="256" pos:column="27">(<param><decl><type><name><name pos:line="256" pos:column="28">IQueryable</name><argument_list pos:line="256" pos:column="38">&lt;<argument><name pos:line="256" pos:column="39">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="256" pos:column="57">results</name></decl></param>)</parameter_list>
        <block pos:line="257" pos:column="9">{
            <if pos:line="258" pos:column="13">if <condition pos:line="258" pos:column="16">(<expr><name><name pos:line="258" pos:column="17">Thread</name><op:operator pos:line="258" pos:column="23">.</op:operator><name pos:line="258" pos:column="24">CurrentThread</name></name> <op:operator pos:line="258" pos:column="38">==</op:operator> <name><name pos:line="258" pos:column="41">Dispatcher</name><op:operator pos:line="258" pos:column="51">.</op:operator><name pos:line="258" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="258" pos:column="59">
            <block pos:line="259" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="260" pos:column="17">UpdateResults</name><argument_list pos:line="260" pos:column="30">(<argument><expr><name pos:line="260" pos:column="31">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="262" pos:column="13">else
            <block pos:line="263" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="264" pos:column="17">Dispatcher</name><op:operator pos:line="264" pos:column="27">.</op:operator><name pos:line="264" pos:column="28">Invoke</name></name><argument_list pos:line="264" pos:column="34">(<argument><expr><call pos:line="264" pos:column="35">(<name pos:line="264" pos:column="36">Action</name>) <argument_list pos:line="264" pos:column="44">(<argument><expr><op:operator pos:line="264" pos:column="45">(</op:operator><op:operator pos:line="264" pos:column="46">)</op:operator> <op:operator pos:line="264" pos:column="48">=&gt;</op:operator> <call><name pos:line="264" pos:column="51">UpdateResults</name><argument_list pos:line="264" pos:column="64">(<argument><expr><name pos:line="264" pos:column="65">results</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="268" pos:column="9">private</specifier> <name pos:line="268" pos:column="17">void</name></type> <name pos:line="268" pos:column="22">UpdateResults</name><parameter_list pos:line="268" pos:column="35">(<param><decl><type><name><name pos:line="268" pos:column="36">IEnumerable</name><argument_list pos:line="268" pos:column="47">&lt;<argument><name pos:line="268" pos:column="48">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="268" pos:column="66">results</name></decl></param>)</parameter_list>
        <block pos:line="269" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="270" pos:column="13">SearchResults</name><op:operator pos:line="270" pos:column="26">.</op:operator><name pos:line="270" pos:column="27">Clear</name></name><argument_list pos:line="270" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            <foreach pos:line="271" pos:column="13">foreach (<init><decl><type><name pos:line="271" pos:column="22">var</name></type> <name pos:line="271" pos:column="26">codeSearchResult</name> <init pos:line="271" pos:column="43">in <expr><name pos:line="271" pos:column="46">results</name></expr></init></decl></init>)
            <block pos:line="272" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="273" pos:column="17">SearchResults</name><op:operator pos:line="273" pos:column="30">.</op:operator><name pos:line="273" pos:column="31">Add</name></name><argument_list pos:line="273" pos:column="34">(<argument><expr><name pos:line="273" pos:column="35">codeSearchResult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="277" pos:column="9">public</specifier> <name pos:line="277" pos:column="16">void</name></type> <name pos:line="277" pos:column="21">UpdateMessage</name><parameter_list pos:line="277" pos:column="34">(<param><decl><type><name pos:line="277" pos:column="35">string</name></type> <name pos:line="277" pos:column="42">message</name></decl></param>)</parameter_list>
        <block pos:line="278" pos:column="9">{
            <if pos:line="279" pos:column="13">if <condition pos:line="279" pos:column="16">(<expr><name><name pos:line="279" pos:column="17">Thread</name><op:operator pos:line="279" pos:column="23">.</op:operator><name pos:line="279" pos:column="24">CurrentThread</name></name> <op:operator pos:line="279" pos:column="38">==</op:operator> <name><name pos:line="279" pos:column="41">Dispatcher</name><op:operator pos:line="279" pos:column="51">.</op:operator><name pos:line="279" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="279" pos:column="59">
            <block pos:line="280" pos:column="13">{
                <expr_stmt><expr><name pos:line="281" pos:column="17">SearchStatus</name> <op:operator pos:line="281" pos:column="30">=</op:operator> <name pos:line="281" pos:column="32">message</name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="283" pos:column="13">else
            <block pos:line="284" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="285" pos:column="17">Dispatcher</name><op:operator pos:line="285" pos:column="27">.</op:operator><name pos:line="285" pos:column="28">Invoke</name></name><argument_list pos:line="285" pos:column="34">(<argument><expr><call pos:line="285" pos:column="35">(<name pos:line="285" pos:column="36">Action</name>)<argument_list pos:line="285" pos:column="43">(<argument><expr><op:operator pos:line="285" pos:column="44">(</op:operator><op:operator pos:line="285" pos:column="45">)</op:operator> <op:operator pos:line="285" pos:column="47">=&gt;</op:operator> <name pos:line="285" pos:column="50">SearchStatus</name> <op:operator pos:line="285" pos:column="63">=</op:operator> <name pos:line="285" pos:column="65">message</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="289" pos:column="9">private</specifier> <name pos:line="289" pos:column="17">void</name></type> <name pos:line="289" pos:column="22">UpdateExpansionState</name><parameter_list pos:line="289" pos:column="42">(<param><decl><type><name pos:line="289" pos:column="43">ListView</name></type> <name pos:line="289" pos:column="52">view</name></decl></param>)</parameter_list>
        <block pos:line="290" pos:column="9">{
            <if pos:line="291" pos:column="13">if <condition pos:line="291" pos:column="16">(<expr><name pos:line="291" pos:column="17">view</name> <op:operator pos:line="291" pos:column="22">!=</op:operator> <name pos:line="291" pos:column="25">null</name></expr>)</condition><then pos:line="291" pos:column="30">
            <block pos:line="292" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="293" pos:column="17">var</name></type> <name pos:line="293" pos:column="21">selectedIndex</name> =<init pos:line="293" pos:column="36"> <expr><name><name pos:line="293" pos:column="37">view</name><op:operator pos:line="293" pos:column="41">.</op:operator><name pos:line="293" pos:column="42">SelectedIndex</name></name></expr></init></decl>;</decl_stmt>

                <if pos:line="295" pos:column="17">if <condition pos:line="295" pos:column="20">(<expr><call><name pos:line="295" pos:column="21">IsExpandAllChecked</name><argument_list pos:line="295" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="295" pos:column="42">
                <block pos:line="296" pos:column="17">{
                    <for pos:line="297" pos:column="21">for (<init><decl><type><name pos:line="297" pos:column="26">var</name></type> <name pos:line="297" pos:column="30">currentIndex</name> =<init pos:line="297" pos:column="44"> <expr><lit:literal type="number" pos:line="297" pos:column="45">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="297" pos:column="48">currentIndex</name> <op:operator pos:line="297" pos:column="61">&lt;</op:operator> <name><name pos:line="297" pos:column="63">view</name><op:operator pos:line="297" pos:column="67">.</op:operator><name pos:line="297" pos:column="68">Items</name><op:operator pos:line="297" pos:column="73">.</op:operator><name pos:line="297" pos:column="74">Count</name></name></expr>;</condition> <incr><expr><op:operator pos:line="297" pos:column="81">++</op:operator><name pos:line="297" pos:column="83">currentIndex</name></expr></incr>)
                    <block pos:line="298" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="299" pos:column="25">var</name></type> <name pos:line="299" pos:column="29">currentItem</name> =<init pos:line="299" pos:column="42"> <expr><call><name><name pos:line="299" pos:column="43">view</name><op:operator pos:line="299" pos:column="47">.</op:operator><name pos:line="299" pos:column="48">ItemContainerGenerator</name><op:operator pos:line="299" pos:column="70">.</op:operator><name pos:line="299" pos:column="71">ContainerFromIndex</name></name><argument_list pos:line="299" pos:column="89">(<argument><expr><name pos:line="299" pos:column="90">currentIndex</name></expr></argument>)</argument_list></call> <op:operator pos:line="299" pos:column="104">as</op:operator> <name pos:line="299" pos:column="107">ListViewItem</name></expr></init></decl>;</decl_stmt>
                        <if pos:line="300" pos:column="25">if <condition pos:line="300" pos:column="28">(<expr><name pos:line="300" pos:column="29">currentItem</name> <op:operator pos:line="300" pos:column="41">!=</op:operator> <name pos:line="300" pos:column="44">null</name></expr>)</condition><then pos:line="300" pos:column="49">
                            <expr_stmt><expr><name><name pos:line="301" pos:column="29">currentItem</name><op:operator pos:line="301" pos:column="40">.</op:operator><name pos:line="301" pos:column="41">Height</name></name> <op:operator pos:line="301" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="301" pos:column="50">89</lit:literal></expr>;</expr_stmt></then></if>
                    }</block></for>
                }</block></then>
                <else pos:line="304" pos:column="17">else
                <block pos:line="305" pos:column="17">{
                    <for pos:line="306" pos:column="21">for (<init><decl><type><name pos:line="306" pos:column="26">var</name></type> <name pos:line="306" pos:column="30">currentIndex</name> =<init pos:line="306" pos:column="44"> <expr><lit:literal type="number" pos:line="306" pos:column="45">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="306" pos:column="48">currentIndex</name> <op:operator pos:line="306" pos:column="61">&lt;</op:operator> <name><name pos:line="306" pos:column="63">view</name><op:operator pos:line="306" pos:column="67">.</op:operator><name pos:line="306" pos:column="68">Items</name><op:operator pos:line="306" pos:column="73">.</op:operator><name pos:line="306" pos:column="74">Count</name></name></expr>;</condition> <incr><expr><op:operator pos:line="306" pos:column="81">++</op:operator><name pos:line="306" pos:column="83">currentIndex</name></expr></incr>)
                    <block pos:line="307" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="308" pos:column="25">var</name></type> <name pos:line="308" pos:column="29">currentItem</name> =<init pos:line="308" pos:column="42"> <expr><call><name><name pos:line="308" pos:column="43">view</name><op:operator pos:line="308" pos:column="47">.</op:operator><name pos:line="308" pos:column="48">ItemContainerGenerator</name><op:operator pos:line="308" pos:column="70">.</op:operator><name pos:line="308" pos:column="71">ContainerFromIndex</name></name><argument_list pos:line="308" pos:column="89">(<argument><expr><name pos:line="308" pos:column="90">currentIndex</name></expr></argument>)</argument_list></call> <op:operator pos:line="308" pos:column="104">as</op:operator> <name pos:line="308" pos:column="107">ListViewItem</name></expr></init></decl>;</decl_stmt>
                        <if pos:line="309" pos:column="25">if <condition pos:line="309" pos:column="28">(<expr><name pos:line="309" pos:column="29">currentItem</name> <op:operator pos:line="309" pos:column="41">!=</op:operator> <name pos:line="309" pos:column="44">null</name></expr>)</condition><then pos:line="309" pos:column="49">
                            <expr_stmt><expr><name><name pos:line="310" pos:column="29">currentItem</name><op:operator pos:line="310" pos:column="40">.</op:operator><name pos:line="310" pos:column="41">Height</name></name> <op:operator pos:line="310" pos:column="48">=</op:operator> <name pos:line="310" pos:column="50">currentIndex</name> <op:operator pos:line="310" pos:column="63">==</op:operator> <name pos:line="310" pos:column="66">selectedIndex</name> <op:operator pos:line="310" pos:column="80">?</op:operator> <lit:literal type="number" pos:line="310" pos:column="82">89</lit:literal> <op:operator pos:line="310" pos:column="85">:</op:operator> <lit:literal type="number" pos:line="310" pos:column="87">24</lit:literal></expr>;</expr_stmt></then></if>
                    }</block></for>
                }</block></else></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="316" pos:column="9">private</specifier> <name pos:line="316" pos:column="17">bool</name></type> <name pos:line="316" pos:column="22">IsExpandAllChecked</name><parameter_list pos:line="316" pos:column="40">()</parameter_list>
        <block pos:line="317" pos:column="9">{
            <if pos:line="318" pos:column="13">if <condition pos:line="318" pos:column="16">(<expr><name pos:line="318" pos:column="17">expandButton</name> <op:operator pos:line="318" pos:column="30">==</op:operator> <name pos:line="318" pos:column="33">null</name></expr>)</condition><then pos:line="318" pos:column="38">
                <return pos:line="319" pos:column="17">return <expr><lit:literal type="boolean" pos:line="319" pos:column="24">false</lit:literal></expr>;</return></then></if>
            <decl_stmt><decl><type><name pos:line="320" pos:column="13">var</name></type> <name pos:line="320" pos:column="17">check</name> =<init pos:line="320" pos:column="24"> <expr><name><name pos:line="320" pos:column="25">expandButton</name><op:operator pos:line="320" pos:column="37">.</op:operator><name pos:line="320" pos:column="38">IsChecked</name></name></expr></init></decl>;</decl_stmt>
            <return pos:line="321" pos:column="13">return <expr><name><name pos:line="321" pos:column="20">check</name><op:operator pos:line="321" pos:column="25">.</op:operator><name pos:line="321" pos:column="26">HasValue</name></name> <op:operator pos:line="321" pos:column="35">&amp;&amp;</op:operator> <name pos:line="321" pos:column="38">check</name> <op:operator pos:line="321" pos:column="44">==</op:operator> <lit:literal type="boolean" pos:line="321" pos:column="47">true</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="324" pos:column="9">private</specifier> <name pos:line="324" pos:column="17">void</name></type> <name pos:line="324" pos:column="22">searchBox_Populating</name><parameter_list pos:line="324" pos:column="42">(<param><decl><type><name pos:line="324" pos:column="43">object</name></type> <name pos:line="324" pos:column="50">sender</name></decl></param><op:operator pos:line="324" pos:column="56">,</op:operator> <param><decl><type><name pos:line="324" pos:column="58">PopulatingEventArgs</name></type> <name pos:line="324" pos:column="78">e</name></decl></param>)</parameter_list>
        <block pos:line="325" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="326" pos:column="13">var</name></type> <name pos:line="326" pos:column="17">recommendationWorker</name> =<init pos:line="326" pos:column="39"> <expr><op:operator pos:line="326" pos:column="40">new</op:operator> <call><name pos:line="326" pos:column="44">BackgroundWorker</name><argument_list pos:line="326" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="327" pos:column="13">recommendationWorker</name><op:operator pos:line="327" pos:column="33">.</op:operator><name pos:line="327" pos:column="34">DoWork</name></name> <op:operator pos:line="327" pos:column="41">+=</op:operator> <name pos:line="327" pos:column="44">recommendationWorker_DoWork</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="328" pos:column="13">e</name><op:operator pos:line="328" pos:column="14">.</op:operator><name pos:line="328" pos:column="15">Cancel</name></name> <op:operator pos:line="328" pos:column="22">=</op:operator> <lit:literal type="boolean" pos:line="328" pos:column="24">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="329" pos:column="13">recommendationWorker</name><op:operator pos:line="329" pos:column="33">.</op:operator><name pos:line="329" pos:column="34">RunWorkerAsync</name></name><argument_list pos:line="329" pos:column="48">(<argument><expr><name><name pos:line="329" pos:column="49">searchBox</name><op:operator pos:line="329" pos:column="58">.</op:operator><name pos:line="329" pos:column="59">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="332" pos:column="9">private</specifier> <name pos:line="332" pos:column="17">void</name></type> <name pos:line="332" pos:column="22">recommendationWorker_DoWork</name><parameter_list pos:line="332" pos:column="49">(<param><decl><type><name pos:line="332" pos:column="50">object</name></type> <name pos:line="332" pos:column="57">sender</name></decl></param><op:operator pos:line="332" pos:column="63">,</op:operator> <param><decl><type><name pos:line="332" pos:column="65">DoWorkEventArgs</name></type> <name pos:line="332" pos:column="81">e</name></decl></param>)</parameter_list>
        <block pos:line="333" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="334" pos:column="13">var</name></type> <name pos:line="334" pos:column="17">queryString</name> =<init pos:line="334" pos:column="30"> <expr><op:operator pos:line="334" pos:column="31">(</op:operator><name pos:line="334" pos:column="32">string</name><op:operator pos:line="334" pos:column="38">)</op:operator> <name><name pos:line="334" pos:column="40">e</name><op:operator pos:line="334" pos:column="41">.</op:operator><name pos:line="334" pos:column="42">Argument</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="336" pos:column="13">var</name></type> <name pos:line="336" pos:column="17">result</name> =<init pos:line="336" pos:column="25"> <expr><call><name><name pos:line="336" pos:column="26">_recommender</name><op:operator pos:line="336" pos:column="38">.</op:operator><name pos:line="336" pos:column="39">GenerateRecommendations</name></name><argument_list pos:line="336" pos:column="62">(<argument><expr><name pos:line="336" pos:column="63">queryString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="337" pos:column="13">if <condition pos:line="337" pos:column="16">(<expr><name><name pos:line="337" pos:column="17">Thread</name><op:operator pos:line="337" pos:column="23">.</op:operator><name pos:line="337" pos:column="24">CurrentThread</name></name> <op:operator pos:line="337" pos:column="38">==</op:operator> <name><name pos:line="337" pos:column="41">Dispatcher</name><op:operator pos:line="337" pos:column="51">.</op:operator><name pos:line="337" pos:column="52">Thread</name></name></expr>)</condition><then pos:line="337" pos:column="59">
            <block pos:line="338" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="339" pos:column="17">UpdateRecommendations</name><argument_list pos:line="339" pos:column="38">(<argument><expr><name pos:line="339" pos:column="39">result</name></expr></argument><op:operator pos:line="339" pos:column="45">,</op:operator> <argument><expr><name pos:line="339" pos:column="47">queryString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="341" pos:column="13">else
            <block pos:line="342" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="343" pos:column="17">Dispatcher</name><op:operator pos:line="343" pos:column="27">.</op:operator><name pos:line="343" pos:column="28">Invoke</name></name><argument_list pos:line="343" pos:column="34">(<argument><expr><call pos:line="343" pos:column="35">(<name pos:line="343" pos:column="36">Action</name>) <argument_list pos:line="343" pos:column="44">(<argument><expr><op:operator pos:line="343" pos:column="45">(</op:operator><op:operator pos:line="343" pos:column="46">)</op:operator> <op:operator pos:line="343" pos:column="48">=&gt;</op:operator> <call><name pos:line="343" pos:column="51">UpdateRecommendations</name><argument_list pos:line="343" pos:column="72">(<argument><expr><name pos:line="343" pos:column="73">result</name></expr></argument><op:operator pos:line="343" pos:column="79">,</op:operator> <argument><expr><name pos:line="343" pos:column="81">queryString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="347" pos:column="9">private</specifier> <name pos:line="347" pos:column="17">void</name></type> <name pos:line="347" pos:column="22">searchResultListbox_SelectionChanged</name><parameter_list pos:line="347" pos:column="58">(<param><decl><type><name pos:line="347" pos:column="59">object</name></type> <name pos:line="347" pos:column="66">sender</name></decl></param><op:operator pos:line="347" pos:column="72">,</op:operator> <param><decl><type><name pos:line="347" pos:column="74">SelectionChangedEventArgs</name></type> <name pos:line="347" pos:column="100">e</name></decl></param>)</parameter_list>
        <block pos:line="348" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="349" pos:column="13">UpdateExpansionState</name><argument_list pos:line="349" pos:column="33">(<argument><expr><name pos:line="349" pos:column="34">searchResultListbox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="352" pos:column="9">private</specifier> <name pos:line="352" pos:column="17">void</name></type> <name pos:line="352" pos:column="22">Toggled</name><parameter_list pos:line="352" pos:column="29">(<param><decl><type><name pos:line="352" pos:column="30">object</name></type> <name pos:line="352" pos:column="37">sender</name></decl></param><op:operator pos:line="352" pos:column="43">,</op:operator> <param><decl><type><name pos:line="352" pos:column="45">RoutedEventArgs</name></type> <name pos:line="352" pos:column="61">e</name></decl></param>)</parameter_list>
        <block pos:line="353" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="354" pos:column="13">UpdateExpansionState</name><argument_list pos:line="354" pos:column="33">(<argument><expr><name pos:line="354" pos:column="34">searchResultListbox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="357" pos:column="9">private</specifier> <name pos:line="357" pos:column="17">void</name></type> <name pos:line="357" pos:column="22">UpdateRecommendations</name><parameter_list pos:line="357" pos:column="43">(<param><decl><type><name><name pos:line="357" pos:column="44">IEnumerable</name><argument_list pos:line="357" pos:column="55">&lt;<argument><name pos:line="357" pos:column="56">string</name></argument>&gt;</argument_list></name></type> <name pos:line="357" pos:column="64">recommendations</name></decl></param><op:operator pos:line="357" pos:column="79">,</op:operator> <param><decl><type><name pos:line="357" pos:column="81">string</name></type> <name pos:line="357" pos:column="88">query</name></decl></param>)</parameter_list>
        <block pos:line="358" pos:column="9">{
            <if pos:line="359" pos:column="13">if <condition pos:line="359" pos:column="16">(<expr><name pos:line="359" pos:column="17">query</name> <op:operator pos:line="359" pos:column="23">==</op:operator> <name><name pos:line="359" pos:column="26">searchBox</name><op:operator pos:line="359" pos:column="35">.</op:operator><name pos:line="359" pos:column="36">Text</name></name></expr>)</condition><then pos:line="359" pos:column="41">
            <block pos:line="360" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="361" pos:column="17">searchBox</name><op:operator pos:line="361" pos:column="26">.</op:operator><name pos:line="361" pos:column="27">ItemsSource</name></name> <op:operator pos:line="361" pos:column="39">=</op:operator> <name pos:line="361" pos:column="41">recommendations</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="362" pos:column="17">searchBox</name><op:operator pos:line="362" pos:column="26">.</op:operator><name pos:line="362" pos:column="27">PopulateComplete</name></name><argument_list pos:line="362" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="364" pos:column="13">else
            <block pos:line="365" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="366" pos:column="17">Debug</name><op:operator pos:line="366" pos:column="22">.</op:operator><name pos:line="366" pos:column="23">WriteLine</name></name><argument_list pos:line="366" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="366" pos:column="33">"Query \"{0}\" doesn't match current text \"{1}\"; no update."</lit:literal></expr></argument><op:operator pos:line="366" pos:column="95">,</op:operator> <argument><expr><name pos:line="366" pos:column="97">query</name></expr></argument><op:operator pos:line="366" pos:column="102">,</op:operator> <argument><expr><name><name pos:line="366" pos:column="104">searchBox</name><op:operator pos:line="366" pos:column="113">.</op:operator><name pos:line="366" pos:column="114">Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="370" pos:column="9">public</specifier> <name pos:line="370" pos:column="16">void</name></type> <name pos:line="370" pos:column="21">FocusOnText</name><parameter_list pos:line="370" pos:column="32">()</parameter_list>
        <block pos:line="371" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="372" pos:column="13">var</name></type> <name pos:line="372" pos:column="17">textBox</name> =<init pos:line="372" pos:column="26"> <expr><call><name><name pos:line="372" pos:column="27">searchBox</name><op:operator pos:line="372" pos:column="36">.</op:operator><name pos:line="372" pos:column="37">Template</name><op:operator pos:line="372" pos:column="45">.</op:operator><name pos:line="372" pos:column="46">FindName</name></name><argument_list pos:line="372" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="372" pos:column="55">"Text"</lit:literal></expr></argument><op:operator pos:line="372" pos:column="61">,</op:operator> <argument><expr><name pos:line="372" pos:column="63">searchBox</name></expr></argument>)</argument_list></call> <op:operator pos:line="372" pos:column="74">as</op:operator> <name pos:line="372" pos:column="77">TextBox</name></expr></init></decl>;</decl_stmt>
            <if pos:line="373" pos:column="13">if <condition pos:line="373" pos:column="16">(<expr><name pos:line="373" pos:column="17">textBox</name> <op:operator pos:line="373" pos:column="25">!=</op:operator> <name pos:line="373" pos:column="28">null</name></expr>)</condition><then pos:line="373" pos:column="33">
                <expr_stmt><expr><call><name><name pos:line="374" pos:column="17">textBox</name><op:operator pos:line="374" pos:column="24">.</op:operator><name pos:line="374" pos:column="25">Focus</name></name><argument_list pos:line="374" pos:column="30">()</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>

        <function><type><specifier pos:line="377" pos:column="9">private</specifier> <name pos:line="377" pos:column="17">void</name></type> <name pos:line="377" pos:column="22">searchBoxListBox_SelectionChanged</name><parameter_list pos:line="377" pos:column="55">(<param><decl><type><name pos:line="377" pos:column="56">object</name></type> <name pos:line="377" pos:column="63">sender</name></decl></param><op:operator pos:line="377" pos:column="69">,</op:operator> <param><decl><type><name pos:line="377" pos:column="71">SelectionChangedEventArgs</name></type> <name pos:line="377" pos:column="97">e</name></decl></param>)</parameter_list>
        <block pos:line="378" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="379" pos:column="13">var</name></type> <name pos:line="379" pos:column="17">listBox</name> =<init pos:line="379" pos:column="26"> <expr><name pos:line="379" pos:column="27">sender</name> <op:operator pos:line="379" pos:column="34">as</op:operator> <name pos:line="379" pos:column="37">ListBox</name></expr></init></decl>;</decl_stmt>
            <if pos:line="380" pos:column="13">if <condition pos:line="380" pos:column="16">(<expr><name pos:line="380" pos:column="17">listBox</name> <op:operator pos:line="380" pos:column="25">!=</op:operator> <name pos:line="380" pos:column="28">null</name></expr>)</condition><then pos:line="380" pos:column="33">
                <expr_stmt><expr><call><name><name pos:line="381" pos:column="17">listBox</name><op:operator pos:line="381" pos:column="24">.</op:operator><name pos:line="381" pos:column="25">ScrollIntoView</name></name><argument_list pos:line="381" pos:column="39">(<argument><expr><name><name pos:line="381" pos:column="40">listBox</name><op:operator pos:line="381" pos:column="47">.</op:operator><name pos:line="381" pos:column="48">SelectedItem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>

        <function><type><specifier pos:line="384" pos:column="9">private</specifier> <name pos:line="384" pos:column="17">void</name></type> <name pos:line="384" pos:column="22">Toggled_Popup</name><parameter_list pos:line="384" pos:column="35">(<param><decl><type><name pos:line="384" pos:column="36">object</name></type> <name pos:line="384" pos:column="43">sender</name></decl></param><op:operator pos:line="384" pos:column="49">,</op:operator> <param><decl><type><name pos:line="384" pos:column="51">RoutedEventArgs</name></type> <name pos:line="384" pos:column="67">e</name></decl></param>)</parameter_list>
        <block pos:line="385" pos:column="9">{
            <if pos:line="386" pos:column="13">if<condition pos:line="386" pos:column="15">(<expr><op:operator pos:line="386" pos:column="16">!</op:operator><name><name pos:line="386" pos:column="17">SelectionPopup</name><op:operator pos:line="386" pos:column="31">.</op:operator><name pos:line="386" pos:column="32">IsOpen</name></name></expr>)</condition><then pos:line="386" pos:column="39">
                <expr_stmt><expr><name><name pos:line="387" pos:column="17">SelectionPopup</name><op:operator pos:line="387" pos:column="31">.</op:operator><name pos:line="387" pos:column="32">IsOpen</name></name> <op:operator pos:line="387" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="387" pos:column="41">true</lit:literal></expr>;</expr_stmt></then></if>
        }</block></function>


        <decl_stmt><decl><type><specifier pos:line="391" pos:column="9">public</specifier> <specifier pos:line="391" pos:column="16">static</specifier> <specifier pos:line="391" pos:column="23">readonly</specifier> <name pos:line="391" pos:column="32">DependencyProperty</name></type> <name pos:line="391" pos:column="51">AccessLevelsProperty</name> =<init pos:line="391" pos:column="73">
            <expr><call><name><name pos:line="392" pos:column="13">DependencyProperty</name><op:operator pos:line="392" pos:column="31">.</op:operator><name pos:line="392" pos:column="32">Register</name></name><argument_list pos:line="392" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="41">"AccessLevels"</lit:literal></expr></argument><op:operator pos:line="392" pos:column="55">,</op:operator> <argument><expr><call><name pos:line="392" pos:column="57">typeof</name> <argument_list pos:line="392" pos:column="64">(<argument><expr><name><name pos:line="392" pos:column="65">ObservableCollection</name><argument_list pos:line="392" pos:column="85">&lt;<argument><name pos:line="392" pos:column="86">AccessWrapper</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="392" pos:column="101">,</op:operator> <argument><expr><call><name pos:line="392" pos:column="103">typeof</name> <argument_list pos:line="392" pos:column="110">(<argument><expr><name pos:line="392" pos:column="111">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="392" pos:column="129">,</op:operator> <argument><expr><op:operator pos:line="392" pos:column="131">new</op:operator> <call><name pos:line="392" pos:column="135">UIPropertyMetadata</name><argument_list pos:line="392" pos:column="153">(<argument><expr><name pos:line="392" pos:column="154">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="394" pos:column="9">public</specifier> <specifier pos:line="394" pos:column="16">static</specifier> <specifier pos:line="394" pos:column="23">readonly</specifier> <name pos:line="394" pos:column="32">DependencyProperty</name></type> <name pos:line="394" pos:column="51">ProgramElementsProperty</name> =<init pos:line="394" pos:column="76">
            <expr><call><name><name pos:line="395" pos:column="13">DependencyProperty</name><op:operator pos:line="395" pos:column="31">.</op:operator><name pos:line="395" pos:column="32">Register</name></name><argument_list pos:line="395" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="395" pos:column="41">"ProgramElements"</lit:literal></expr></argument><op:operator pos:line="395" pos:column="58">,</op:operator> <argument><expr><call><name pos:line="395" pos:column="60">typeof</name><argument_list pos:line="395" pos:column="66">(<argument><expr><name><name pos:line="395" pos:column="67">ObservableCollection</name><argument_list pos:line="395" pos:column="87">&lt;<argument><name pos:line="395" pos:column="88">ProgramElementWrapper</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="395" pos:column="111">,</op:operator> <argument><expr><call><name pos:line="395" pos:column="113">typeof</name><argument_list pos:line="395" pos:column="119">(<argument><expr><name pos:line="395" pos:column="120">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="395" pos:column="138">,</op:operator> <argument><expr><op:operator pos:line="395" pos:column="140">new</op:operator> <call><name pos:line="395" pos:column="144">UIPropertyMetadata</name><argument_list pos:line="395" pos:column="162">(<argument><expr><name pos:line="395" pos:column="163">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="398" pos:column="9">public</specifier> <specifier pos:line="398" pos:column="16">static</specifier> <specifier pos:line="398" pos:column="23">readonly</specifier> <name pos:line="398" pos:column="32">DependencyProperty</name></type> <name pos:line="398" pos:column="51">SearchResultsProperty</name> =<init pos:line="398" pos:column="74">
            <expr><call><name><name pos:line="399" pos:column="13">DependencyProperty</name><op:operator pos:line="399" pos:column="31">.</op:operator><name pos:line="399" pos:column="32">Register</name></name><argument_list pos:line="399" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="41">"SearchResults"</lit:literal></expr></argument><op:operator pos:line="399" pos:column="56">,</op:operator> <argument><expr><call><name pos:line="399" pos:column="58">typeof</name><argument_list pos:line="399" pos:column="64">(<argument><expr><name><name pos:line="399" pos:column="65">ObservableCollection</name><argument_list pos:line="399" pos:column="85">&lt;<argument><name pos:line="399" pos:column="86">CodeSearchResult</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="399" pos:column="104">,</op:operator> <argument><expr><call><name pos:line="399" pos:column="106">typeof</name><argument_list pos:line="399" pos:column="112">(<argument><expr><name pos:line="399" pos:column="113">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="399" pos:column="131">,</op:operator> <argument><expr><op:operator pos:line="399" pos:column="133">new</op:operator> <call><name pos:line="399" pos:column="137">UIPropertyMetadata</name><argument_list pos:line="399" pos:column="155">(<argument><expr><name pos:line="399" pos:column="156">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="401" pos:column="9">public</specifier> <specifier pos:line="401" pos:column="16">static</specifier> <specifier pos:line="401" pos:column="23">readonly</specifier> <name pos:line="401" pos:column="32">DependencyProperty</name></type> <name pos:line="401" pos:column="51">SearchStringProperty</name> =<init pos:line="401" pos:column="73">
            <expr><call><name><name pos:line="402" pos:column="13">DependencyProperty</name><op:operator pos:line="402" pos:column="31">.</op:operator><name pos:line="402" pos:column="32">Register</name></name><argument_list pos:line="402" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="402" pos:column="41">"SearchString"</lit:literal></expr></argument><op:operator pos:line="402" pos:column="55">,</op:operator> <argument><expr><call><name pos:line="402" pos:column="57">typeof</name><argument_list pos:line="402" pos:column="63">(<argument><expr><name pos:line="402" pos:column="64">string</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="402" pos:column="71">,</op:operator> <argument><expr><call><name pos:line="402" pos:column="73">typeof</name><argument_list pos:line="402" pos:column="79">(<argument><expr><name pos:line="402" pos:column="80">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="402" pos:column="98">,</op:operator> <argument><expr><op:operator pos:line="402" pos:column="100">new</op:operator> <call><name pos:line="402" pos:column="104">UIPropertyMetadata</name><argument_list pos:line="402" pos:column="122">(<argument><expr><name pos:line="402" pos:column="123">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="404" pos:column="9">public</specifier> <specifier pos:line="404" pos:column="16">static</specifier> <specifier pos:line="404" pos:column="23">readonly</specifier> <name pos:line="404" pos:column="32">DependencyProperty</name></type> <name pos:line="404" pos:column="51">SearchStatusProperty</name> =<init pos:line="404" pos:column="73">
            <expr><call><name><name pos:line="405" pos:column="13">DependencyProperty</name><op:operator pos:line="405" pos:column="31">.</op:operator><name pos:line="405" pos:column="32">Register</name></name><argument_list pos:line="405" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="405" pos:column="41">"SearchStatus"</lit:literal></expr></argument><op:operator pos:line="405" pos:column="55">,</op:operator> <argument><expr><call><name pos:line="405" pos:column="57">typeof</name><argument_list pos:line="405" pos:column="63">(<argument><expr><name pos:line="405" pos:column="64">string</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="405" pos:column="71">,</op:operator> <argument><expr><call><name pos:line="405" pos:column="73">typeof</name><argument_list pos:line="405" pos:column="79">(<argument><expr><name pos:line="405" pos:column="80">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="405" pos:column="98">,</op:operator> <argument><expr><op:operator pos:line="405" pos:column="100">new</op:operator> <call><name pos:line="405" pos:column="104">UIPropertyMetadata</name><argument_list pos:line="405" pos:column="122">(<argument><expr><name pos:line="405" pos:column="123">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="408" pos:column="9">public</specifier> <specifier pos:line="408" pos:column="16">static</specifier> <specifier pos:line="408" pos:column="23">readonly</specifier> <name pos:line="408" pos:column="32">DependencyProperty</name></type> <name pos:line="408" pos:column="51">SearchCriteriaProperty</name> =<init pos:line="408" pos:column="75">
            <expr><call><name><name pos:line="409" pos:column="13">DependencyProperty</name><op:operator pos:line="409" pos:column="31">.</op:operator><name pos:line="409" pos:column="32">Register</name></name><argument_list pos:line="409" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="409" pos:column="41">"SearchCriteria"</lit:literal></expr></argument><op:operator pos:line="409" pos:column="57">,</op:operator> <argument><expr><call><name pos:line="409" pos:column="59">typeof</name><argument_list pos:line="409" pos:column="65">(<argument><expr><name pos:line="409" pos:column="66">SimpleSearchCriteria</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="409" pos:column="87">,</op:operator> <argument><expr><call><name pos:line="409" pos:column="89">typeof</name><argument_list pos:line="409" pos:column="95">(<argument><expr><name pos:line="409" pos:column="96">SearchViewControl</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="409" pos:column="114">,</op:operator> <argument><expr><op:operator pos:line="409" pos:column="116">new</op:operator> <call><name pos:line="409" pos:column="120">UIPropertyMetadata</name><argument_list pos:line="409" pos:column="138">(<argument><expr><name pos:line="409" pos:column="139">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="411" pos:column="9">private</specifier> <name pos:line="411" pos:column="17">const</name> <name pos:line="411" pos:column="23">string</name></type> <name pos:line="411" pos:column="30">FileNotFoundPopupMessage</name> =<init pos:line="411" pos:column="56"> <expr><lit:literal type="string" pos:line="411" pos:column="57">"This file cannot be opened. It may have been deleted, moved, or renamed since your last search."</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="412" pos:column="9">private</specifier> <name pos:line="412" pos:column="17">const</name> <name pos:line="412" pos:column="23">string</name></type> <name pos:line="412" pos:column="30">FileNotFoundPopupTitle</name> =<init pos:line="412" pos:column="54"> <expr><lit:literal type="string" pos:line="412" pos:column="55">"File opening error"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="414" pos:column="9">private</specifier> <specifier pos:line="414" pos:column="17">readonly</specifier> <name pos:line="414" pos:column="26">SearchManager</name></type> <name pos:line="414" pos:column="40">_searchManager</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="415" pos:column="9">private</specifier> <specifier pos:line="415" pos:column="17">readonly</specifier> <name pos:line="415" pos:column="26">QueryRecommender</name></type> <name pos:line="415" pos:column="43">_recommender</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="417" pos:column="9">private</specifier> <name pos:line="417" pos:column="17">void</name></type> <name pos:line="417" pos:column="22">Remove_Click_1</name><parameter_list pos:line="417" pos:column="36">(<param><decl><type><name pos:line="417" pos:column="37">object</name></type> <name pos:line="417" pos:column="44">sender</name></decl></param><op:operator pos:line="417" pos:column="50">,</op:operator> <param><decl><type><name pos:line="417" pos:column="52">RoutedEventArgs</name></type> <name pos:line="417" pos:column="68">e</name></decl></param>)</parameter_list>
        <block pos:line="418" pos:column="9">{
            <try pos:line="419" pos:column="13">try
            <block pos:line="420" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="421" pos:column="17">var</name></type> <name pos:line="421" pos:column="21">result</name> =<init pos:line="421" pos:column="29"> <expr><name><name pos:line="421" pos:column="30">searchResultListbox</name><op:operator pos:line="421" pos:column="49">.</op:operator><name pos:line="421" pos:column="50">SelectedItems</name><index pos:line="421" pos:column="63">[<expr><lit:literal type="number" pos:line="421" pos:column="64">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if pos:line="422" pos:column="17">if <condition pos:line="422" pos:column="20">(<expr><name pos:line="422" pos:column="21">result</name> <op:operator pos:line="422" pos:column="28">!=</op:operator> <name pos:line="422" pos:column="31">null</name></expr>)</condition><then pos:line="422" pos:column="36">
                <block pos:line="423" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="424" pos:column="21">FileRemover</name><op:operator pos:line="424" pos:column="32">.</op:operator><name pos:line="424" pos:column="33">Remove</name></name><argument_list pos:line="424" pos:column="39">(<argument><expr><op:operator pos:line="424" pos:column="40">(</op:operator><name pos:line="424" pos:column="41">result</name> <op:operator pos:line="424" pos:column="48">as</op:operator> <name pos:line="424" pos:column="51">CodeSearchResult</name><op:operator pos:line="424" pos:column="67">)</op:operator><op:operator pos:line="424" pos:column="68">.</op:operator><name><name pos:line="424" pos:column="69">ProgramElement</name><op:operator pos:line="424" pos:column="83">.</op:operator><name pos:line="424" pos:column="84">FullFilePath</name></name></expr></argument><op:operator pos:line="424" pos:column="96">,</op:operator> <argument><expr><name pos:line="424" pos:column="98">RemoverCompleted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="427" pos:column="13">catch (<param><decl><type><name pos:line="427" pos:column="20">ArgumentException</name></type> <name pos:line="427" pos:column="38">aex</name></decl></param>)
            <block pos:line="428" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="429" pos:column="17">FileLogger</name><op:operator pos:line="429" pos:column="27">.</op:operator><name pos:line="429" pos:column="28">DefaultLogger</name><op:operator pos:line="429" pos:column="41">.</op:operator><name pos:line="429" pos:column="42">Error</name></name><argument_list pos:line="429" pos:column="47">(<argument><expr><call><name><name pos:line="429" pos:column="48">ExceptionFormatter</name><op:operator pos:line="429" pos:column="66">.</op:operator><name pos:line="429" pos:column="67">CreateMessage</name></name><argument_list pos:line="429" pos:column="80">(<argument><expr><name pos:line="429" pos:column="81">aex</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="433" pos:column="9">private</specifier> <name pos:line="433" pos:column="17">void</name></type> <name pos:line="433" pos:column="22">RemoverCompleted</name><parameter_list pos:line="433" pos:column="38">(<param><decl><type><name pos:line="433" pos:column="39">object</name></type> <name pos:line="433" pos:column="46">sender</name></decl></param><op:operator pos:line="433" pos:column="52">,</op:operator> <param><decl><type><name pos:line="433" pos:column="54">RunWorkerCompletedEventArgs</name></type> <name pos:line="433" pos:column="82">e</name></decl></param>)</parameter_list>
        <block pos:line="434" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="435" pos:column="13">SearchButtonClick</name><argument_list pos:line="435" pos:column="30">(<argument><expr><name pos:line="435" pos:column="31">null</name></expr></argument><op:operator pos:line="435" pos:column="35">,</op:operator> <argument><expr><name pos:line="435" pos:column="37">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>        
    }</block></class>
}</block></namespace></unit>
