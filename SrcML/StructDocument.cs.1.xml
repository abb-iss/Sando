<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\Indexer\Indexer\Documents\StructDocument.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Documents</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">ExtensionContracts</name><op:operator pos:line="6" pos:column="31">.</op:operator><name pos:line="6" pos:column="32">ProgramElementContracts</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Sando</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">Indexer</name><op:operator pos:line="8" pos:column="24">.</op:operator><name pos:line="8" pos:column="25">Documents</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">StructDocument</name> <super pos:line="10" pos:column="33">: <name pos:line="10" pos:column="35">SandoDocument</name></super>
    <block pos:line="11" pos:column="5">{
        <constructor><specifier pos:line="12" pos:column="9">public</specifier> <name pos:line="12" pos:column="16">StructDocument</name><parameter_list pos:line="12" pos:column="30">(<param><decl><type><name pos:line="12" pos:column="31">StructElement</name></type> <name pos:line="12" pos:column="45">element</name></decl></param>)</parameter_list><member_list pos:line="12" pos:column="53">: <call><name pos:line="12" pos:column="55">base</name><argument_list pos:line="12" pos:column="59">(<argument><expr><name pos:line="12" pos:column="60">element</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="13" pos:column="9">{
            
        }</block></constructor>

        <constructor><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">StructDocument</name><parameter_list pos:line="17" pos:column="30">(<param><decl><type><name pos:line="17" pos:column="31">Document</name></type> <name pos:line="17" pos:column="40">structDocument</name></decl></param>)</parameter_list><member_list pos:line="17" pos:column="55">: <call><name pos:line="17" pos:column="57">base</name><argument_list pos:line="17" pos:column="61">(<argument><expr><name pos:line="17" pos:column="62">structDocument</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="18" pos:column="9">{
            
        }</block></constructor>

        <function><type><specifier pos:line="22" pos:column="9">public</specifier> <specifier pos:line="22" pos:column="16">override</specifier> <name><name pos:line="22" pos:column="25">List</name><argument_list pos:line="22" pos:column="29">&lt;<argument><name pos:line="22" pos:column="30">Field</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="37">GetFieldsForLucene</name><parameter_list pos:line="22" pos:column="55">()</parameter_list>
        <block pos:line="23" pos:column="9">{
            <decl_stmt><decl><type><name><name pos:line="24" pos:column="13">List</name><argument_list pos:line="24" pos:column="17">&lt;<argument><name pos:line="24" pos:column="18">Field</name></argument>&gt;</argument_list></name></type> <name pos:line="24" pos:column="25">fields</name> =<init pos:line="24" pos:column="33"> <expr><op:operator pos:line="24" pos:column="34">new</op:operator> <call><name><name pos:line="24" pos:column="38">List</name><argument_list pos:line="24" pos:column="42">&lt;<argument><name pos:line="24" pos:column="43">Field</name></argument>&gt;</argument_list></name><argument_list pos:line="24" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">StructElement</name></type> <name pos:line="25" pos:column="27">structElement</name> =<init pos:line="25" pos:column="42"> <expr><op:operator pos:line="25" pos:column="43">(</op:operator><name pos:line="25" pos:column="44">StructElement</name><op:operator pos:line="25" pos:column="57">)</op:operator><name pos:line="25" pos:column="58">programElement</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">fields</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">Add</name></name><argument_list pos:line="26" pos:column="23">(<argument><expr><op:operator pos:line="26" pos:column="24">new</op:operator> <call><name pos:line="26" pos:column="28">Field</name><argument_list pos:line="26" pos:column="33">(<argument><expr><call><name><name pos:line="26" pos:column="34">SandoField</name><op:operator pos:line="26" pos:column="44">.</op:operator><name pos:line="26" pos:column="45">Namespace</name><op:operator pos:line="26" pos:column="54">.</op:operator><name pos:line="26" pos:column="55">ToString</name></name><argument_list pos:line="26" pos:column="63">()</argument_list></call></expr></argument><op:operator pos:line="26" pos:column="65">,</op:operator> <argument><expr><call><name><name pos:line="26" pos:column="67">structElement</name><op:operator pos:line="26" pos:column="80">.</op:operator><name pos:line="26" pos:column="81">Namespace</name><op:operator pos:line="26" pos:column="90">.</op:operator><name pos:line="26" pos:column="91">ToSandoSearchable</name></name><argument_list pos:line="26" pos:column="108">()</argument_list></call></expr></argument><op:operator pos:line="26" pos:column="110">,</op:operator> <argument><expr><name><name pos:line="26" pos:column="112">Field</name><op:operator pos:line="26" pos:column="117">.</op:operator><name pos:line="26" pos:column="118">Store</name><op:operator pos:line="26" pos:column="123">.</op:operator><name pos:line="26" pos:column="124">YES</name></name></expr></argument><op:operator pos:line="26" pos:column="127">,</op:operator> <argument><expr><name><name pos:line="26" pos:column="129">Field</name><op:operator pos:line="26" pos:column="134">.</op:operator><name pos:line="26" pos:column="135">Index</name><op:operator pos:line="26" pos:column="140">.</op:operator><name pos:line="26" pos:column="141">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">fields</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">Add</name></name><argument_list pos:line="27" pos:column="23">(<argument><expr><op:operator pos:line="27" pos:column="24">new</op:operator> <call><name pos:line="27" pos:column="28">Field</name><argument_list pos:line="27" pos:column="33">(<argument><expr><call><name><name pos:line="27" pos:column="34">SandoField</name><op:operator pos:line="27" pos:column="44">.</op:operator><name pos:line="27" pos:column="45">Body</name><op:operator pos:line="27" pos:column="49">.</op:operator><name pos:line="27" pos:column="50">ToString</name></name><argument_list pos:line="27" pos:column="58">()</argument_list></call></expr></argument><op:operator pos:line="27" pos:column="60">,</op:operator> <argument><expr><call><name><name pos:line="27" pos:column="62">structElement</name><op:operator pos:line="27" pos:column="75">.</op:operator><name pos:line="27" pos:column="76">Body</name><op:operator pos:line="27" pos:column="80">.</op:operator><name pos:line="27" pos:column="81">ToSandoSearchable</name></name><argument_list pos:line="27" pos:column="98">()</argument_list></call></expr></argument><op:operator pos:line="27" pos:column="100">,</op:operator> <argument><expr><name><name pos:line="27" pos:column="102">Field</name><op:operator pos:line="27" pos:column="107">.</op:operator><name pos:line="27" pos:column="108">Store</name><op:operator pos:line="27" pos:column="113">.</op:operator><name pos:line="27" pos:column="114">NO</name></name></expr></argument><op:operator pos:line="27" pos:column="116">,</op:operator> <argument><expr><name><name pos:line="27" pos:column="118">Field</name><op:operator pos:line="27" pos:column="123">.</op:operator><name pos:line="27" pos:column="124">Index</name><op:operator pos:line="27" pos:column="129">.</op:operator><name pos:line="27" pos:column="130">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">fields</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Add</name></name><argument_list pos:line="28" pos:column="23">(<argument><expr><op:operator pos:line="28" pos:column="24">new</op:operator> <call><name pos:line="28" pos:column="28">Field</name><argument_list pos:line="28" pos:column="33">(<argument><expr><call><name><name pos:line="28" pos:column="34">SandoField</name><op:operator pos:line="28" pos:column="44">.</op:operator><name pos:line="28" pos:column="45">AccessLevel</name><op:operator pos:line="28" pos:column="56">.</op:operator><name pos:line="28" pos:column="57">ToString</name></name><argument_list pos:line="28" pos:column="65">()</argument_list></call></expr></argument><op:operator pos:line="28" pos:column="67">,</op:operator> <argument><expr><call><name><name pos:line="28" pos:column="69">structElement</name><op:operator pos:line="28" pos:column="82">.</op:operator><name pos:line="28" pos:column="83">AccessLevel</name><op:operator pos:line="28" pos:column="94">.</op:operator><name pos:line="28" pos:column="95">ToString</name></name><argument_list pos:line="28" pos:column="103">()</argument_list></call><op:operator pos:line="28" pos:column="105">.</op:operator><call><name pos:line="28" pos:column="106">ToLower</name><argument_list pos:line="28" pos:column="113">()</argument_list></call></expr></argument><op:operator pos:line="28" pos:column="115">,</op:operator> <argument><expr><name><name pos:line="28" pos:column="117">Field</name><op:operator pos:line="28" pos:column="122">.</op:operator><name pos:line="28" pos:column="123">Store</name><op:operator pos:line="28" pos:column="128">.</op:operator><name pos:line="28" pos:column="129">YES</name></name></expr></argument><op:operator pos:line="28" pos:column="132">,</op:operator> <argument><expr><name><name pos:line="28" pos:column="134">Field</name><op:operator pos:line="28" pos:column="139">.</op:operator><name pos:line="28" pos:column="140">Index</name><op:operator pos:line="28" pos:column="145">.</op:operator><name pos:line="28" pos:column="146">NOT_ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">fields</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">Add</name></name><argument_list pos:line="29" pos:column="23">(<argument><expr><op:operator pos:line="29" pos:column="24">new</op:operator> <call><name pos:line="29" pos:column="28">Field</name><argument_list pos:line="29" pos:column="33">(<argument><expr><call><name><name pos:line="29" pos:column="34">SandoField</name><op:operator pos:line="29" pos:column="44">.</op:operator><name pos:line="29" pos:column="45">ExtendedClasses</name><op:operator pos:line="29" pos:column="60">.</op:operator><name pos:line="29" pos:column="61">ToString</name></name><argument_list pos:line="29" pos:column="69">()</argument_list></call></expr></argument><op:operator pos:line="29" pos:column="71">,</op:operator> <argument><expr><call><name><name pos:line="29" pos:column="73">structElement</name><op:operator pos:line="29" pos:column="86">.</op:operator><name pos:line="29" pos:column="87">ExtendedStructs</name><op:operator pos:line="29" pos:column="102">.</op:operator><name pos:line="29" pos:column="103">ToSandoSearchable</name></name><argument_list pos:line="29" pos:column="120">()</argument_list></call></expr></argument><op:operator pos:line="29" pos:column="122">,</op:operator> <argument><expr><name><name pos:line="29" pos:column="124">Field</name><op:operator pos:line="29" pos:column="129">.</op:operator><name pos:line="29" pos:column="130">Store</name><op:operator pos:line="29" pos:column="135">.</op:operator><name pos:line="29" pos:column="136">YES</name></name></expr></argument><op:operator pos:line="29" pos:column="139">,</op:operator> <argument><expr><name><name pos:line="29" pos:column="141">Field</name><op:operator pos:line="29" pos:column="146">.</op:operator><name pos:line="29" pos:column="147">Index</name><op:operator pos:line="29" pos:column="152">.</op:operator><name pos:line="29" pos:column="153">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">fields</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">Add</name></name><argument_list pos:line="30" pos:column="23">(<argument><expr><op:operator pos:line="30" pos:column="24">new</op:operator> <call><name pos:line="30" pos:column="28">Field</name><argument_list pos:line="30" pos:column="33">(<argument><expr><call><name><name pos:line="30" pos:column="34">SandoField</name><op:operator pos:line="30" pos:column="44">.</op:operator><name pos:line="30" pos:column="45">Modifiers</name><op:operator pos:line="30" pos:column="54">.</op:operator><name pos:line="30" pos:column="55">ToString</name></name><argument_list pos:line="30" pos:column="63">()</argument_list></call></expr></argument><op:operator pos:line="30" pos:column="65">,</op:operator> <argument><expr><name><name pos:line="30" pos:column="67">structElement</name><op:operator pos:line="30" pos:column="80">.</op:operator><name pos:line="30" pos:column="81">Modifiers</name></name></expr></argument><op:operator pos:line="30" pos:column="90">,</op:operator> <argument><expr><name><name pos:line="30" pos:column="92">Field</name><op:operator pos:line="30" pos:column="97">.</op:operator><name pos:line="30" pos:column="98">Store</name><op:operator pos:line="30" pos:column="103">.</op:operator><name pos:line="30" pos:column="104">YES</name></name></expr></argument><op:operator pos:line="30" pos:column="107">,</op:operator> <argument><expr><name><name pos:line="30" pos:column="109">Field</name><op:operator pos:line="30" pos:column="114">.</op:operator><name pos:line="30" pos:column="115">Index</name><op:operator pos:line="30" pos:column="120">.</op:operator><name pos:line="30" pos:column="121">ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">fields</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="34" pos:column="9">public</specifier> <specifier pos:line="34" pos:column="16">override</specifier> <name><name pos:line="34" pos:column="25">object</name><index pos:line="34" pos:column="31">[]</index></name></type> <name pos:line="34" pos:column="34">GetParametersForConstructor</name><parameter_list pos:line="34" pos:column="61">(<param><decl><type><name pos:line="34" pos:column="62">string</name></type> <name pos:line="34" pos:column="69">name</name></decl></param><op:operator pos:line="34" pos:column="73">,</op:operator> <param><decl><type><name pos:line="34" pos:column="75">ProgramElementType</name></type> <name pos:line="34" pos:column="94">programElementType</name></decl></param><op:operator pos:line="34" pos:column="112">,</op:operator> <param><decl><type><name pos:line="34" pos:column="114">string</name></type> <name pos:line="34" pos:column="121">fullFilePath</name></decl></param><op:operator pos:line="34" pos:column="133">,</op:operator> <param><decl><type><name pos:line="34" pos:column="135">int</name></type> <name pos:line="34" pos:column="139">definitionLineNumber</name></decl></param><op:operator pos:line="34" pos:column="159">,</op:operator> <param><decl><type><name pos:line="34" pos:column="161">string</name></type> <name pos:line="34" pos:column="168">snippet</name></decl></param><op:operator pos:line="34" pos:column="175">,</op:operator> <param><decl><type><name pos:line="34" pos:column="177">Document</name></type> <name pos:line="34" pos:column="186">document</name></decl></param>)</parameter_list>
        <block pos:line="35" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">string</name></type> <name pos:line="36" pos:column="20">namespaceName</name> =<init pos:line="36" pos:column="35"> <expr><call><name><name pos:line="36" pos:column="36">document</name><op:operator pos:line="36" pos:column="44">.</op:operator><name pos:line="36" pos:column="45">GetField</name></name><argument_list pos:line="36" pos:column="53">(<argument><expr><call><name><name pos:line="36" pos:column="54">SandoField</name><op:operator pos:line="36" pos:column="64">.</op:operator><name pos:line="36" pos:column="65">Namespace</name><op:operator pos:line="36" pos:column="74">.</op:operator><name pos:line="36" pos:column="75">ToString</name></name><argument_list pos:line="36" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="86">.</op:operator><call><name pos:line="36" pos:column="87">StringValue</name><argument_list pos:line="36" pos:column="98">()</argument_list></call><op:operator pos:line="36" pos:column="100">.</op:operator><call><name pos:line="36" pos:column="101">ToSandoDisplayable</name><argument_list pos:line="36" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">AccessLevel</name></type> <name pos:line="37" pos:column="37">accessLevel</name> =<init pos:line="37" pos:column="50"> <expr><op:operator pos:line="37" pos:column="51">(</op:operator><name pos:line="37" pos:column="52">AccessLevel</name><op:operator pos:line="37" pos:column="63">)</op:operator><call><name><name pos:line="37" pos:column="64">Enum</name><op:operator pos:line="37" pos:column="68">.</op:operator><name pos:line="37" pos:column="69">Parse</name></name><argument_list pos:line="37" pos:column="74">(<argument><expr><call><name pos:line="37" pos:column="75">typeof</name><argument_list pos:line="37" pos:column="81">(<argument><expr><name pos:line="37" pos:column="82">AccessLevel</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="37" pos:column="94">,</op:operator> <argument><expr><call><name><name pos:line="37" pos:column="96">document</name><op:operator pos:line="37" pos:column="104">.</op:operator><name pos:line="37" pos:column="105">GetField</name></name><argument_list pos:line="37" pos:column="113">(<argument><expr><call><name><name pos:line="37" pos:column="114">SandoField</name><op:operator pos:line="37" pos:column="124">.</op:operator><name pos:line="37" pos:column="125">AccessLevel</name><op:operator pos:line="37" pos:column="136">.</op:operator><name pos:line="37" pos:column="137">ToString</name></name><argument_list pos:line="37" pos:column="145">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="37" pos:column="148">.</op:operator><call><name pos:line="37" pos:column="149">StringValue</name><argument_list pos:line="37" pos:column="160">()</argument_list></call></expr></argument><op:operator pos:line="37" pos:column="162">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="37" pos:column="164">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">string</name></type> <name pos:line="38" pos:column="20">body</name> =<init pos:line="38" pos:column="26"> <expr><lit:literal type="string" pos:line="38" pos:column="27">"not stored in index"</lit:literal></expr></init></decl>;</decl_stmt><comment type="line" pos:line="38" pos:column="49">//document.GetField(SandoField.Body.ToString()).StringValue().ToSandoDisplayable();</comment>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">string</name></type> <name pos:line="39" pos:column="20">extendedClasses</name> =<init pos:line="39" pos:column="37"> <expr><call><name><name pos:line="39" pos:column="38">document</name><op:operator pos:line="39" pos:column="46">.</op:operator><name pos:line="39" pos:column="47">GetField</name></name><argument_list pos:line="39" pos:column="55">(<argument><expr><call><name><name pos:line="39" pos:column="56">SandoField</name><op:operator pos:line="39" pos:column="66">.</op:operator><name pos:line="39" pos:column="67">ExtendedClasses</name><op:operator pos:line="39" pos:column="82">.</op:operator><name pos:line="39" pos:column="83">ToString</name></name><argument_list pos:line="39" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="94">.</op:operator><call><name pos:line="39" pos:column="95">StringValue</name><argument_list pos:line="39" pos:column="106">()</argument_list></call><op:operator pos:line="39" pos:column="108">.</op:operator><call><name pos:line="39" pos:column="109">ToSandoDisplayable</name><argument_list pos:line="39" pos:column="127">()</argument_list></call></expr></init></decl>;</decl_stmt>            
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">string</name></type> <name pos:line="40" pos:column="20">modifiers</name> =<init pos:line="40" pos:column="31"> <expr><call><name><name pos:line="40" pos:column="32">document</name><op:operator pos:line="40" pos:column="40">.</op:operator><name pos:line="40" pos:column="41">GetField</name></name><argument_list pos:line="40" pos:column="49">(<argument><expr><call><name><name pos:line="40" pos:column="50">SandoField</name><op:operator pos:line="40" pos:column="60">.</op:operator><name pos:line="40" pos:column="61">Modifiers</name><op:operator pos:line="40" pos:column="70">.</op:operator><name pos:line="40" pos:column="71">ToString</name></name><argument_list pos:line="40" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="82">.</op:operator><call><name pos:line="40" pos:column="83">StringValue</name><argument_list pos:line="40" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="41" pos:column="13">return <expr><op:operator pos:line="41" pos:column="20">new</op:operator> <name><name pos:line="41" pos:column="24">object</name><index pos:line="41" pos:column="30">[]</index></name><block pos:line="41" pos:column="32">{<expr><name pos:line="41" pos:column="33">name</name></expr><op:operator pos:line="41" pos:column="37">,</op:operator> <expr><name pos:line="41" pos:column="39">definitionLineNumber</name></expr><op:operator pos:line="41" pos:column="59">,</op:operator> <expr><name pos:line="41" pos:column="61">fullFilePath</name></expr><op:operator pos:line="41" pos:column="73">,</op:operator> <expr><name pos:line="41" pos:column="75">snippet</name></expr><op:operator pos:line="41" pos:column="82">,</op:operator> <expr><name pos:line="41" pos:column="84">accessLevel</name></expr><op:operator pos:line="41" pos:column="95">,</op:operator> <expr><name pos:line="41" pos:column="97">namespaceName</name></expr><op:operator pos:line="41" pos:column="110">,</op:operator> <expr><name pos:line="41" pos:column="112">body</name></expr><op:operator pos:line="41" pos:column="116">,</op:operator> <expr><name pos:line="41" pos:column="118">extendedClasses</name></expr><op:operator pos:line="41" pos:column="133">,</op:operator> <expr><name pos:line="41" pos:column="135">modifiers</name></expr>}</block></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
