<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\TESTEXTENSIONPOINTS\TestCSharpParser.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Sando</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">ExtensionContracts</name><op:operator pos:line="2" pos:column="31">.</op:operator><name pos:line="2" pos:column="32">ParserContracts</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Sando</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">ExtensionContracts</name><op:operator pos:line="3" pos:column="31">.</op:operator><name pos:line="3" pos:column="32">ProgramElementContracts</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Sando</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">TestExtensionPoints</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">TestCSharpParser</name> <super pos:line="7" pos:column="35">: <name pos:line="7" pos:column="37">IParser</name></super>
    <block pos:line="8" pos:column="5">{
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <name><name pos:line="9" pos:column="16">List</name><argument_list pos:line="9" pos:column="20">&lt;<argument><name pos:line="9" pos:column="21">ProgramElement</name></argument>&gt;</argument_list></name></type> <name pos:line="9" pos:column="37">Parse</name><parameter_list pos:line="9" pos:column="42">(<param><decl><type><name pos:line="9" pos:column="43">string</name></type> <name pos:line="9" pos:column="50">filename</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <return pos:line="11" pos:column="13">return <expr><op:operator pos:line="11" pos:column="20">new</op:operator> <call><name><name pos:line="11" pos:column="24">List</name><argument_list pos:line="11" pos:column="28">&lt;<argument><name pos:line="11" pos:column="29">ProgramElement</name></argument>&gt;</argument_list></name><argument_list pos:line="11" pos:column="44">()</argument_list></call> <block pos:line="11" pos:column="47">{ <expr><op:operator pos:line="11" pos:column="49">new</op:operator> <call><name pos:line="11" pos:column="53">TestElement</name><argument_list pos:line="11" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="11" pos:column="65">"TestCSharpName"</lit:literal></expr></argument><op:operator pos:line="11" pos:column="81">,</op:operator> <argument><expr><lit:literal type="number" pos:line="11" pos:column="83">1</lit:literal></expr></argument><op:operator pos:line="11" pos:column="84">,</op:operator> <argument><expr><name pos:line="11" pos:column="86">filename</name></expr></argument><op:operator pos:line="11" pos:column="94">,</op:operator> <argument><expr><lit:literal type="string" pos:line="11" pos:column="96">"TestElement snippet"</lit:literal></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="14" pos:column="9">// Code changed by JZ: solution monitor integration</comment>
        <comment type="line" pos:line="15" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="16" pos:column="9">/// New Parse method that takes two arguments, due to modification of IParser</comment>
        <comment type="line" pos:line="17" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="18" pos:column="9">/// &lt;param name="fileName"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="19" pos:column="9">/// &lt;param name="sourceElements"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="20" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="21" pos:column="9">public</specifier> <name><name pos:line="21" pos:column="16">List</name><argument_list pos:line="21" pos:column="20">&lt;<argument><name pos:line="21" pos:column="21">ProgramElement</name></argument>&gt;</argument_list></name></type> <name pos:line="21" pos:column="37">Parse</name><parameter_list pos:line="21" pos:column="42">(<param><decl><type><name pos:line="21" pos:column="43">string</name></type> <name pos:line="21" pos:column="50">fileName</name></decl></param><op:operator pos:line="21" pos:column="58">,</op:operator> <param><decl><type><name><name pos:line="21" pos:column="60">System</name><op:operator pos:line="21" pos:column="66">.</op:operator><name pos:line="21" pos:column="67">Xml</name><op:operator pos:line="21" pos:column="70">.</op:operator><name pos:line="21" pos:column="71">Linq</name><op:operator pos:line="21" pos:column="75">.</op:operator><name pos:line="21" pos:column="76">XElement</name></name></type> <name pos:line="21" pos:column="85">sourceElements</name></decl></param>)</parameter_list>
        <block pos:line="22" pos:column="9">{
            <return pos:line="23" pos:column="13">return <expr><call><name pos:line="23" pos:column="20">Parse</name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">fileName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
        <comment type="line" pos:line="25" pos:column="9">// End of code changes</comment>
    }</block></class>
}</block></namespace>
</unit>
