<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\View\TextBoxFocusHelper.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Windows</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Controls</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name pos:line="5" pos:column="11">FocusTestVC</name>
<block pos:line="6" pos:column="1">{
    <comment type="line" pos:line="7" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="8" pos:column="5">/// Implements a feature to select all text within a TextBox when focus is set.</comment>
    <comment type="line" pos:line="9" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="10" pos:column="5">public</specifier> <specifier pos:line="10" pos:column="12">static</specifier> class <name pos:line="10" pos:column="25">TextBoxFocusHelper</name>
    <block pos:line="11" pos:column="5">{

        <cpp:region pos:line="13" pos:column="9">#<cpp:directive pos:line="13" pos:column="10">region</cpp:directive> " Declarations "</cpp:region>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// Whether or not a textbox that is unloaded will automatically be unregistered from this helper.</comment>
        <comment type="line" pos:line="16" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">public</specifier> <specifier pos:line="17" pos:column="16">static</specifier> <name pos:line="17" pos:column="23">bool</name></type> <name pos:line="17" pos:column="28">UnregisterOnUnload</name> <block pos:line="17" pos:column="47">{ <function><name pos:line="17" pos:column="49">get</name>;</function> <function><name pos:line="17" pos:column="54">set</name>;</function> }</block></decl></decl_stmt>

        <comment type="line" pos:line="19" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="20" pos:column="9">/// Contains a list of all textbox controls that this helper has attached to.</comment>
        <comment type="line" pos:line="21" pos:column="9">/// The Boolean value is used in event handling to determine if mouse capture</comment>
        <comment type="line" pos:line="22" pos:column="9">/// should be ignored.</comment>
        <comment type="line" pos:line="23" pos:column="9">/// &lt;/summary&gt;</comment>

        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <specifier pos:line="25" pos:column="17">static</specifier> <name><name pos:line="25" pos:column="24">Dictionary</name><argument_list pos:line="25" pos:column="34">&lt;<argument><name pos:line="25" pos:column="35">TextBox</name></argument>, <argument><name pos:line="25" pos:column="44">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="25" pos:column="50">FocusTextBoxes</name> =<init pos:line="25" pos:column="66"> <expr><op:operator pos:line="25" pos:column="67">new</op:operator> <call><name><name pos:line="25" pos:column="71">Dictionary</name><argument_list pos:line="25" pos:column="81">&lt;<argument><name pos:line="25" pos:column="82">TextBox</name></argument>, <argument><name pos:line="25" pos:column="91">bool</name></argument>&gt;</argument_list></name><argument_list pos:line="25" pos:column="96">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// Delegate used to invoke the OnFocusComplete method.</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// &lt;param name="txt"&gt;The textbox that the OnFocusComplete method is being invoked for.&lt;/param&gt;</comment>
        <function_decl><type><specifier pos:line="30" pos:column="9">private</specifier> <specifier pos:line="30" pos:column="17">delegate</specifier> <name pos:line="30" pos:column="26">void</name></type> <name pos:line="30" pos:column="31">OnFocusCompleteDelegate</name><parameter_list pos:line="30" pos:column="54">(<param><decl><type><name pos:line="30" pos:column="55">TextBox</name></type> <name pos:line="30" pos:column="63">txt</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="32" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="33" pos:column="9">/// Used to invoke the OnFocusCompleteDelegate delegate.</comment>
        <comment type="line" pos:line="34" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">private</specifier> <specifier pos:line="35" pos:column="17">static</specifier> <name pos:line="35" pos:column="24">OnFocusCompleteDelegate</name></type> <name pos:line="35" pos:column="48">OnFocusCompleteInvoker</name> =<init pos:line="35" pos:column="72"> <expr><op:operator pos:line="35" pos:column="73">new</op:operator> <call><name pos:line="35" pos:column="77">OnFocusCompleteDelegate</name><argument_list pos:line="35" pos:column="100">(<argument><expr><name pos:line="35" pos:column="101">OnFocusComplete</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <cpp:endregion pos:line="37" pos:column="9">#<cpp:directive pos:line="37" pos:column="10">endregion</cpp:directive></cpp:endregion>

        <cpp:region pos:line="39" pos:column="9">#<cpp:directive pos:line="39" pos:column="10">region</cpp:directive> " Public Methods "</cpp:region>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// Attaches a TextBox control to the helper.  While a textbox is attached (registered), it will</comment>
        <comment type="line" pos:line="42" pos:column="9">/// automatically select all text when focus is set.</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;param name="txt"&gt;The TextBox control to register.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="45" pos:column="9">public</specifier> <specifier pos:line="45" pos:column="16">static</specifier> <name pos:line="45" pos:column="23">void</name></type> <name pos:line="45" pos:column="28">RegisterFocus</name><parameter_list pos:line="45" pos:column="41">(<param><decl><type><name pos:line="45" pos:column="42">TextBox</name></type> <name pos:line="45" pos:column="50">txt</name></decl></param>)</parameter_list>
        <block pos:line="46" pos:column="9">{
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">txt</name> <op:operator pos:line="47" pos:column="21">==</op:operator> <name pos:line="47" pos:column="24">null</name></expr>)</condition><then pos:line="47" pos:column="29">
                <throw pos:line="48" pos:column="17">throw <expr><op:operator pos:line="48" pos:column="23">new</op:operator> <call><name pos:line="48" pos:column="27">ArgumentNullException</name><argument_list pos:line="48" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="49">"txt"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><call><name><name pos:line="49" pos:column="17">FocusTextBoxes</name><op:operator pos:line="49" pos:column="31">.</op:operator><name pos:line="49" pos:column="32">ContainsKey</name></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">txt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="49" pos:column="49">
                <return pos:line="50" pos:column="17">return;</return></then></if>

            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">FocusTextBoxes</name><op:operator pos:line="52" pos:column="27">.</op:operator><name pos:line="52" pos:column="28">Add</name></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">txt</name></expr></argument><op:operator pos:line="52" pos:column="35">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="52" pos:column="37">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="54" pos:column="13">txt</name><op:operator pos:line="54" pos:column="16">.</op:operator><name pos:line="54" pos:column="17">GotKeyboardFocus</name></name> <op:operator pos:line="54" pos:column="34">+=</op:operator> <name pos:line="54" pos:column="37">TextBox_GotKeyboardFocus</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">txt</name><op:operator pos:line="55" pos:column="16">.</op:operator><name pos:line="55" pos:column="17">GotMouseCapture</name></name> <op:operator pos:line="55" pos:column="33">+=</op:operator> <name pos:line="55" pos:column="36">TextBox_GotMouseCapture</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">txt</name><op:operator pos:line="56" pos:column="16">.</op:operator><name pos:line="56" pos:column="17">Unloaded</name></name> <op:operator pos:line="56" pos:column="26">+=</op:operator> <name pos:line="56" pos:column="29">TextBox_Unloaded</name></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="59" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="60" pos:column="9">/// Removes a TextBox control from the helper.  The textbox will no longer</comment>
        <comment type="line" pos:line="61" pos:column="9">/// automatically select all text when focus is set.</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;param name="txt"&gt;The TextBox control to unregister.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="64" pos:column="9">public</specifier> <specifier pos:line="64" pos:column="16">static</specifier> <name pos:line="64" pos:column="23">void</name></type> <name pos:line="64" pos:column="28">UnregisterFocus</name><parameter_list pos:line="64" pos:column="43">(<param><decl><type><name pos:line="64" pos:column="44">TextBox</name></type> <name pos:line="64" pos:column="52">txt</name></decl></param>)</parameter_list>
        <block pos:line="65" pos:column="9">{
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">txt</name> <op:operator pos:line="66" pos:column="21">==</op:operator> <name pos:line="66" pos:column="24">null</name></expr>)</condition><then pos:line="66" pos:column="29">
                <throw pos:line="67" pos:column="17">throw <expr><op:operator pos:line="67" pos:column="23">new</op:operator> <call><name pos:line="67" pos:column="27">ArgumentNullException</name><argument_list pos:line="67" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="49">"txt"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

            <try pos:line="69" pos:column="13">try
            <block pos:line="70" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="71" pos:column="17">txt</name><op:operator pos:line="71" pos:column="20">.</op:operator><name pos:line="71" pos:column="21">GotKeyboardFocus</name></name> <op:operator pos:line="71" pos:column="38">-=</op:operator> <name pos:line="71" pos:column="41">TextBox_GotKeyboardFocus</name></expr>;</expr_stmt>
            }</block>
            <catch pos:line="73" pos:column="13">catch <block pos:line="73" pos:column="19">{ }</block></catch></try>

            <try pos:line="75" pos:column="13">try
            <block pos:line="76" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">txt</name><op:operator pos:line="77" pos:column="20">.</op:operator><name pos:line="77" pos:column="21">GotMouseCapture</name></name> <op:operator pos:line="77" pos:column="37">-=</op:operator> <name pos:line="77" pos:column="40">TextBox_GotMouseCapture</name></expr>;</expr_stmt>
            }</block>
            <catch pos:line="79" pos:column="13">catch <block pos:line="79" pos:column="19">{ }</block></catch></try>

            <try pos:line="81" pos:column="13">try
            <block pos:line="82" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="83" pos:column="17">txt</name><op:operator pos:line="83" pos:column="20">.</op:operator><name pos:line="83" pos:column="21">Unloaded</name></name> <op:operator pos:line="83" pos:column="30">-=</op:operator> <name pos:line="83" pos:column="33">TextBox_Unloaded</name></expr>;</expr_stmt>
            }</block>
            <catch pos:line="85" pos:column="13">catch <block pos:line="85" pos:column="19">{ }</block></catch></try>

            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><call><name><name pos:line="87" pos:column="17">FocusTextBoxes</name><op:operator pos:line="87" pos:column="31">.</op:operator><name pos:line="87" pos:column="32">ContainsKey</name></name><argument_list pos:line="87" pos:column="43">(<argument><expr><name pos:line="87" pos:column="44">txt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="87" pos:column="49">
                <expr_stmt><expr><call><name><name pos:line="88" pos:column="17">FocusTextBoxes</name><op:operator pos:line="88" pos:column="31">.</op:operator><name pos:line="88" pos:column="32">Remove</name></name><argument_list pos:line="88" pos:column="38">(<argument><expr><name pos:line="88" pos:column="39">txt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>
        <cpp:endregion pos:line="90" pos:column="9">#<cpp:directive pos:line="90" pos:column="10">endregion</cpp:directive></cpp:endregion>

        <cpp:region pos:line="92" pos:column="9">#<cpp:directive pos:line="92" pos:column="10">region</cpp:directive> " TextBox Event Handlers "</cpp:region>
        <comment type="line" pos:line="93" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="94" pos:column="9">/// Handles TextBox.GotKeyboardFocus event.</comment>
        <comment type="line" pos:line="95" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="96" pos:column="9">private</specifier> <specifier pos:line="96" pos:column="17">static</specifier> <name pos:line="96" pos:column="24">void</name></type> <name pos:line="96" pos:column="29">TextBox_GotKeyboardFocus</name><parameter_list pos:line="96" pos:column="53">(<param><decl><type><name pos:line="96" pos:column="54">object</name></type> <name pos:line="96" pos:column="61">sender</name></decl></param><op:operator pos:line="96" pos:column="67">,</op:operator> <param><decl><type><name><name pos:line="96" pos:column="69">System</name><op:operator pos:line="96" pos:column="75">.</op:operator><name pos:line="96" pos:column="76">Windows</name><op:operator pos:line="96" pos:column="83">.</op:operator><name pos:line="96" pos:column="84">Input</name><op:operator pos:line="96" pos:column="89">.</op:operator><name pos:line="96" pos:column="90">KeyboardFocusChangedEventArgs</name></name></type> <name pos:line="96" pos:column="120">e</name></decl></param>)</parameter_list>
        <block pos:line="97" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="98" pos:column="13">TextBox</name></type> <name pos:line="98" pos:column="21">txt</name> =<init pos:line="98" pos:column="26"> <expr><name pos:line="98" pos:column="27">sender</name> <op:operator pos:line="98" pos:column="34">as</op:operator> <name pos:line="98" pos:column="37">TextBox</name></expr></init></decl>;</decl_stmt>
            <if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><name pos:line="99" pos:column="17">txt</name> <op:operator pos:line="99" pos:column="21">==</op:operator> <name pos:line="99" pos:column="24">null</name></expr>)</condition><then pos:line="99" pos:column="29">
                <return pos:line="100" pos:column="17">return;</return></then></if>
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><op:operator pos:line="101" pos:column="17">!</op:operator><call><name><name pos:line="101" pos:column="18">FocusTextBoxes</name><op:operator pos:line="101" pos:column="32">.</op:operator><name pos:line="101" pos:column="33">ContainsKey</name></name><argument_list pos:line="101" pos:column="44">(<argument><expr><name pos:line="101" pos:column="45">txt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="101" pos:column="50">
                <return pos:line="102" pos:column="17">return;</return></then></if>

            <comment type="line" pos:line="104" pos:column="13">// Select all of the text in the control.</comment>
            <expr_stmt><expr><call><name><name pos:line="105" pos:column="13">txt</name><op:operator pos:line="105" pos:column="16">.</op:operator><name pos:line="105" pos:column="17">SelectAll</name></name><argument_list pos:line="105" pos:column="26">()</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="107" pos:column="13">// Allow the TextBox.GotMouseCapture custom code to execute.</comment>
            <expr_stmt><expr><name><name pos:line="108" pos:column="13">FocusTextBoxes</name><index pos:line="108" pos:column="27">[<expr><name pos:line="108" pos:column="28">txt</name></expr>]</index></name> <op:operator pos:line="108" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="108" pos:column="35">true</lit:literal></expr>;</expr_stmt>

            <comment type="line" pos:line="110" pos:column="13">// Invoke the OnFocusComplete method.  The method should run as the last step</comment>
            <comment type="line" pos:line="111" pos:column="13">// of the textbox focusing logic.</comment>
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">txt</name><op:operator pos:line="112" pos:column="16">.</op:operator><name pos:line="112" pos:column="17">Dispatcher</name><op:operator pos:line="112" pos:column="27">.</op:operator><name pos:line="112" pos:column="28">BeginInvoke</name></name><argument_list pos:line="112" pos:column="39">(<argument><expr><name pos:line="112" pos:column="40">OnFocusCompleteInvoker</name></expr></argument><op:operator pos:line="112" pos:column="62">,</op:operator> <argument><expr><name><name pos:line="112" pos:column="64">System</name><op:operator pos:line="112" pos:column="70">.</op:operator><name pos:line="112" pos:column="71">Windows</name><op:operator pos:line="112" pos:column="78">.</op:operator><name pos:line="112" pos:column="79">Threading</name><op:operator pos:line="112" pos:column="88">.</op:operator><name pos:line="112" pos:column="89">DispatcherPriority</name><op:operator pos:line="112" pos:column="107">.</op:operator><name pos:line="112" pos:column="108">Input</name></name></expr></argument><op:operator pos:line="112" pos:column="113">,</op:operator> <argument><expr><name pos:line="112" pos:column="115">txt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="115" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="116" pos:column="9">/// Handles TextBox.GotMouseCapture event.</comment>
        <comment type="line" pos:line="117" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="118" pos:column="9">private</specifier> <specifier pos:line="118" pos:column="17">static</specifier> <name pos:line="118" pos:column="24">void</name></type> <name pos:line="118" pos:column="29">TextBox_GotMouseCapture</name><parameter_list pos:line="118" pos:column="52">(<param><decl><type><name pos:line="118" pos:column="53">object</name></type> <name pos:line="118" pos:column="60">sender</name></decl></param><op:operator pos:line="118" pos:column="66">,</op:operator> <param><decl><type><name><name pos:line="118" pos:column="68">System</name><op:operator pos:line="118" pos:column="74">.</op:operator><name pos:line="118" pos:column="75">Windows</name><op:operator pos:line="118" pos:column="82">.</op:operator><name pos:line="118" pos:column="83">Input</name><op:operator pos:line="118" pos:column="88">.</op:operator><name pos:line="118" pos:column="89">MouseEventArgs</name></name></type> <name pos:line="118" pos:column="104">e</name></decl></param>)</parameter_list>
        <block pos:line="119" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="120" pos:column="13">TextBox</name></type> <name pos:line="120" pos:column="21">txt</name> =<init pos:line="120" pos:column="26"> <expr><name pos:line="120" pos:column="27">sender</name> <op:operator pos:line="120" pos:column="34">as</op:operator> <name pos:line="120" pos:column="37">TextBox</name></expr></init></decl>;</decl_stmt>
            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><name pos:line="121" pos:column="17">txt</name> <op:operator pos:line="121" pos:column="21">==</op:operator> <name pos:line="121" pos:column="24">null</name></expr>)</condition><then pos:line="121" pos:column="29">
                <return pos:line="122" pos:column="17">return;</return></then></if>
            <if pos:line="123" pos:column="13">if <condition pos:line="123" pos:column="16">(<expr><op:operator pos:line="123" pos:column="17">!</op:operator><call><name><name pos:line="123" pos:column="18">FocusTextBoxes</name><op:operator pos:line="123" pos:column="32">.</op:operator><name pos:line="123" pos:column="33">ContainsKey</name></name><argument_list pos:line="123" pos:column="44">(<argument><expr><name pos:line="123" pos:column="45">txt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="123" pos:column="50">
                <return pos:line="124" pos:column="17">return;</return></then></if>

            <comment type="line" pos:line="126" pos:column="13">// Check that this code should execute.</comment>

            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><name><name pos:line="128" pos:column="17">FocusTextBoxes</name><index pos:line="128" pos:column="31">[<expr><name pos:line="128" pos:column="32">txt</name></expr>]</index></name></expr>)</condition><then pos:line="128" pos:column="37">
            <block pos:line="129" pos:column="13">{
                <comment type="line" pos:line="130" pos:column="17">// Select all of the text in the control.</comment>
                <comment type="line" pos:line="131" pos:column="17">// It would seem this call is redundant however it is necessary to handle the case where the</comment>
                <comment type="line" pos:line="132" pos:column="17">// user has clicked the mouse outside of the text region and within the textbox (in other words,</comment>
                <comment type="line" pos:line="133" pos:column="17">// the user clicked within the whitespace).</comment>
                <expr_stmt><expr><call><name><name pos:line="134" pos:column="17">txt</name><op:operator pos:line="134" pos:column="20">.</op:operator><name pos:line="134" pos:column="21">SelectAll</name></name><argument_list pos:line="134" pos:column="30">()</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="136" pos:column="17">// Release mouse capture will prevent the textbox from unselecting the text during the TextBox.MouseUp event.</comment>
                <expr_stmt><expr><call><name><name pos:line="137" pos:column="17">txt</name><op:operator pos:line="137" pos:column="20">.</op:operator><name pos:line="137" pos:column="21">ReleaseMouseCapture</name></name><argument_list pos:line="137" pos:column="40">()</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="139" pos:column="17">// Prevent this function from executing again (until the next focus event).</comment>
                <comment type="line" pos:line="140" pos:column="17">// If this code were allowed to continuously execute, the user would not be able to change the selection.</comment>
                <expr_stmt><expr><name><name pos:line="141" pos:column="17">FocusTextBoxes</name><index pos:line="141" pos:column="31">[<expr><name pos:line="141" pos:column="32">txt</name></expr>]</index></name> <op:operator pos:line="141" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="141" pos:column="39">false</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="145" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="146" pos:column="9">/// Prevent the TextBox.GotMouseCapture custom code from firing until the next focus event.</comment>
        <comment type="line" pos:line="147" pos:column="9">/// This method should be invoked after the TextBox has finalized its focus logic.</comment>
        <comment type="line" pos:line="148" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="149" pos:column="9">/// &lt;param name="helper"&gt;The TextBoxFocusHelper that invoked this method.&lt;/param&gt;</comment>
        <comment type="line" pos:line="150" pos:column="9">/// &lt;param name="txt"&gt;The TextBox that completed the focus logic.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="151" pos:column="9">private</specifier> <specifier pos:line="151" pos:column="17">static</specifier> <name pos:line="151" pos:column="24">void</name></type> <name pos:line="151" pos:column="29">OnFocusComplete</name><parameter_list pos:line="151" pos:column="44">(<param><decl><type><name pos:line="151" pos:column="45">TextBox</name></type> <name pos:line="151" pos:column="53">txt</name></decl></param>)</parameter_list>
        <block pos:line="152" pos:column="9">{
            <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><op:operator pos:line="153" pos:column="17">!</op:operator><call><name><name pos:line="153" pos:column="18">FocusTextBoxes</name><op:operator pos:line="153" pos:column="32">.</op:operator><name pos:line="153" pos:column="33">ContainsKey</name></name><argument_list pos:line="153" pos:column="44">(<argument><expr><name pos:line="153" pos:column="45">txt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="153" pos:column="50">
                <return pos:line="154" pos:column="17">return;</return></then></if>

            <expr_stmt><expr><name><name pos:line="156" pos:column="13">FocusTextBoxes</name><index pos:line="156" pos:column="27">[<expr><name pos:line="156" pos:column="28">txt</name></expr>]</index></name> <op:operator pos:line="156" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="156" pos:column="35">false</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="159" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="160" pos:column="9">/// Handles TextBox.Unloaded event.</comment>
        <comment type="line" pos:line="161" pos:column="9">/// Unregisters the textbox from this helper if UnregisterOnUnload is enabled,</comment>
        <comment type="line" pos:line="162" pos:column="9">/// otherwise does nothing.</comment>
        <comment type="line" pos:line="163" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="164" pos:column="9">private</specifier> <specifier pos:line="164" pos:column="17">static</specifier> <name pos:line="164" pos:column="24">void</name></type> <name pos:line="164" pos:column="29">TextBox_Unloaded</name><parameter_list pos:line="164" pos:column="45">(<param><decl><type><name pos:line="164" pos:column="46">object</name></type> <name pos:line="164" pos:column="53">sender</name></decl></param><op:operator pos:line="164" pos:column="59">,</op:operator> <param><decl><type><name><name pos:line="164" pos:column="61">System</name><op:operator pos:line="164" pos:column="67">.</op:operator><name pos:line="164" pos:column="68">Windows</name><op:operator pos:line="164" pos:column="75">.</op:operator><name pos:line="164" pos:column="76">RoutedEventArgs</name></name></type> <name pos:line="164" pos:column="92">e</name></decl></param>)</parameter_list>
        <block pos:line="165" pos:column="9">{
            <if pos:line="166" pos:column="13">if <condition pos:line="166" pos:column="16">(<expr><op:operator pos:line="166" pos:column="17">!</op:operator><name pos:line="166" pos:column="18">UnregisterOnUnload</name></expr>)</condition><then pos:line="166" pos:column="37">
                <return pos:line="167" pos:column="17">return;</return></then></if>

            <decl_stmt><decl><type><name pos:line="169" pos:column="13">TextBox</name></type> <name pos:line="169" pos:column="21">txt</name> =<init pos:line="169" pos:column="26"> <expr><name pos:line="169" pos:column="27">sender</name> <op:operator pos:line="169" pos:column="34">as</op:operator> <name pos:line="169" pos:column="37">TextBox</name></expr></init></decl>;</decl_stmt>
            <if pos:line="170" pos:column="13">if <condition pos:line="170" pos:column="16">(<expr><name pos:line="170" pos:column="17">txt</name> <op:operator pos:line="170" pos:column="21">==</op:operator> <name pos:line="170" pos:column="24">null</name></expr>)</condition><then pos:line="170" pos:column="29">
                <return pos:line="171" pos:column="17">return;</return></then></if>

            <expr_stmt><expr><call><name pos:line="173" pos:column="13">UnregisterFocus</name><argument_list pos:line="173" pos:column="28">(<argument><expr><name pos:line="173" pos:column="29">txt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <cpp:endregion pos:line="176" pos:column="9">#<cpp:directive pos:line="176" pos:column="10">endregion</cpp:directive></cpp:endregion>

    }</block></class>
}</block></namespace></unit>
