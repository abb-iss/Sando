<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\USDASHE1\Documents\Visual Studio 2012\Projects\sandoHead\UI\UI\UIPackage.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">ComponentModel</name><op:operator pos:line="4" pos:column="28">.</op:operator><name pos:line="4" pos:column="29">Design</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Globalization</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">IO</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Runtime</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">InteropServices</name></name>;</using>
<comment type="line" pos:line="8" pos:column="1">// JZ: SrcMLService Integration</comment>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">ABB</name><op:operator pos:line="9" pos:column="10">.</op:operator><name pos:line="9" pos:column="11">SrcML</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">VisualStudio</name><op:operator pos:line="9" pos:column="29">.</op:operator><name pos:line="9" pos:column="30">SolutionMonitor</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">ABB</name><op:operator pos:line="10" pos:column="10">.</op:operator><name pos:line="10" pos:column="11">SrcML</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">ABB</name><op:operator pos:line="11" pos:column="10">.</op:operator><name pos:line="11" pos:column="11">SrcML</name><op:operator pos:line="11" pos:column="16">.</op:operator><name pos:line="11" pos:column="17">VisualStudio</name><op:operator pos:line="11" pos:column="29">.</op:operator><name pos:line="11" pos:column="30">SrcMLService</name></name>;</using>
<comment type="line" pos:line="12" pos:column="1">// End of code changes</comment>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Configuration</name><op:operator pos:line="13" pos:column="20">.</op:operator><name pos:line="13" pos:column="21">OptionsPages</name></name>;</using>
<using pos:line="14" pos:column="1">using <name pos:line="14" pos:column="7">EnvDTE</name>;</using>
<using pos:line="15" pos:column="1">using <name pos:line="15" pos:column="7">EnvDTE80</name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Lucene</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Net</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">Analysis</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Lucene</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Net</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">Analysis</name><op:operator pos:line="17" pos:column="26">.</op:operator><name pos:line="17" pos:column="27">Snowball</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">Sando</name><op:operator pos:line="18" pos:column="12">.</op:operator><name pos:line="18" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">Sando</name><op:operator pos:line="19" pos:column="12">.</op:operator><name pos:line="19" pos:column="13">Indexer</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">Sando</name><op:operator pos:line="20" pos:column="12">.</op:operator><name pos:line="20" pos:column="13">Indexer</name><op:operator pos:line="20" pos:column="20">.</op:operator><name pos:line="20" pos:column="21">IndexFiltering</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">Sando</name><op:operator pos:line="21" pos:column="12">.</op:operator><name pos:line="21" pos:column="13">UI</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">Options</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">Microsoft</name><op:operator pos:line="22" pos:column="16">.</op:operator><name pos:line="22" pos:column="17">VisualStudio</name><op:operator pos:line="22" pos:column="29">.</op:operator><name pos:line="22" pos:column="30">Shell</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">Sando</name><op:operator pos:line="23" pos:column="12">.</op:operator><name pos:line="23" pos:column="13">Core</name><op:operator pos:line="23" pos:column="17">.</op:operator><name pos:line="23" pos:column="18">Extensions</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">Sando</name><op:operator pos:line="24" pos:column="12">.</op:operator><name pos:line="24" pos:column="13">Core</name><op:operator pos:line="24" pos:column="17">.</op:operator><name pos:line="24" pos:column="18">Extensions</name><op:operator pos:line="24" pos:column="28">.</op:operator><name pos:line="24" pos:column="29">Configuration</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">Sando</name><op:operator pos:line="25" pos:column="12">.</op:operator><name pos:line="25" pos:column="13">Core</name><op:operator pos:line="25" pos:column="17">.</op:operator><name pos:line="25" pos:column="18">Extensions</name><op:operator pos:line="25" pos:column="28">.</op:operator><name pos:line="25" pos:column="29">Logging</name></name>;</using>
<using pos:line="26" pos:column="1">using <name><name pos:line="26" pos:column="7">Sando</name><op:operator pos:line="26" pos:column="12">.</op:operator><name pos:line="26" pos:column="13">Core</name><op:operator pos:line="26" pos:column="17">.</op:operator><name pos:line="26" pos:column="18">Tools</name></name>;</using>
<using pos:line="27" pos:column="1">using <name><name pos:line="27" pos:column="7">Sando</name><op:operator pos:line="27" pos:column="12">.</op:operator><name pos:line="27" pos:column="13">Indexer</name><op:operator pos:line="27" pos:column="20">.</op:operator><name pos:line="27" pos:column="21">Searching</name></name>;</using>
<using pos:line="28" pos:column="1">using <name><name pos:line="28" pos:column="7">Sando</name><op:operator pos:line="28" pos:column="12">.</op:operator><name pos:line="28" pos:column="13">Parser</name></name>;</using>
<using pos:line="29" pos:column="1">using <name><name pos:line="29" pos:column="7">Sando</name><op:operator pos:line="29" pos:column="12">.</op:operator><name pos:line="29" pos:column="13">SearchEngine</name></name>;</using>
<using pos:line="30" pos:column="1">using <name><name pos:line="30" pos:column="7">Sando</name><op:operator pos:line="30" pos:column="12">.</op:operator><name pos:line="30" pos:column="13">UI</name><op:operator pos:line="30" pos:column="15">.</op:operator><name pos:line="30" pos:column="16">Monitoring</name></name>;</using>
<using pos:line="31" pos:column="1">using <name><name pos:line="31" pos:column="7">Sando</name><op:operator pos:line="31" pos:column="12">.</op:operator><name pos:line="31" pos:column="13">UI</name><op:operator pos:line="31" pos:column="15">.</op:operator><name pos:line="31" pos:column="16">View</name></name>;</using>
<using pos:line="32" pos:column="1">using <name><name pos:line="32" pos:column="7">Sando</name><op:operator pos:line="32" pos:column="12">.</op:operator><name pos:line="32" pos:column="13">Indexer</name><op:operator pos:line="32" pos:column="20">.</op:operator><name pos:line="32" pos:column="21">IndexState</name></name>;</using>
<using pos:line="33" pos:column="1">using <name><name pos:line="33" pos:column="7">Sando</name><op:operator pos:line="33" pos:column="12">.</op:operator><name pos:line="33" pos:column="13">Recommender</name></name>;</using>
<using pos:line="34" pos:column="1">using <name><name pos:line="34" pos:column="7">System</name><op:operator pos:line="34" pos:column="13">.</op:operator><name pos:line="34" pos:column="14">Reflection</name></name>;</using>



<namespace pos:line="38" pos:column="1">namespace <name><name pos:line="38" pos:column="11">Sando</name><op:operator pos:line="38" pos:column="16">.</op:operator><name pos:line="38" pos:column="17">UI</name></name>
<block pos:line="39" pos:column="1">{
    <comment type="line" pos:line="40" pos:column="5">/// &lt;summary&gt; </comment>
    <comment type="line" pos:line="41" pos:column="5">/// This is the class that implements the package exposed by this assembly.</comment>
    <comment type="line" pos:line="42" pos:column="5">//</comment>/
    <comment type="line" pos:line="43" pos:column="5">/// The minimum requirement for a class to be considered a valid package for Visual Studio</comment>
    <comment type="line" pos:line="44" pos:column="5">/// is to implement the IVsPackage interface and register itself with the shell.</comment>
    <comment type="line" pos:line="45" pos:column="5">/// This package uses the helper classes defined inside the Managed Package Framework (MPF)</comment>
    <comment type="line" pos:line="46" pos:column="5">/// to do it: it derives from the Package class that provides the implementation of the </comment>
    <comment type="line" pos:line="47" pos:column="5">/// IVsPackage interface and uses the registration attributes defined in the framework to </comment>
    <comment type="line" pos:line="48" pos:column="5">/// register itself and its components with the shell.</comment>
    <comment type="line" pos:line="49" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="50" pos:column="5">// This attribute tells the PkgDef creation utility (CreatePkgDef.exe) that this class is</comment>
    <comment type="line" pos:line="51" pos:column="5">// a package.</comment>
    <class><attribute pos:line="52" pos:column="5">[<expr><call><name pos:line="52" pos:column="6">PackageRegistration</name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">UseManagedResourcesOnly</name> <op:operator pos:line="52" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="52" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <comment type="line" pos:line="53" pos:column="5">// This attribute is used to register the informations needed to show the this package</comment>
    <comment type="line" pos:line="54" pos:column="5">// in the Help/About dialog of Visual Studio.</comment>
    <attribute pos:line="55" pos:column="5">[<expr><call><name pos:line="55" pos:column="6">InstalledProductRegistration</name><argument_list pos:line="55" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="35">"#110"</lit:literal></expr></argument><op:operator pos:line="55" pos:column="41">,</op:operator> <argument><expr><lit:literal type="string" pos:line="55" pos:column="43">"#112"</lit:literal></expr></argument><op:operator pos:line="55" pos:column="49">,</op:operator> <argument><expr><lit:literal type="string" pos:line="55" pos:column="51">"1.0"</lit:literal></expr></argument><op:operator pos:line="55" pos:column="56">,</op:operator> <argument><expr><name pos:line="55" pos:column="58">IconResourceID</name> <op:operator pos:line="55" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="55" pos:column="75">400</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <comment type="line" pos:line="56" pos:column="5">// This attribute is needed to let the shell know that this package exposes some menus.</comment>
    <attribute pos:line="57" pos:column="5">[<expr><call><name pos:line="57" pos:column="6">ProvideMenuResource</name><argument_list pos:line="57" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="26">"Menus.ctmenu"</lit:literal></expr></argument><op:operator pos:line="57" pos:column="40">,</op:operator> <argument><expr><lit:literal type="number" pos:line="57" pos:column="42">1</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <comment type="line" pos:line="58" pos:column="5">// This attribute registers a tool window exposed by this package.</comment>
    <attribute pos:line="59" pos:column="5">[<expr><call><name pos:line="59" pos:column="6">ProvideToolWindow</name><argument_list pos:line="59" pos:column="23">(<argument><expr><call><name pos:line="59" pos:column="24">typeof</name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">SearchToolWindow</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="59" pos:column="48">,</op:operator> <argument><expr><name pos:line="59" pos:column="50">Transient</name> <op:operator pos:line="59" pos:column="60">=</op:operator> <lit:literal type="boolean" pos:line="59" pos:column="62">false</lit:literal></expr></argument><op:operator pos:line="59" pos:column="67">,</op:operator> <argument><expr><name pos:line="59" pos:column="69">MultiInstances</name> <op:operator pos:line="59" pos:column="84">=</op:operator> <lit:literal type="boolean" pos:line="59" pos:column="86">false</lit:literal></expr></argument><op:operator pos:line="59" pos:column="91">,</op:operator> <argument><expr><name pos:line="59" pos:column="93">Style</name> <op:operator pos:line="59" pos:column="99">=</op:operator> <name><name pos:line="59" pos:column="101">VsDockStyle</name><op:operator pos:line="59" pos:column="112">.</op:operator><name pos:line="59" pos:column="113">Tabbed</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
    
    <attribute pos:line="61" pos:column="5">[<expr><call><name pos:line="61" pos:column="6">Guid</name><argument_list pos:line="61" pos:column="10">(<argument><expr><name><name pos:line="61" pos:column="11">GuidList</name><op:operator pos:line="61" pos:column="19">.</op:operator><name pos:line="61" pos:column="20">guidUIPkgString</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
	<comment type="line" pos:line="62" pos:column="9">// This attribute starts up our extension early so that it can listen to solution events    </comment>
	<attribute pos:line="63" pos:column="9">[<expr><call><name pos:line="63" pos:column="10">ProvideAutoLoad</name><argument_list pos:line="63" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="26">"ADFC4E64-0397-11D1-9F4E-00A0C911004F"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <comment type="line" pos:line="64" pos:column="5">// Start when solution exists</comment>
    <comment type="line" pos:line="65" pos:column="5">//[ProvideAutoLoad("f1536ef8-92ec-443c-9ed7-fdadf150da82")]    </comment>
	<attribute pos:line="66" pos:column="9">[<expr><call><name pos:line="66" pos:column="10">ProvideOptionPage</name><argument_list pos:line="66" pos:column="27">(<argument><expr><call><name pos:line="66" pos:column="28">typeof</name><argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">SandoDialogPage</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="66" pos:column="51">,</op:operator> <argument><expr><lit:literal type="string" pos:line="66" pos:column="53">"Sando"</lit:literal></expr></argument><op:operator pos:line="66" pos:column="60">,</op:operator> <argument><expr><lit:literal type="string" pos:line="66" pos:column="62">"General"</lit:literal></expr></argument><op:operator pos:line="66" pos:column="71">,</op:operator> <argument><expr><lit:literal type="number" pos:line="66" pos:column="73">1000</lit:literal></expr></argument><op:operator pos:line="66" pos:column="77">,</op:operator> <argument><expr><lit:literal type="number" pos:line="66" pos:column="79">1001</lit:literal></expr></argument><op:operator pos:line="66" pos:column="83">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="66" pos:column="85">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
	<attribute pos:line="67" pos:column="9">[<expr><call><name pos:line="67" pos:column="10">ProvideProfile</name><argument_list pos:line="67" pos:column="24">(<argument><expr><call><name pos:line="67" pos:column="25">typeof</name><argument_list pos:line="67" pos:column="31">(<argument><expr><name pos:line="67" pos:column="32">SandoDialogPage</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="67" pos:column="48">,</op:operator> <argument><expr><lit:literal type="string" pos:line="67" pos:column="50">"Sando"</lit:literal></expr></argument><op:operator pos:line="67" pos:column="57">,</op:operator> <argument><expr><lit:literal type="string" pos:line="67" pos:column="59">"General"</lit:literal></expr></argument><op:operator pos:line="67" pos:column="68">,</op:operator> <argument><expr><lit:literal type="number" pos:line="67" pos:column="70">1002</lit:literal></expr></argument><op:operator pos:line="67" pos:column="74">,</op:operator> <argument><expr><lit:literal type="number" pos:line="67" pos:column="76">1003</lit:literal></expr></argument><op:operator pos:line="67" pos:column="80">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="67" pos:column="82">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="68" pos:column="5">public</specifier> <specifier pos:line="68" pos:column="12">sealed</specifier> class <name pos:line="68" pos:column="25">UIPackage</name> <super pos:line="68" pos:column="35">: <name pos:line="68" pos:column="37">Package</name>, <name pos:line="68" pos:column="46">IToolWindowFinder</name></super>
    <block pos:line="69" pos:column="5">{
        <comment type="line" pos:line="70" pos:column="9">// JZ: SrcMLService Integration</comment>
        <comment type="line" pos:line="71" pos:column="9">//private ABB.SrcML.VisualStudio.SolutionMonitor.SolutionMonitor _currentMonitor;</comment>
        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">private</specifier> <name pos:line="72" pos:column="17">SrcMLArchive</name></type> <name pos:line="72" pos:column="30">_srcMLArchive</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="73" pos:column="9">private</specifier> <name pos:line="73" pos:column="17">ISrcMLGlobalService</name></type> <name pos:line="73" pos:column="37">srcMLService</name></decl>;</decl_stmt>
        <comment type="line" pos:line="74" pos:column="9">// End of code changes</comment>

    	<decl_stmt><decl><type><specifier pos:line="76" pos:column="9">private</specifier> <name pos:line="76" pos:column="17">SolutionEvents</name></type> <name pos:line="76" pos:column="32">_solutionEvents</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="77" pos:column="17">private</specifier> <name pos:line="77" pos:column="25">ExtensionPointsConfiguration</name></type> <name pos:line="77" pos:column="54">_extensionPointsConfiguration</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="78" pos:column="9">private</specifier> <name pos:line="78" pos:column="17">DTEEvents</name></type> <name pos:line="78" pos:column="27">_dteEvents</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="79" pos:column="9">private</specifier> <name pos:line="79" pos:column="17">ViewManager</name></type> <name pos:line="79" pos:column="29">_viewManager</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="80" pos:column="17">private</specifier> <name pos:line="80" pos:column="25">SolutionReloadEventListener</name></type> <name pos:line="80" pos:column="53">_listener</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="81" pos:column="9">private</specifier> <name pos:line="81" pos:column="17">WindowEvents</name></type> <name pos:line="81" pos:column="30">_windowEvents</name></decl>;</decl_stmt>

        <comment type="line" pos:line="83" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="84" pos:column="9">/// Default constructor of the package.</comment>
        <comment type="line" pos:line="85" pos:column="9">/// Inside this method you can place any initialization code that does not require </comment>
        <comment type="line" pos:line="86" pos:column="9">/// any Visual Studio service because at this point the package object is created but </comment>
        <comment type="line" pos:line="87" pos:column="9">/// not sited yet inside Visual Studio environment. The place to do all the other </comment>
        <comment type="line" pos:line="88" pos:column="9">/// initialization is the Initialize method.</comment>
        <comment type="line" pos:line="89" pos:column="9">/// &lt;/summary&gt;</comment>
        <constructor><specifier pos:line="90" pos:column="9">public</specifier> <name pos:line="90" pos:column="16">UIPackage</name><parameter_list pos:line="90" pos:column="25">()</parameter_list>
        <block pos:line="91" pos:column="9">{            
            <expr_stmt><expr><call><name><name pos:line="92" pos:column="13">PathManager</name><op:operator pos:line="92" pos:column="24">.</op:operator><name pos:line="92" pos:column="25">Create</name></name><argument_list pos:line="92" pos:column="31">(<argument><expr><call><name><name pos:line="92" pos:column="32">Assembly</name><op:operator pos:line="92" pos:column="40">.</op:operator><name pos:line="92" pos:column="41">GetAssembly</name></name><argument_list pos:line="92" pos:column="52">(<argument><expr><call><name pos:line="92" pos:column="53">typeof</name><argument_list pos:line="92" pos:column="59">(<argument><expr><name pos:line="92" pos:column="60">UIPackage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="92" pos:column="71">.</op:operator><name pos:line="92" pos:column="72">Location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="93" pos:column="13">FileLogger</name><op:operator pos:line="93" pos:column="23">.</op:operator><name pos:line="93" pos:column="24">SetupDefautlFileLogger</name></name><argument_list pos:line="93" pos:column="46">(<argument><expr><call><name><name pos:line="93" pos:column="47">PathManager</name><op:operator pos:line="93" pos:column="58">.</op:operator><name pos:line="93" pos:column="59">Instance</name><op:operator pos:line="93" pos:column="67">.</op:operator><name pos:line="93" pos:column="68">GetExtensionRoot</name></name><argument_list pos:line="93" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">FileLogger</name><op:operator pos:line="94" pos:column="23">.</op:operator><name pos:line="94" pos:column="24">DefaultLogger</name><op:operator pos:line="94" pos:column="37">.</op:operator><name pos:line="94" pos:column="38">Info</name></name><argument_list pos:line="94" pos:column="42">(<argument><expr><call><name><name pos:line="94" pos:column="43">string</name><op:operator pos:line="94" pos:column="49">.</op:operator><name pos:line="94" pos:column="50">Format</name></name><argument_list pos:line="94" pos:column="56">(<argument><expr><name><name pos:line="94" pos:column="57">CultureInfo</name><op:operator pos:line="94" pos:column="68">.</op:operator><name pos:line="94" pos:column="69">CurrentCulture</name></name></expr></argument><op:operator pos:line="94" pos:column="83">,</op:operator> <argument><expr><lit:literal type="string" pos:line="94" pos:column="85">"Entering constructor for: {0}"</lit:literal></expr></argument><op:operator pos:line="94" pos:column="116">,</op:operator> <argument><expr><name pos:line="94" pos:column="118">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>



        <function><type><specifier pos:line="99" pos:column="9">public</specifier> <name pos:line="99" pos:column="16">SandoDialogPage</name></type> <name pos:line="99" pos:column="32">GetSandoDialogPage</name><parameter_list pos:line="99" pos:column="50">()</parameter_list>
        <block pos:line="100" pos:column="9">{
            <return pos:line="101" pos:column="13">return <expr><call><name pos:line="101" pos:column="20">GetDialogPage</name><argument_list pos:line="101" pos:column="33">(<argument><expr><call><name pos:line="101" pos:column="34">typeof</name> <argument_list pos:line="101" pos:column="41">(<argument><expr><name pos:line="101" pos:column="42">SandoDialogPage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="101" pos:column="60">as</op:operator> <name pos:line="101" pos:column="63">SandoDialogPage</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="104" pos:column="9">/////////////////////////////////////////////////////////////////////////////</comment>
        <comment type="line" pos:line="105" pos:column="9">// Overriden Package Implementation</comment>
        <cpp:region pos:line="106" pos:column="9">#<cpp:directive pos:line="106" pos:column="10">region</cpp:directive> Package Members</cpp:region>

        <comment type="line" pos:line="108" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="109" pos:column="9">/// Initialization of the package; this method is called right after the package is sited, so this is the place</comment>
        <comment type="line" pos:line="110" pos:column="9">/// where you can put all the initilaization code that rely on services provided by VisualStudio.</comment>
        <comment type="line" pos:line="111" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="112" pos:column="9">protected</specifier> <specifier pos:line="112" pos:column="19">override</specifier> <name pos:line="112" pos:column="28">void</name></type> <name pos:line="112" pos:column="33">Initialize</name><parameter_list pos:line="112" pos:column="43">()</parameter_list>
        <block pos:line="113" pos:column="9">{
            <try pos:line="114" pos:column="13">try
            <block pos:line="115" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="116" pos:column="17">base</name><op:operator pos:line="116" pos:column="21">.</op:operator><name pos:line="116" pos:column="22">Initialize</name></name><argument_list pos:line="116" pos:column="32">()</argument_list></call></expr>;</expr_stmt>                
                <expr_stmt><expr><call><name><name pos:line="117" pos:column="17">FileLogger</name><op:operator pos:line="117" pos:column="27">.</op:operator><name pos:line="117" pos:column="28">DefaultLogger</name><op:operator pos:line="117" pos:column="41">.</op:operator><name pos:line="117" pos:column="42">Info</name></name><argument_list pos:line="117" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="47">"Sando initialization started."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="118" pos:column="17">base</name><op:operator pos:line="118" pos:column="21">.</op:operator><name pos:line="118" pos:column="22">Initialize</name></name><argument_list pos:line="118" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name pos:line="120" pos:column="17">SetupDependencyInjectionObjects</name><argument_list pos:line="120" pos:column="48">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name pos:line="122" pos:column="17">_viewManager</name> <op:operator pos:line="122" pos:column="30">=</op:operator> <call><name><name pos:line="122" pos:column="32">ServiceLocator</name><op:operator pos:line="122" pos:column="46">.</op:operator><name><name pos:line="122" pos:column="47">Resolve</name><argument_list pos:line="122" pos:column="54">&lt;<argument><name pos:line="122" pos:column="55">ViewManager</name></argument>&gt;</argument_list></name></name><argument_list pos:line="122" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="123" pos:column="17">AddCommand</name><argument_list pos:line="123" pos:column="27">()</argument_list></call></expr>;</expr_stmt>                
                <expr_stmt><expr><call><name pos:line="124" pos:column="17">SetUpLifeCycleEvents</name><argument_list pos:line="124" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="126" pos:column="13">catch(<param><decl><type><name pos:line="126" pos:column="19">Exception</name></type> <name pos:line="126" pos:column="29">e</name></decl></param>)
            <block pos:line="127" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="128" pos:column="17">FileLogger</name><op:operator pos:line="128" pos:column="27">.</op:operator><name pos:line="128" pos:column="28">DefaultLogger</name><op:operator pos:line="128" pos:column="41">.</op:operator><name pos:line="128" pos:column="42">Error</name></name><argument_list pos:line="128" pos:column="47">(<argument><expr><call><name><name pos:line="128" pos:column="48">ExceptionFormatter</name><op:operator pos:line="128" pos:column="66">.</op:operator><name pos:line="128" pos:column="67">CreateMessage</name></name><argument_list pos:line="128" pos:column="80">(<argument><expr><name pos:line="128" pos:column="81">e</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>


        <function><type><specifier pos:line="133" pos:column="9">private</specifier> <name pos:line="133" pos:column="17">void</name></type> <name pos:line="133" pos:column="22">SetUpLifeCycleEvents</name><parameter_list pos:line="133" pos:column="42">()</parameter_list>
        <block pos:line="134" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="135" pos:column="13">var</name></type> <name pos:line="135" pos:column="17">dte</name> =<init pos:line="135" pos:column="22"> <expr><call><name><name pos:line="135" pos:column="23">ServiceLocator</name><op:operator pos:line="135" pos:column="37">.</op:operator><name><name pos:line="135" pos:column="38">Resolve</name><argument_list pos:line="135" pos:column="45">&lt;<argument><name pos:line="135" pos:column="46">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="135" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="136" pos:column="13">_dteEvents</name> <op:operator pos:line="136" pos:column="24">=</op:operator> <name><name pos:line="136" pos:column="26">dte</name><op:operator pos:line="136" pos:column="29">.</op:operator><name pos:line="136" pos:column="30">Events</name><op:operator pos:line="136" pos:column="36">.</op:operator><name pos:line="136" pos:column="37">DTEEvents</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="137" pos:column="13">_dteEvents</name><op:operator pos:line="137" pos:column="23">.</op:operator><name pos:line="137" pos:column="24">OnBeginShutdown</name></name> <op:operator pos:line="137" pos:column="40">+=</op:operator> <name pos:line="137" pos:column="43">DteEventsOnOnBeginShutdown</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="138" pos:column="13">_dteEvents</name><op:operator pos:line="138" pos:column="23">.</op:operator><name pos:line="138" pos:column="24">OnStartupComplete</name></name> <op:operator pos:line="138" pos:column="42">+=</op:operator> <name pos:line="138" pos:column="45">StartupCompleted</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="139" pos:column="13">_windowEvents</name> <op:operator pos:line="139" pos:column="27">=</op:operator> <name><name pos:line="139" pos:column="29">dte</name><op:operator pos:line="139" pos:column="32">.</op:operator><name pos:line="139" pos:column="33">Events</name><op:operator pos:line="139" pos:column="39">.</op:operator><name pos:line="139" pos:column="40">WindowEvents</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="140" pos:column="13">_windowEvents</name><op:operator pos:line="140" pos:column="26">.</op:operator><name pos:line="140" pos:column="27">WindowActivated</name></name> <op:operator pos:line="140" pos:column="43">+=</op:operator> <name pos:line="140" pos:column="46">SandoWindowActivated</name></expr>;</expr_stmt>
            
        }</block></function>

        <function><type><specifier pos:line="144" pos:column="9">private</specifier> <name pos:line="144" pos:column="17">void</name></type> <name pos:line="144" pos:column="22">SandoWindowActivated</name><parameter_list pos:line="144" pos:column="42">(<param><decl><type><name pos:line="144" pos:column="43">Window</name></type> <name pos:line="144" pos:column="50">gotFocus</name></decl></param><op:operator pos:line="144" pos:column="58">,</op:operator> <param><decl><type><name pos:line="144" pos:column="60">Window</name></type> <name pos:line="144" pos:column="67">lostFocus</name></decl></param>)</parameter_list>
        <block pos:line="145" pos:column="9">{
            <try pos:line="146" pos:column="13">try
            <block pos:line="147" pos:column="13">{
                <if pos:line="148" pos:column="17">if <condition pos:line="148" pos:column="20">(<expr><call><name><name pos:line="148" pos:column="21">gotFocus</name><op:operator pos:line="148" pos:column="29">.</op:operator><name pos:line="148" pos:column="30">ObjectKind</name><op:operator pos:line="148" pos:column="40">.</op:operator><name pos:line="148" pos:column="41">Equals</name></name><argument_list pos:line="148" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="48">"{AC71D0B7-7613-4EDD-95CC-9BE31C0A993A}"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="148" pos:column="90">
                <block pos:line="149" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="150" pos:column="21">var</name></type> <name pos:line="150" pos:column="25">window</name> =<init pos:line="150" pos:column="33"> <expr><call><name pos:line="150" pos:column="34">FindToolWindow</name><argument_list pos:line="150" pos:column="48">(<argument><expr><call><name pos:line="150" pos:column="49">typeof</name><argument_list pos:line="150" pos:column="55">(<argument><expr><name pos:line="150" pos:column="56">SearchToolWindow</name></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="150" pos:column="73">,</op:operator> <argument><expr><lit:literal type="number" pos:line="150" pos:column="75">0</lit:literal></expr></argument><op:operator pos:line="150" pos:column="76">,</op:operator> <argument><expr><lit:literal type="boolean" pos:line="150" pos:column="78">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="151" pos:column="21">if <condition pos:line="151" pos:column="24">(<expr><op:operator pos:line="151" pos:column="25">(</op:operator><name pos:line="151" pos:column="26">null</name> <op:operator pos:line="151" pos:column="31">==</op:operator> <name pos:line="151" pos:column="34">window</name><op:operator pos:line="151" pos:column="40">)</op:operator> <op:operator pos:line="151" pos:column="42">||</op:operator> <op:operator pos:line="151" pos:column="45">(</op:operator><name pos:line="151" pos:column="46">null</name> <op:operator pos:line="151" pos:column="51">==</op:operator> <name><name pos:line="151" pos:column="54">window</name><op:operator pos:line="151" pos:column="60">.</op:operator><name pos:line="151" pos:column="61">Frame</name></name><op:operator pos:line="151" pos:column="66">)</op:operator></expr>)</condition><then pos:line="151" pos:column="68">
                    <block pos:line="152" pos:column="21">{
                        <throw pos:line="153" pos:column="25">throw <expr><op:operator pos:line="153" pos:column="31">new</op:operator> <call><name pos:line="153" pos:column="35">NotSupportedException</name><argument_list pos:line="153" pos:column="56">(<argument><expr><name><name pos:line="153" pos:column="57">Resources</name><op:operator pos:line="153" pos:column="66">.</op:operator><name pos:line="153" pos:column="67">CanNotCreateWindow</name></name></expr></argument>)</argument_list></call></expr>;</throw>
                    }</block></then></if>
                    <decl_stmt><decl><type><name pos:line="155" pos:column="21">var</name></type> <name pos:line="155" pos:column="25">stw</name> =<init pos:line="155" pos:column="30"> <expr><name pos:line="155" pos:column="31">window</name> <op:operator pos:line="155" pos:column="38">as</op:operator> <name pos:line="155" pos:column="41">SearchToolWindow</name></expr></init></decl>;</decl_stmt>
                    <if pos:line="156" pos:column="21">if <condition pos:line="156" pos:column="24">(<expr><name pos:line="156" pos:column="25">stw</name> <op:operator pos:line="156" pos:column="29">!=</op:operator> <name pos:line="156" pos:column="32">null</name></expr>)</condition><then pos:line="156" pos:column="37">
                    <block pos:line="157" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="158" pos:column="25">stw</name><op:operator pos:line="158" pos:column="28">.</op:operator><name pos:line="158" pos:column="29">GetSearchViewControl</name></name><argument_list pos:line="158" pos:column="49">()</argument_list></call><op:operator pos:line="158" pos:column="51">.</op:operator><call><name pos:line="158" pos:column="52">FocusOnText</name><argument_list pos:line="158" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
            }</block>
            <catch pos:line="162" pos:column="13">catch (<param><decl><type><name pos:line="162" pos:column="20">Exception</name></type> <name pos:line="162" pos:column="30">e</name></decl></param>)
            <block pos:line="163" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="164" pos:column="17">FileLogger</name><op:operator pos:line="164" pos:column="27">.</op:operator><name pos:line="164" pos:column="28">DefaultLogger</name><op:operator pos:line="164" pos:column="41">.</op:operator><name pos:line="164" pos:column="42">Error</name></name><argument_list pos:line="164" pos:column="47">(<argument><expr><name pos:line="164" pos:column="48">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
            
        }</block></function>

        <function><type><specifier pos:line="169" pos:column="9">private</specifier> <name pos:line="169" pos:column="17">void</name></type> <name pos:line="169" pos:column="22">AddCommand</name><parameter_list pos:line="169" pos:column="32">()</parameter_list>
        <block pos:line="170" pos:column="9">{
            <comment type="line" pos:line="171" pos:column="13">// Add our command handlers for menu (commands must exist in the .vsct file)</comment>
            <decl_stmt><decl><type><name pos:line="172" pos:column="13">var</name></type> <name pos:line="172" pos:column="17">mcs</name> =<init pos:line="172" pos:column="22"> <expr><call><name pos:line="172" pos:column="23">GetService</name><argument_list pos:line="172" pos:column="33">(<argument><expr><call><name pos:line="172" pos:column="34">typeof</name> <argument_list pos:line="172" pos:column="41">(<argument><expr><name pos:line="172" pos:column="42">IMenuCommandService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="172" pos:column="64">as</op:operator> <name pos:line="172" pos:column="67">OleMenuCommandService</name></expr></init></decl>;</decl_stmt>
            <if pos:line="173" pos:column="13">if <condition pos:line="173" pos:column="16">(<expr><name pos:line="173" pos:column="17">null</name> <op:operator pos:line="173" pos:column="22">!=</op:operator> <name pos:line="173" pos:column="25">mcs</name></expr>)</condition><then pos:line="173" pos:column="29">
            <block pos:line="174" pos:column="13">{
                <comment type="line" pos:line="175" pos:column="17">// Create the command for the tool window</comment>
                <decl_stmt><decl><type><name pos:line="176" pos:column="17">var</name></type> <name pos:line="176" pos:column="21">toolwndCommandID</name> =<init pos:line="176" pos:column="39"> <expr><op:operator pos:line="176" pos:column="40">new</op:operator> <call><name pos:line="176" pos:column="44">CommandID</name><argument_list pos:line="176" pos:column="53">(<argument><expr><name><name pos:line="176" pos:column="54">GuidList</name><op:operator pos:line="176" pos:column="62">.</op:operator><name pos:line="176" pos:column="63">guidUICmdSet</name></name></expr></argument><op:operator pos:line="176" pos:column="75">,</op:operator> <argument><expr><op:operator pos:line="176" pos:column="77">(</op:operator><name pos:line="176" pos:column="78">int</name><op:operator pos:line="176" pos:column="81">)</op:operator> <name><name pos:line="176" pos:column="83">PkgCmdIDList</name><op:operator pos:line="176" pos:column="95">.</op:operator><name pos:line="176" pos:column="96">sandoSearch</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="177" pos:column="17">var</name></type> <name pos:line="177" pos:column="21">menuToolWin</name> =<init pos:line="177" pos:column="34"> <expr><op:operator pos:line="177" pos:column="35">new</op:operator> <call><name pos:line="177" pos:column="39">MenuCommand</name><argument_list pos:line="177" pos:column="50">(<argument><expr><name><name pos:line="177" pos:column="51">_viewManager</name><op:operator pos:line="177" pos:column="63">.</op:operator><name pos:line="177" pos:column="64">ShowToolWindow</name></name></expr></argument><op:operator pos:line="177" pos:column="78">,</op:operator> <argument><expr><name pos:line="177" pos:column="80">toolwndCommandID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="178" pos:column="17">mcs</name><op:operator pos:line="178" pos:column="20">.</op:operator><name pos:line="178" pos:column="21">AddCommand</name></name><argument_list pos:line="178" pos:column="31">(<argument><expr><name pos:line="178" pos:column="32">menuToolWin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
        
        <function><type><specifier pos:line="182" pos:column="9">private</specifier> <name pos:line="182" pos:column="17">void</name></type> <name pos:line="182" pos:column="22">StartupCompleted</name><parameter_list pos:line="182" pos:column="38">()</parameter_list>
        <block pos:line="183" pos:column="9">{
        	<if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><call><name><name pos:line="184" pos:column="21">_viewManager</name><op:operator pos:line="184" pos:column="33">.</op:operator><name pos:line="184" pos:column="34">ShouldShow</name></name><argument_list pos:line="184" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="184" pos:column="47">
        	<block pos:line="185" pos:column="17">{
        		<expr_stmt><expr><call><name><name pos:line="186" pos:column="25">_viewManager</name><op:operator pos:line="186" pos:column="37">.</op:operator><name pos:line="186" pos:column="38">ShowSando</name></name><argument_list pos:line="186" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
        		<expr_stmt><expr><call><name><name pos:line="187" pos:column="25">_viewManager</name><op:operator pos:line="187" pos:column="37">.</op:operator><name pos:line="187" pos:column="38">ShowToolbar</name></name><argument_list pos:line="187" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
        	}</block></then></if>

            <if pos:line="190" pos:column="13">if <condition pos:line="190" pos:column="16">(<expr><call><name><name pos:line="190" pos:column="17">ServiceLocator</name><op:operator pos:line="190" pos:column="31">.</op:operator><name><name pos:line="190" pos:column="32">Resolve</name><argument_list pos:line="190" pos:column="39">&lt;<argument><name pos:line="190" pos:column="40">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="190" pos:column="45">()</argument_list></call><op:operator pos:line="190" pos:column="47">.</op:operator><call><name><name pos:line="190" pos:column="48">Version</name><op:operator pos:line="190" pos:column="55">.</op:operator><name pos:line="190" pos:column="56">StartsWith</name></name><argument_list pos:line="190" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="190" pos:column="67">"10"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="190" pos:column="73">
        	<block pos:line="191" pos:column="17">{
				<comment type="line" pos:line="192" pos:column="33">//only need to do this in VS2010, and it breaks things in VS2012</comment>
        		<decl_stmt><decl><type><name pos:line="193" pos:column="25">Solution</name></type> <name pos:line="193" pos:column="34">openSolution</name> =<init pos:line="193" pos:column="48"> <expr><call><name><name pos:line="193" pos:column="49">ServiceLocator</name><op:operator pos:line="193" pos:column="63">.</op:operator><name><name pos:line="193" pos:column="64">Resolve</name><argument_list pos:line="193" pos:column="71">&lt;<argument><name pos:line="193" pos:column="72">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="193" pos:column="77">()</argument_list></call><op:operator pos:line="193" pos:column="79">.</op:operator><name pos:line="193" pos:column="80">Solution</name></expr></init></decl>;</decl_stmt>

                <comment type="line" pos:line="195" pos:column="17">// JZ: SrcMLService Integration</comment>
                <comment type="line" pos:line="196" pos:column="17">////if(openSolution != null &amp;&amp; !String.IsNullOrWhiteSpace(openSolution.FullName) &amp;&amp; _currentMonitor == null)</comment>
                <if pos:line="197" pos:column="17">if<condition pos:line="197" pos:column="19">(<expr><name pos:line="197" pos:column="20">openSolution</name> <op:operator pos:line="197" pos:column="33">!=</op:operator> <name pos:line="197" pos:column="36">null</name> <op:operator pos:line="197" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="197" pos:column="44">!</op:operator><call><name><name pos:line="197" pos:column="45">String</name><op:operator pos:line="197" pos:column="51">.</op:operator><name pos:line="197" pos:column="52">IsNullOrWhiteSpace</name></name><argument_list pos:line="197" pos:column="70">(<argument><expr><name><name pos:line="197" pos:column="71">openSolution</name><op:operator pos:line="197" pos:column="83">.</op:operator><name pos:line="197" pos:column="84">FullName</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="197" pos:column="94">
                <comment type="line" pos:line="198" pos:column="17">// End of code changes</comment>
        		<block pos:line="199" pos:column="25">{
        			<expr_stmt><expr><call><name pos:line="200" pos:column="33">SolutionHasBeenOpened</name><argument_list pos:line="200" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
        		}</block></then></if>
        	}</block></then></if>

        	<expr_stmt><expr><call><name pos:line="204" pos:column="17">RegisterSolutionEvents</name><argument_list pos:line="204" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>  

        <function><type><specifier pos:line="207" pos:column="9">private</specifier> <name pos:line="207" pos:column="17">void</name></type> <name pos:line="207" pos:column="22">RegisterSolutionEvents</name><parameter_list pos:line="207" pos:column="44">()</parameter_list>
        <block pos:line="208" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="209" pos:column="13">var</name></type> <name pos:line="209" pos:column="17">dte</name> =<init pos:line="209" pos:column="22"> <expr><call><name><name pos:line="209" pos:column="23">ServiceLocator</name><op:operator pos:line="209" pos:column="37">.</op:operator><name><name pos:line="209" pos:column="38">Resolve</name><argument_list pos:line="209" pos:column="45">&lt;<argument><name pos:line="209" pos:column="46">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="209" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="210" pos:column="13">if <condition pos:line="210" pos:column="16">(<expr><name pos:line="210" pos:column="17">dte</name> <op:operator pos:line="210" pos:column="21">!=</op:operator> <name pos:line="210" pos:column="24">null</name></expr>)</condition><then pos:line="210" pos:column="29">
            <block pos:line="211" pos:column="13">{
                <expr_stmt><expr><name pos:line="212" pos:column="17">_solutionEvents</name> <op:operator pos:line="212" pos:column="33">=</op:operator> <name><name pos:line="212" pos:column="35">dte</name><op:operator pos:line="212" pos:column="38">.</op:operator><name pos:line="212" pos:column="39">Events</name><op:operator pos:line="212" pos:column="45">.</op:operator><name pos:line="212" pos:column="46">SolutionEvents</name></name></expr>;</expr_stmt>                
                <expr_stmt><expr><name><name pos:line="213" pos:column="17">_solutionEvents</name><op:operator pos:line="213" pos:column="32">.</op:operator><name pos:line="213" pos:column="33">Opened</name></name> <op:operator pos:line="213" pos:column="40">+=</op:operator> <name pos:line="213" pos:column="43">SolutionHasBeenOpened</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="214" pos:column="17">_solutionEvents</name><op:operator pos:line="214" pos:column="32">.</op:operator><name pos:line="214" pos:column="33">BeforeClosing</name></name> <op:operator pos:line="214" pos:column="47">+=</op:operator> <name pos:line="214" pos:column="50">SolutionAboutToClose</name></expr>;</expr_stmt>
            }</block></then></if>

			<expr_stmt><expr><name pos:line="217" pos:column="25">_listener</name> <op:operator pos:line="217" pos:column="35">=</op:operator> <op:operator pos:line="217" pos:column="37">new</op:operator> <call><name pos:line="217" pos:column="41">SolutionReloadEventListener</name><argument_list pos:line="217" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="218" pos:column="25">_listener</name><op:operator pos:line="218" pos:column="34">.</op:operator><name pos:line="218" pos:column="35">OnQueryUnloadProject</name></name> <op:operator pos:line="218" pos:column="56">+=</op:operator> <op:operator pos:line="218" pos:column="59">(</op:operator><op:operator pos:line="218" pos:column="60">)</op:operator> =&gt;
			<block pos:line="219" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="220" pos:column="33">SolutionAboutToClose</name><argument_list pos:line="220" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="221" pos:column="33">SolutionHasBeenOpened</name><argument_list pos:line="221" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
			}</block></expr>;</expr_stmt>
        }</block></function>

         

        <function><type><specifier pos:line="227" pos:column="9">private</specifier> <name pos:line="227" pos:column="17">void</name></type> <name pos:line="227" pos:column="22">DteEventsOnOnBeginShutdown</name><parameter_list pos:line="227" pos:column="48">()</parameter_list>
        <block pos:line="228" pos:column="9">{
            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><name pos:line="229" pos:column="17">_extensionPointsConfiguration</name> <op:operator pos:line="229" pos:column="47">!=</op:operator> <name pos:line="229" pos:column="50">null</name></expr>)</condition><then pos:line="229" pos:column="55">
            <block pos:line="230" pos:column="13">{                                
                <expr_stmt><expr><call><name><name pos:line="231" pos:column="17">ExtensionPointsConfigurationFileReader</name><op:operator pos:line="231" pos:column="55">.</op:operator><name pos:line="231" pos:column="56">WriteConfiguration</name></name><argument_list pos:line="231" pos:column="74">(<argument><expr><name pos:line="231" pos:column="75">_extensionPointsConfiguration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="232" pos:column="17">//After writing the extension points configuration file, the index state file on disk is out of date; so it needs to be rewritten</comment>
                <expr_stmt><expr><call><name><name pos:line="233" pos:column="17">IndexStateManager</name><op:operator pos:line="233" pos:column="34">.</op:operator><name pos:line="233" pos:column="35">SaveCurrentIndexState</name></name><argument_list pos:line="233" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <comment type="line" pos:line="235" pos:column="13">//TODO - kill file processing threads</comment>
        }</block></function>

        <function><type><specifier pos:line="238" pos:column="9">private</specifier> <name pos:line="238" pos:column="17">void</name></type> <name pos:line="238" pos:column="22">RegisterExtensionPoints</name><parameter_list pos:line="238" pos:column="45">()</parameter_list>
        <block pos:line="239" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="240" pos:column="13">var</name></type> <name pos:line="240" pos:column="17">extensionPointsRepository</name> =<init pos:line="240" pos:column="44"> <expr><name><name pos:line="240" pos:column="45">ExtensionPointsRepository</name><op:operator pos:line="240" pos:column="70">.</op:operator><name pos:line="240" pos:column="71">Instance</name></name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="242" pos:column="13">// JZ: SrcMLService Integration</comment>
            <expr_stmt><expr><call><name><name pos:line="243" pos:column="13">extensionPointsRepository</name><op:operator pos:line="243" pos:column="38">.</op:operator><name pos:line="243" pos:column="39">RegisterParserImplementation</name></name><argument_list pos:line="243" pos:column="67">(<argument><expr><op:operator pos:line="243" pos:column="68">new</op:operator> <name><name pos:line="243" pos:column="72">List</name><argument_list pos:line="243" pos:column="76">&lt;<argument><name pos:line="243" pos:column="77">string</name></argument>&gt;</argument_list></name> <block pos:line="243" pos:column="85">{ <expr><lit:literal type="string" pos:line="243" pos:column="87">".cs"</lit:literal></expr> }</block></expr></argument><op:operator pos:line="243" pos:column="94">,</op:operator> <argument><expr><op:operator pos:line="243" pos:column="96">new</op:operator> <call><name pos:line="243" pos:column="100">SrcMLCSharpParser</name><argument_list pos:line="243" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="244" pos:column="13">extensionPointsRepository</name><op:operator pos:line="244" pos:column="38">.</op:operator><name pos:line="244" pos:column="39">RegisterParserImplementation</name></name><argument_list pos:line="244" pos:column="67">(<argument><expr><op:operator pos:line="244" pos:column="68">new</op:operator> <name><name pos:line="244" pos:column="72">List</name><argument_list pos:line="244" pos:column="76">&lt;<argument><name pos:line="244" pos:column="77">string</name></argument>&gt;</argument_list></name> <block pos:line="244" pos:column="85">{ <expr><lit:literal type="string" pos:line="244" pos:column="87">".h"</lit:literal></expr><op:operator pos:line="244" pos:column="91">,</op:operator> <expr><lit:literal type="string" pos:line="244" pos:column="93">".cpp"</lit:literal></expr><op:operator pos:line="244" pos:column="99">,</op:operator> <expr><lit:literal type="string" pos:line="244" pos:column="101">".cxx"</lit:literal></expr><op:operator pos:line="244" pos:column="107">,</op:operator> <expr><lit:literal type="string" pos:line="244" pos:column="109">".c"</lit:literal></expr> }</block></expr></argument><op:operator pos:line="244" pos:column="115">,</op:operator> <argument><expr><op:operator pos:line="244" pos:column="117">new</op:operator> <call><name pos:line="244" pos:column="121">SrcMLCppParser</name><argument_list pos:line="244" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="245" pos:column="13">////extensionPointsRepository.RegisterParserImplementation(new List&lt;string&gt; { ".cs" }, new SrcMLCSharpParser(_srcMLArchive));</comment>
            <comment type="line" pos:line="246" pos:column="13">////extensionPointsRepository.RegisterParserImplementation(new List&lt;string&gt; { ".h", ".cpp", ".cxx", ".c" }, new SrcMLCppParser(_srcMLArchive));</comment>
            <comment type="line" pos:line="247" pos:column="13">// JZ: End of code changes</comment>
            <expr_stmt><expr><call><name><name pos:line="248" pos:column="13">extensionPointsRepository</name><op:operator pos:line="248" pos:column="38">.</op:operator><name pos:line="248" pos:column="39">RegisterParserImplementation</name></name><argument_list pos:line="248" pos:column="67">(<argument><expr><op:operator pos:line="248" pos:column="68">new</op:operator> <name><name pos:line="248" pos:column="72">List</name><argument_list pos:line="248" pos:column="76">&lt;<argument><name pos:line="248" pos:column="77">string</name></argument>&gt;</argument_list></name> <block pos:line="248" pos:column="85">{ <expr><lit:literal type="string" pos:line="248" pos:column="87">".xaml"</lit:literal></expr><op:operator pos:line="248" pos:column="94">,</op:operator> <expr><lit:literal type="string" pos:line="248" pos:column="96">".htm"</lit:literal></expr><op:operator pos:line="248" pos:column="102">,</op:operator> <expr><lit:literal type="string" pos:line="248" pos:column="104">".html"</lit:literal></expr><op:operator pos:line="248" pos:column="111">,</op:operator> <expr><lit:literal type="string" pos:line="248" pos:column="113">".xml"</lit:literal></expr><op:operator pos:line="248" pos:column="119">,</op:operator> <expr><lit:literal type="string" pos:line="248" pos:column="121">".resx"</lit:literal></expr><op:operator pos:line="248" pos:column="128">,</op:operator> <expr><lit:literal type="string" pos:line="248" pos:column="130">".aspx"</lit:literal></expr> }</block></expr></argument><op:operator pos:line="248" pos:column="139">,</op:operator>
                                                                   <argument><expr><op:operator pos:line="249" pos:column="68">new</op:operator> <call><name pos:line="249" pos:column="72">XMLFileParser</name><argument_list pos:line="249" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="250" pos:column="25">extensionPointsRepository</name><op:operator pos:line="250" pos:column="50">.</op:operator><name pos:line="250" pos:column="51">RegisterParserImplementation</name></name><argument_list pos:line="250" pos:column="79">(<argument><expr><op:operator pos:line="250" pos:column="80">new</op:operator> <name><name pos:line="250" pos:column="84">List</name><argument_list pos:line="250" pos:column="88">&lt;<argument><name pos:line="250" pos:column="89">string</name></argument>&gt;</argument_list></name> <block pos:line="250" pos:column="97">{ <expr><lit:literal type="string" pos:line="250" pos:column="99">".txt"</lit:literal></expr> }</block></expr></argument><op:operator pos:line="250" pos:column="107">,</op:operator>
																   <argument><expr><op:operator pos:line="251" pos:column="132">new</op:operator> <call><name pos:line="251" pos:column="136">TextFileParser</name><argument_list pos:line="251" pos:column="150">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="253" pos:column="13">extensionPointsRepository</name><op:operator pos:line="253" pos:column="38">.</op:operator><name pos:line="253" pos:column="39">RegisterWordSplitterImplementation</name></name><argument_list pos:line="253" pos:column="73">(<argument><expr><op:operator pos:line="253" pos:column="74">new</op:operator> <call><name pos:line="253" pos:column="78">WordSplitter</name><argument_list pos:line="253" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 	
            <expr_stmt><expr><call><name><name pos:line="254" pos:column="13">extensionPointsRepository</name><op:operator pos:line="254" pos:column="38">.</op:operator><name pos:line="254" pos:column="39">RegisterResultsReordererImplementation</name></name><argument_list pos:line="254" pos:column="77">(<argument><expr><op:operator pos:line="254" pos:column="78">new</op:operator> <call><name pos:line="254" pos:column="82">SortByScoreResultsReorderer</name><argument_list pos:line="254" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	        <expr_stmt><expr><call><name><name pos:line="255" pos:column="17">extensionPointsRepository</name><op:operator pos:line="255" pos:column="42">.</op:operator><name pos:line="255" pos:column="43">RegisterQueryWeightsSupplierImplementation</name></name><argument_list pos:line="255" pos:column="85">(<argument><expr><op:operator pos:line="255" pos:column="86">new</op:operator> <call><name pos:line="255" pos:column="90">QueryWeightsSupplier</name><argument_list pos:line="255" pos:column="110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	        <expr_stmt><expr><call><name><name pos:line="256" pos:column="17">extensionPointsRepository</name><op:operator pos:line="256" pos:column="42">.</op:operator><name pos:line="256" pos:column="43">RegisterQueryRewriterImplementation</name></name><argument_list pos:line="256" pos:column="78">(<argument><expr><op:operator pos:line="256" pos:column="79">new</op:operator> <call><name pos:line="256" pos:column="83">DefaultQueryRewriter</name><argument_list pos:line="256" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="257" pos:column="13">extensionPointsRepository</name><op:operator pos:line="257" pos:column="38">.</op:operator><name pos:line="257" pos:column="39">RegisterIndexFilterManagerImplementation</name></name><argument_list pos:line="257" pos:column="79">(<argument><expr><op:operator pos:line="257" pos:column="80">new</op:operator> <call><name pos:line="257" pos:column="84">IndexFilterManager</name><argument_list pos:line="257" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <decl_stmt><decl><type><name pos:line="260" pos:column="13">var</name></type> <name pos:line="260" pos:column="17">sandoOptions</name> =<init pos:line="260" pos:column="31"> <expr><call><name><name pos:line="260" pos:column="32">ServiceLocator</name><op:operator pos:line="260" pos:column="46">.</op:operator><name><name pos:line="260" pos:column="47">Resolve</name><argument_list pos:line="260" pos:column="54">&lt;<argument><name pos:line="260" pos:column="55">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="260" pos:column="77">()</argument_list></call><op:operator pos:line="260" pos:column="79">.</op:operator><call><name pos:line="260" pos:column="80">GetSandoOptions</name><argument_list pos:line="260" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="262" pos:column="13">var</name></type> <name pos:line="262" pos:column="17">loggerPath</name> =<init pos:line="262" pos:column="29"> <expr><call><name><name pos:line="262" pos:column="30">Path</name><op:operator pos:line="262" pos:column="34">.</op:operator><name pos:line="262" pos:column="35">Combine</name></name><argument_list pos:line="262" pos:column="42">(<argument><expr><name><name pos:line="262" pos:column="43">sandoOptions</name><op:operator pos:line="262" pos:column="55">.</op:operator><name pos:line="262" pos:column="56">ExtensionPointsPluginDirectoryPath</name></name></expr></argument><op:operator pos:line="262" pos:column="90">,</op:operator> <argument><expr><lit:literal type="string" pos:line="262" pos:column="92">"ExtensionPointsLogger.log"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="263" pos:column="13">var</name></type> <name pos:line="263" pos:column="17">logger</name> =<init pos:line="263" pos:column="25"> <expr><call><name><name pos:line="263" pos:column="26">FileLogger</name><op:operator pos:line="263" pos:column="36">.</op:operator><name pos:line="263" pos:column="37">CreateFileLogger</name></name><argument_list pos:line="263" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="263" pos:column="54">"ExtensionPointsLogger"</lit:literal></expr></argument><op:operator pos:line="263" pos:column="77">,</op:operator> <argument><expr><name pos:line="263" pos:column="79">loggerPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="264" pos:column="13">_extensionPointsConfiguration</name> <op:operator pos:line="264" pos:column="43">=</op:operator> <call><name><name pos:line="264" pos:column="45">ExtensionPointsConfigurationFileReader</name><op:operator pos:line="264" pos:column="83">.</op:operator><name pos:line="264" pos:column="84">ReadAndValidate</name></name><argument_list pos:line="264" pos:column="99">(<argument><expr><name pos:line="264" pos:column="100">logger</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if pos:line="266" pos:column="13">if<condition pos:line="266" pos:column="15">(<expr><name pos:line="266" pos:column="16">_extensionPointsConfiguration</name> <op:operator pos:line="266" pos:column="46">!=</op:operator> <name pos:line="266" pos:column="49">null</name></expr>)</condition><then pos:line="266" pos:column="54">
			<block pos:line="267" pos:column="25">{
                <expr_stmt><expr><name><name pos:line="268" pos:column="17">_extensionPointsConfiguration</name><op:operator pos:line="268" pos:column="46">.</op:operator><name pos:line="268" pos:column="47">PluginDirectoryPath</name></name> <op:operator pos:line="268" pos:column="67">=</op:operator> <name><name pos:line="268" pos:column="69">sandoOptions</name><op:operator pos:line="268" pos:column="81">.</op:operator><name pos:line="268" pos:column="82">ExtensionPointsPluginDirectoryPath</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="269" pos:column="33">ExtensionPointsConfigurationAnalyzer</name><op:operator pos:line="269" pos:column="69">.</op:operator><name pos:line="269" pos:column="70">FindAndRegisterValidExtensionPoints</name></name><argument_list pos:line="269" pos:column="105">(<argument><expr><name pos:line="269" pos:column="106">_extensionPointsConfiguration</name></expr></argument><op:operator pos:line="269" pos:column="135">,</op:operator> <argument><expr><name pos:line="269" pos:column="137">logger</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

            <decl_stmt><decl><type><name pos:line="272" pos:column="13">var</name></type> <name pos:line="272" pos:column="17">csParser</name> =<init pos:line="272" pos:column="27"> <expr><call><name><name pos:line="272" pos:column="28">extensionPointsRepository</name><op:operator pos:line="272" pos:column="53">.</op:operator><name pos:line="272" pos:column="54">GetParserImplementation</name></name><argument_list pos:line="272" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="272" pos:column="78">".cs"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="272" pos:column="85">as</op:operator> <name pos:line="272" pos:column="88">SrcMLCSharpParser</name></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="273" pos:column="13">// JZ: SrcMLService Integration</comment>
            <comment type="line" pos:line="274" pos:column="13">////if(csParser != null) {</comment>
            <comment type="line" pos:line="275" pos:column="13">////    csParser.Archive = _srcMLArchive;</comment>
            <comment type="line" pos:line="276" pos:column="13">////}</comment>
            <comment type="line" pos:line="277" pos:column="13">// End of code changes</comment>
            <decl_stmt><decl><type><name pos:line="278" pos:column="13">var</name></type> <name pos:line="278" pos:column="17">cppParser</name> =<init pos:line="278" pos:column="28"> <expr><call><name><name pos:line="278" pos:column="29">extensionPointsRepository</name><op:operator pos:line="278" pos:column="54">.</op:operator><name pos:line="278" pos:column="55">GetParserImplementation</name></name><argument_list pos:line="278" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="278" pos:column="79">".cpp"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="278" pos:column="87">as</op:operator> <name pos:line="278" pos:column="90">SrcMLCppParser</name></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="279" pos:column="13">// JZ: SrcMLService Integration</comment>
            <comment type="line" pos:line="280" pos:column="13">////if(cppParser != null) {</comment>
            <comment type="line" pos:line="281" pos:column="13">////    cppParser.Archive = _srcMLArchive;</comment>
            <comment type="line" pos:line="282" pos:column="13">////}</comment>
            <comment type="line" pos:line="283" pos:column="13">// End of code changes</comment>

        }</block></function>

        <function><type><specifier pos:line="287" pos:column="9">private</specifier> <name pos:line="287" pos:column="17">void</name></type> <name pos:line="287" pos:column="22">SolutionAboutToClose</name><parameter_list pos:line="287" pos:column="42">()</parameter_list>
		<block pos:line="288" pos:column="17">{
			<try pos:line="289" pos:column="25">try
            <block pos:line="290" pos:column="13">{
                <comment type="line" pos:line="291" pos:column="17">// JZ: SrcMLService Integration</comment>
                <expr_stmt><expr><call><name><name pos:line="292" pos:column="17">srcMLService</name><op:operator pos:line="292" pos:column="29">.</op:operator><name pos:line="292" pos:column="30">StopMonitoring</name></name><argument_list pos:line="292" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="293" pos:column="17">// TODO: DocumentIndexer.CommitChanges(); DocumentIndexer.Dispose(false);</comment>
                <comment type="line" pos:line="294" pos:column="17">// End of code changes</comment>

                
                
                <if pos:line="298" pos:column="17">if<condition pos:line="298" pos:column="19">(<expr><name pos:line="298" pos:column="20">_srcMLArchive</name> <op:operator pos:line="298" pos:column="34">!=</op:operator> <name pos:line="298" pos:column="37">null</name></expr>)</condition><then pos:line="298" pos:column="42">
                <block pos:line="299" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="300" pos:column="21">_srcMLArchive</name><op:operator pos:line="300" pos:column="34">.</op:operator><name pos:line="300" pos:column="35">Dispose</name></name><argument_list pos:line="300" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="301" pos:column="21">_srcMLArchive</name> <op:operator pos:line="301" pos:column="35">=</op:operator> <name pos:line="301" pos:column="37">null</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="302" pos:column="21">ServiceLocator</name><op:operator pos:line="302" pos:column="35">.</op:operator><name><name pos:line="302" pos:column="36">Resolve</name><argument_list pos:line="302" pos:column="43">&lt;<argument><name pos:line="302" pos:column="44">IndexFilterManager</name></argument>&gt;</argument_list></name></name><argument_list pos:line="302" pos:column="63">()</argument_list></call><op:operator pos:line="302" pos:column="65">.</op:operator><call><name pos:line="302" pos:column="66">Dispose</name><argument_list pos:line="302" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="303" pos:column="21">ServiceLocator</name><op:operator pos:line="303" pos:column="35">.</op:operator><name><name pos:line="303" pos:column="36">Resolve</name><argument_list pos:line="303" pos:column="43">&lt;<argument><name pos:line="303" pos:column="44">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="303" pos:column="60">()</argument_list></call><op:operator pos:line="303" pos:column="62">.</op:operator><call><name pos:line="303" pos:column="63">Dispose</name><argument_list pos:line="303" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="306" pos:column="13">catch (<param><decl><type><name pos:line="306" pos:column="20">Exception</name></type> <name pos:line="306" pos:column="30">e</name></decl></param>)
            <block pos:line="307" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="308" pos:column="17">FileLogger</name><op:operator pos:line="308" pos:column="27">.</op:operator><name pos:line="308" pos:column="28">DefaultLogger</name><op:operator pos:line="308" pos:column="41">.</op:operator><name pos:line="308" pos:column="42">Error</name></name><argument_list pos:line="308" pos:column="47">(<argument><expr><name pos:line="308" pos:column="48">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
		}</block></function>

		<function><type><specifier pos:line="312" pos:column="17">private</specifier> <name pos:line="312" pos:column="25">void</name></type> <name pos:line="312" pos:column="30">SolutionHasBeenOpened</name><parameter_list pos:line="312" pos:column="51">()</parameter_list>
		<block pos:line="313" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="314" pos:column="13">var</name></type> <name pos:line="314" pos:column="17">bw</name> =<init pos:line="314" pos:column="21"> <expr><op:operator pos:line="314" pos:column="22">new</op:operator> <name pos:line="314" pos:column="26">BackgroundWorker</name> <block pos:line="314" pos:column="43">{<expr><name pos:line="314" pos:column="44">WorkerReportsProgress</name> <op:operator pos:line="314" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="314" pos:column="68">false</lit:literal></expr><op:operator pos:line="314" pos:column="73">,</op:operator> <expr><name pos:line="314" pos:column="75">WorkerSupportsCancellation</name> <op:operator pos:line="314" pos:column="102">=</op:operator> <lit:literal type="boolean" pos:line="314" pos:column="104">false</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		    <expr_stmt><expr><name><name pos:line="315" pos:column="21">bw</name><op:operator pos:line="315" pos:column="23">.</op:operator><name pos:line="315" pos:column="24">DoWork</name></name> <op:operator pos:line="315" pos:column="31">+=</op:operator> <name pos:line="315" pos:column="34">RespondToSolutionOpened</name></expr>;</expr_stmt>
		    <expr_stmt><expr><call><name><name pos:line="316" pos:column="21">bw</name><op:operator pos:line="316" pos:column="23">.</op:operator><name pos:line="316" pos:column="24">RunWorkerAsync</name></name><argument_list pos:line="316" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

        <comment type="line" pos:line="319" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="320" pos:column="9">/// Respond to solution opening.</comment>
        <comment type="line" pos:line="321" pos:column="9">/// Still use Sando's SolutionMonitorFactory because Sando's SolutionMonitorFactory has too much indexer code which is specific with Sando.</comment>
        <comment type="line" pos:line="322" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="323" pos:column="9">private</specifier> <name pos:line="323" pos:column="17">void</name></type> <name pos:line="323" pos:column="22">RespondToSolutionOpened</name><parameter_list pos:line="323" pos:column="45">(<param><decl><type><name pos:line="323" pos:column="46">object</name></type> <name pos:line="323" pos:column="53">sender</name></decl></param><op:operator pos:line="323" pos:column="59">,</op:operator> <param><decl><type><name pos:line="323" pos:column="61">DoWorkEventArgs</name></type> <name pos:line="323" pos:column="77">ee</name></decl></param>)</parameter_list>
        <block pos:line="324" pos:column="9">{
            <try pos:line="325" pos:column="13">try
            <block pos:line="326" pos:column="13">{
                <comment type="line" pos:line="327" pos:column="17">//TODO if solution is reopen - the guid should be read from file - future change</comment>
                <decl_stmt><decl><type><name pos:line="328" pos:column="17">var</name></type> <name pos:line="328" pos:column="21">solutionId</name> =<init pos:line="328" pos:column="33"> <expr><call><name><name pos:line="328" pos:column="34">Guid</name><op:operator pos:line="328" pos:column="38">.</op:operator><name pos:line="328" pos:column="39">NewGuid</name></name><argument_list pos:line="328" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="329" pos:column="17">var</name></type> <name pos:line="329" pos:column="21">openSolution</name> =<init pos:line="329" pos:column="35"> <expr><call><name><name pos:line="329" pos:column="36">ServiceLocator</name><op:operator pos:line="329" pos:column="50">.</op:operator><name><name pos:line="329" pos:column="51">Resolve</name><argument_list pos:line="329" pos:column="58">&lt;<argument><name pos:line="329" pos:column="59">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="329" pos:column="64">()</argument_list></call><op:operator pos:line="329" pos:column="66">.</op:operator><name pos:line="329" pos:column="67">Solution</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="330" pos:column="17">var</name></type> <name pos:line="330" pos:column="21">solutionPath</name> =<init pos:line="330" pos:column="35"> <expr><name><name pos:line="330" pos:column="36">openSolution</name><op:operator pos:line="330" pos:column="48">.</op:operator><name pos:line="330" pos:column="49">FileName</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="331" pos:column="17">var</name></type> <name pos:line="331" pos:column="21">key</name> =<init pos:line="331" pos:column="26"> <expr><op:operator pos:line="331" pos:column="27">new</op:operator> <call><name pos:line="331" pos:column="31">SolutionKey</name><argument_list pos:line="331" pos:column="42">(<argument><expr><name pos:line="331" pos:column="43">solutionId</name></expr></argument><op:operator pos:line="331" pos:column="53">,</op:operator> <argument><expr><name pos:line="331" pos:column="55">solutionPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>              
                <expr_stmt><expr><call><name><name pos:line="332" pos:column="17">ServiceLocator</name><op:operator pos:line="332" pos:column="31">.</op:operator><name pos:line="332" pos:column="32">RegisterInstance</name></name><argument_list pos:line="332" pos:column="48">(<argument><expr><name pos:line="332" pos:column="49">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="333" pos:column="17">ServiceLocator</name><op:operator pos:line="333" pos:column="31">.</op:operator><name pos:line="333" pos:column="32">RegisterInstance</name></name><argument_list pos:line="333" pos:column="48">(<argument><expr><op:operator pos:line="333" pos:column="49">new</op:operator> <call><name pos:line="333" pos:column="53">IndexFilterManager</name><argument_list pos:line="333" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>                

                <decl_stmt><decl><type><name pos:line="335" pos:column="17">var</name></type> <name pos:line="335" pos:column="21">sandoOptions</name> =<init pos:line="335" pos:column="35"> <expr><call><name><name pos:line="335" pos:column="36">ServiceLocator</name><op:operator pos:line="335" pos:column="50">.</op:operator><name><name pos:line="335" pos:column="51">Resolve</name><argument_list pos:line="335" pos:column="58">&lt;<argument><name pos:line="335" pos:column="59">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="335" pos:column="81">()</argument_list></call><op:operator pos:line="335" pos:column="83">.</op:operator><call><name pos:line="335" pos:column="84">GetSandoOptions</name><argument_list pos:line="335" pos:column="99">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="336" pos:column="17">FileLogger</name><op:operator pos:line="336" pos:column="27">.</op:operator><name pos:line="336" pos:column="28">DefaultLogger</name><op:operator pos:line="336" pos:column="41">.</op:operator><name pos:line="336" pos:column="42">Info</name></name><argument_list pos:line="336" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="336" pos:column="47">"extensionPointsDirectory: "</lit:literal> <op:operator pos:line="336" pos:column="76">+</op:operator> <name><name pos:line="336" pos:column="78">sandoOptions</name><op:operator pos:line="336" pos:column="90">.</op:operator><name pos:line="336" pos:column="91">ExtensionPointsPluginDirectoryPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="337" pos:column="17">bool</name></type> <name pos:line="337" pos:column="22">isIndexRecreationRequired</name> =<init pos:line="337" pos:column="49"> <expr><call><name><name pos:line="337" pos:column="50">IndexStateManager</name><op:operator pos:line="337" pos:column="67">.</op:operator><name pos:line="337" pos:column="68">IsIndexRecreationRequired</name></name><argument_list pos:line="337" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="339" pos:column="17">ServiceLocator</name><op:operator pos:line="339" pos:column="31">.</op:operator><name><name pos:line="339" pos:column="32">RegisterInstance</name><argument_list pos:line="339" pos:column="48">&lt;<argument><name pos:line="339" pos:column="49">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="339" pos:column="58">(<argument><expr><op:operator pos:line="339" pos:column="59">new</op:operator> <call><name pos:line="339" pos:column="63">SnowballAnalyzer</name><argument_list pos:line="339" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="339" pos:column="80">"English"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="341" pos:column="17">var</name></type> <name pos:line="341" pos:column="21">currentIndexer</name> =<init pos:line="341" pos:column="37"> <expr><op:operator pos:line="341" pos:column="38">new</op:operator> <call><name pos:line="341" pos:column="42">DocumentIndexer</name><argument_list pos:line="341" pos:column="57">(<argument><expr><call><name><name pos:line="341" pos:column="58">TimeSpan</name><op:operator pos:line="341" pos:column="66">.</op:operator><name pos:line="341" pos:column="67">FromSeconds</name></name><argument_list pos:line="341" pos:column="78">(<argument><expr><lit:literal type="number" pos:line="341" pos:column="79">10</lit:literal></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="341" pos:column="82">,</op:operator> <argument><expr><call><name><name pos:line="341" pos:column="84">TimeSpan</name><op:operator pos:line="341" pos:column="92">.</op:operator><name pos:line="341" pos:column="93">FromSeconds</name></name><argument_list pos:line="341" pos:column="104">(<argument><expr><lit:literal type="number" pos:line="341" pos:column="105">4</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="342" pos:column="17">ServiceLocator</name><op:operator pos:line="342" pos:column="31">.</op:operator><name pos:line="342" pos:column="32">RegisterInstance</name></name><argument_list pos:line="342" pos:column="48">(<argument><expr><name pos:line="342" pos:column="49">currentIndexer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="344" pos:column="17">ServiceLocator</name><op:operator pos:line="344" pos:column="31">.</op:operator><name pos:line="344" pos:column="32">RegisterInstance</name></name><argument_list pos:line="344" pos:column="48">(<argument><expr><op:operator pos:line="344" pos:column="49">new</op:operator> <call><name pos:line="344" pos:column="53">IndexUpdateManager</name><argument_list pos:line="344" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if pos:line="346" pos:column="17">if <condition pos:line="346" pos:column="20">(<expr><name pos:line="346" pos:column="21">isIndexRecreationRequired</name></expr>)</condition><then pos:line="346" pos:column="47">
                <block pos:line="347" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="348" pos:column="21">currentIndexer</name><op:operator pos:line="348" pos:column="35">.</op:operator><name pos:line="348" pos:column="36">ClearIndex</name></name><argument_list pos:line="348" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <expr_stmt><expr><call><name><name pos:line="351" pos:column="17">ServiceLocator</name><op:operator pos:line="351" pos:column="31">.</op:operator><name><name pos:line="351" pos:column="32">Resolve</name><argument_list pos:line="351" pos:column="39">&lt;<argument><name pos:line="351" pos:column="40">InitialIndexingWatcher</name></argument>&gt;</argument_list></name></name><argument_list pos:line="351" pos:column="63">()</argument_list></call><op:operator pos:line="351" pos:column="65">.</op:operator><call><name pos:line="351" pos:column="66">InitialIndexingStarted</name><argument_list pos:line="351" pos:column="88">()</argument_list></call></expr>;</expr_stmt>

               
                
                <comment type="line" pos:line="355" pos:column="17">// JZ: SrcMLService Integration</comment>
                <comment type="line" pos:line="356" pos:column="17">// Get the SrcML Service.</comment>
                <expr_stmt><expr><name pos:line="357" pos:column="17">srcMLService</name> <op:operator pos:line="357" pos:column="30">=</op:operator> <call><name pos:line="357" pos:column="32">GetService</name><argument_list pos:line="357" pos:column="42">(<argument><expr><call><name pos:line="357" pos:column="43">typeof</name><argument_list pos:line="357" pos:column="49">(<argument><expr><name pos:line="357" pos:column="50">SSrcMLGlobalService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="357" pos:column="72">as</op:operator> <name pos:line="357" pos:column="75">ISrcMLGlobalService</name></expr>;</expr_stmt>
                <if pos:line="358" pos:column="17">if<condition pos:line="358" pos:column="19">(<expr><name pos:line="358" pos:column="20">null</name> <op:operator pos:line="358" pos:column="25">==</op:operator> <name pos:line="358" pos:column="28">srcMLService</name></expr>)</condition><then pos:line="358" pos:column="41"> <block pos:line="358" pos:column="42">{
                    <expr_stmt><expr><call><name><name pos:line="359" pos:column="21">FileLogger</name><op:operator pos:line="359" pos:column="31">.</op:operator><name pos:line="359" pos:column="32">DefaultLogger</name><op:operator pos:line="359" pos:column="45">.</op:operator><name pos:line="359" pos:column="46">Error</name></name><argument_list pos:line="359" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="359" pos:column="52">"Can not get the SrcML global service."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <comment type="line" pos:line="362" pos:column="17">// Register all types of events from the SrcML Service.</comment>
                <decl_stmt><decl><type><name pos:line="363" pos:column="17">SrcMLArchiveEventsHandlers</name></type> <name pos:line="363" pos:column="44">srcMLArchiveEventsHandlers</name> =<init pos:line="363" pos:column="72"> <expr><call><name><name pos:line="363" pos:column="73">ServiceLocator</name><op:operator pos:line="363" pos:column="87">.</op:operator><name><name pos:line="363" pos:column="88">Resolve</name><argument_list pos:line="363" pos:column="95">&lt;<argument><name pos:line="363" pos:column="96">SrcMLArchiveEventsHandlers</name></argument>&gt;</argument_list></name></name><argument_list pos:line="363" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="364" pos:column="17">srcMLService</name><op:operator pos:line="364" pos:column="29">.</op:operator><name pos:line="364" pos:column="30">SourceFileChanged</name></name> <op:operator pos:line="364" pos:column="48">+=</op:operator> <name><name pos:line="364" pos:column="51">srcMLArchiveEventsHandlers</name><op:operator pos:line="364" pos:column="77">.</op:operator><name pos:line="364" pos:column="78">SourceFileChanged</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="365" pos:column="17">srcMLService</name><op:operator pos:line="365" pos:column="29">.</op:operator><name pos:line="365" pos:column="30">StartupCompleted</name></name> <op:operator pos:line="365" pos:column="47">+=</op:operator> <name><name pos:line="365" pos:column="50">srcMLArchiveEventsHandlers</name><op:operator pos:line="365" pos:column="76">.</op:operator><name pos:line="365" pos:column="77">StartupCompleted</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="366" pos:column="17">srcMLService</name><op:operator pos:line="366" pos:column="29">.</op:operator><name pos:line="366" pos:column="30">MonitoringStopped</name></name> <op:operator pos:line="366" pos:column="48">+=</op:operator> <name><name pos:line="366" pos:column="51">srcMLArchiveEventsHandlers</name><op:operator pos:line="366" pos:column="77">.</op:operator><name pos:line="366" pos:column="78">MonitoringStopped</name></name></expr>;</expr_stmt>

                <comment type="line" pos:line="368" pos:column="17">//This is done here because some extension points require data that isn't set until the solution is opened, e.g. the solution key or the srcml archive</comment>
                <comment type="line" pos:line="369" pos:column="17">//However, registration must happen before file monitoring begins below.</comment>
                <expr_stmt><expr><call><name pos:line="370" pos:column="17">RegisterExtensionPoints</name><argument_list pos:line="370" pos:column="40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="372" pos:column="17">SwumManager</name><op:operator pos:line="372" pos:column="28">.</op:operator><name pos:line="372" pos:column="29">Instance</name><op:operator pos:line="372" pos:column="37">.</op:operator><name pos:line="372" pos:column="38">Initialize</name></name><argument_list pos:line="372" pos:column="48">(<argument><expr><call><name><name pos:line="372" pos:column="49">PathManager</name><op:operator pos:line="372" pos:column="60">.</op:operator><name pos:line="372" pos:column="61">Instance</name><op:operator pos:line="372" pos:column="69">.</op:operator><name pos:line="372" pos:column="70">GetIndexPath</name></name><argument_list pos:line="372" pos:column="82">(<argument><expr><call><name><name pos:line="372" pos:column="83">ServiceLocator</name><op:operator pos:line="372" pos:column="97">.</op:operator><name><name pos:line="372" pos:column="98">Resolve</name><argument_list pos:line="372" pos:column="105">&lt;<argument><name pos:line="372" pos:column="106">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="372" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument><op:operator pos:line="372" pos:column="121">,</op:operator> <argument><expr><op:operator pos:line="372" pos:column="123">!</op:operator><name pos:line="372" pos:column="124">isIndexRecreationRequired</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="373" pos:column="17">//SwumManager.Instance.Archive = _srcMLArchive;</comment>
                
                <comment type="line" pos:line="375" pos:column="17">// SrcML Service starts monitoring the opened solution.</comment>
                <comment type="line" pos:line="376" pos:column="17">// Sando may define the directory of storing srcML archives</comment>
                <decl_stmt><decl><type><name pos:line="377" pos:column="17">string</name></type> <name pos:line="377" pos:column="24">src2SrcmlDir</name> =<init pos:line="377" pos:column="38"> <expr><call><name><name pos:line="377" pos:column="39">Path</name><op:operator pos:line="377" pos:column="43">.</op:operator><name pos:line="377" pos:column="44">Combine</name></name><argument_list pos:line="377" pos:column="51">(<argument><expr><call><name><name pos:line="377" pos:column="52">PathManager</name><op:operator pos:line="377" pos:column="63">.</op:operator><name pos:line="377" pos:column="64">Instance</name><op:operator pos:line="377" pos:column="72">.</op:operator><name pos:line="377" pos:column="73">GetExtensionRoot</name></name><argument_list pos:line="377" pos:column="89">()</argument_list></call></expr></argument><op:operator pos:line="377" pos:column="91">,</op:operator> <argument><expr><lit:literal type="string" pos:line="377" pos:column="93">"LIBS"</lit:literal></expr></argument><op:operator pos:line="377" pos:column="99">,</op:operator> <argument><expr><lit:literal type="string" pos:line="377" pos:column="101">"SrcML"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="378" pos:column="17">string</name></type> <name pos:line="378" pos:column="24">srcMlArchiveFolder</name> =<init pos:line="378" pos:column="44"> <expr><call><name><name pos:line="378" pos:column="45">LuceneDirectoryHelper</name><op:operator pos:line="378" pos:column="66">.</op:operator><name pos:line="378" pos:column="67">GetOrCreateSrcMlArchivesDirectoryForSolution</name></name><argument_list pos:line="378" pos:column="111">(<argument><expr><name><name pos:line="378" pos:column="112">openSolution</name><op:operator pos:line="378" pos:column="124">.</op:operator><name pos:line="378" pos:column="125">FullName</name></name></expr></argument><op:operator pos:line="378" pos:column="133">,</op:operator> <argument><expr><call><name><name pos:line="378" pos:column="135">PathManager</name><op:operator pos:line="378" pos:column="146">.</op:operator><name pos:line="378" pos:column="147">Instance</name><op:operator pos:line="378" pos:column="155">.</op:operator><name pos:line="378" pos:column="156">GetExtensionRoot</name></name><argument_list pos:line="378" pos:column="172">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>                
                <comment type="line" pos:line="379" pos:column="17">// Sando may decide whether to use existing srcML archives</comment>
                <decl_stmt><decl><type><name pos:line="380" pos:column="17">bool</name></type> <name pos:line="380" pos:column="22">useExistingSrcML</name> =<init pos:line="380" pos:column="40"> <expr><lit:literal type="boolean" pos:line="380" pos:column="41">true</lit:literal></expr></init></decl>;</decl_stmt>

                <comment type="line" pos:line="382" pos:column="17">// SrcMLService also has a StartMonitering() API, if Sando wants SrcML.NET to manage</comment>
                <comment type="line" pos:line="383" pos:column="17">// the directory of storing srcML archives and whether to use existing srcML archives.</comment>
                <expr_stmt><expr><call><name><name pos:line="384" pos:column="17">srcMLService</name><op:operator pos:line="384" pos:column="29">.</op:operator><name pos:line="384" pos:column="30">StartMonitoring</name></name><argument_list pos:line="384" pos:column="45">(<argument><expr><name pos:line="384" pos:column="46">srcMlArchiveFolder</name></expr></argument><op:operator pos:line="384" pos:column="64">,</op:operator> <argument><expr><name pos:line="384" pos:column="66">useExistingSrcML</name></expr></argument><op:operator pos:line="384" pos:column="82">,</op:operator> <argument><expr><name pos:line="384" pos:column="84">src2SrcmlDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                
                <comment type="line" pos:line="386" pos:column="17">// End of code changes</comment>
            }</block>
            <catch pos:line="388" pos:column="13">catch (<param><decl><type><name pos:line="388" pos:column="20">Exception</name></type> <name pos:line="388" pos:column="30">e</name></decl></param>)
            <block pos:line="389" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="390" pos:column="17">FileLogger</name><op:operator pos:line="390" pos:column="27">.</op:operator><name pos:line="390" pos:column="28">DefaultLogger</name><op:operator pos:line="390" pos:column="41">.</op:operator><name pos:line="390" pos:column="42">Error</name></name><argument_list pos:line="390" pos:column="47">(<argument><expr><call><name><name pos:line="390" pos:column="48">ExceptionFormatter</name><op:operator pos:line="390" pos:column="66">.</op:operator><name pos:line="390" pos:column="67">CreateMessage</name></name><argument_list pos:line="390" pos:column="80">(<argument><expr><name pos:line="390" pos:column="81">e</name></expr></argument><op:operator pos:line="390" pos:column="82">,</op:operator> <argument><expr><lit:literal type="string" pos:line="390" pos:column="84">"Problem responding to Solution Opened."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>    
        }</block></function>

        <comment type="line" pos:line="394" pos:column="9">// JZ: SrcMLService Integration</comment>
        <comment type="block" pos:line="395" pos:column="9">/* // obsolete
        private void RespondToSolutionMonitorEvent(object sender, ABB.SrcML.FileEventRaisedArgs eventArgs)
        {
            FileLogger.DefaultLogger.Info("Sando: RespondToSolutionMonitorEvent(), File = " + eventArgs.FilePath + ", EventType = " + eventArgs.EventType);
            // Ignore files that can be parsed by SrcML.NET. Those files are processed by _srcMLArchive.SourceFileChanged event handler.
            if(!_srcMLArchive.IsValidFileExtension(eventArgs.FilePath))
            {
                var srcMLArchiveEventsHandlers = ServiceLocator.Resolve&lt;SrcMLArchiveEventsHandlers&gt;();
                srcMLArchiveEventsHandlers.SourceFileChanged(null, eventArgs);
            }
        }
        */</comment>
        <comment type="line" pos:line="407" pos:column="9">// End of code changes</comment>
        <cpp:endregion pos:line="408" pos:column="9">#<cpp:directive pos:line="408" pos:column="10">endregion</cpp:directive></cpp:endregion>




        <function><type><specifier pos:line="413" pos:column="9">private</specifier> <name pos:line="413" pos:column="17">void</name></type> <name pos:line="413" pos:column="22">SetupDependencyInjectionObjects</name><parameter_list pos:line="413" pos:column="53">()</parameter_list>
        <block pos:line="414" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="415" pos:column="13">ServiceLocator</name><op:operator pos:line="415" pos:column="27">.</op:operator><name pos:line="415" pos:column="28">RegisterInstance</name></name><argument_list pos:line="415" pos:column="44">(<argument><expr><call><name pos:line="415" pos:column="45">GetService</name><argument_list pos:line="415" pos:column="55">(<argument><expr><call><name pos:line="415" pos:column="56">typeof</name> <argument_list pos:line="415" pos:column="63">(<argument><expr><name pos:line="415" pos:column="64">DTE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="415" pos:column="70">as</op:operator> <name pos:line="415" pos:column="73">DTE2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="416" pos:column="13">ServiceLocator</name><op:operator pos:line="416" pos:column="27">.</op:operator><name pos:line="416" pos:column="28">RegisterInstance</name></name><argument_list pos:line="416" pos:column="44">(<argument><expr><name pos:line="416" pos:column="45">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="417" pos:column="13">ServiceLocator</name><op:operator pos:line="417" pos:column="27">.</op:operator><name pos:line="417" pos:column="28">RegisterInstance</name></name><argument_list pos:line="417" pos:column="44">(<argument><expr><op:operator pos:line="417" pos:column="45">new</op:operator> <call><name pos:line="417" pos:column="49">ViewManager</name><argument_list pos:line="417" pos:column="60">(<argument><expr><name pos:line="417" pos:column="61">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="418" pos:column="13">ServiceLocator</name><op:operator pos:line="418" pos:column="27">.</op:operator><name><name pos:line="418" pos:column="28">RegisterInstance</name><argument_list pos:line="418" pos:column="44">&lt;<argument><name pos:line="418" pos:column="45">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="418" pos:column="67">(<argument><expr><op:operator pos:line="418" pos:column="68">new</op:operator> <call><name pos:line="418" pos:column="72">SandoOptionsProvider</name><argument_list pos:line="418" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="419" pos:column="13">ServiceLocator</name><op:operator pos:line="419" pos:column="27">.</op:operator><name pos:line="419" pos:column="28">RegisterInstance</name></name><argument_list pos:line="419" pos:column="44">(<argument><expr><op:operator pos:line="419" pos:column="45">new</op:operator> <call><name pos:line="419" pos:column="49">SrcMLArchiveEventsHandlers</name><argument_list pos:line="419" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="420" pos:column="13">ServiceLocator</name><op:operator pos:line="420" pos:column="27">.</op:operator><name pos:line="420" pos:column="28">RegisterInstance</name></name><argument_list pos:line="420" pos:column="44">(<argument><expr><op:operator pos:line="420" pos:column="45">new</op:operator> <call><name pos:line="420" pos:column="49">InitialIndexingWatcher</name><argument_list pos:line="420" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="421" pos:column="13">ServiceLocator</name><op:operator pos:line="421" pos:column="27">.</op:operator><name><name pos:line="421" pos:column="28">RegisterType</name><argument_list pos:line="421" pos:column="40">&lt;<argument><name pos:line="421" pos:column="41">IIndexerSearcher</name></argument>, <argument><name pos:line="421" pos:column="59">IndexerSearcher</name></argument>&gt;</argument_list></name></name><argument_list pos:line="421" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
