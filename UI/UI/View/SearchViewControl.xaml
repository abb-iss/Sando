<UserControl x:Class="Sando.UI.View.SearchViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.10.0"
             xmlns:SearchEngine="clr-namespace:Sando.SearchEngine;assembly=SearchEngine"
             xmlns:converters="clr-namespace:Sando.UI.View.Search.Converters"
             xmlns:local="clr-namespace:Sando.UI" xmlns:view="clr-namespace:Sando.UI.View" mc:Ignorable="d" 
             xmlns:ExContract="clr-namespace:Sando.ExtensionContracts.ProgramElementContracts;assembly=SandoExtensionContracts"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Drawing="clr-namespace:System.Drawing;assembly=System.Drawing" d:DesignWidth="300" d:DesignHeight="400"
             xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             Name="MyToolWindow"
             Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}" KeyboardNavigation.IsTabStop="False" xmlns:my="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             xmlns:search="clr-namespace:Sando.UI.View.Search">

    <UserControl.Resources>
        <converters:BoolToOppositeBoolConverter x:Key="oppositeConverter" />
      
        <Style x:Key="ToggleButtonStyleBorderless" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" 
                                    Value="True">
                                <Setter Property="Foreground"
                                        Value="CadetBlue"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers >
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        <converters:ElementToIcon x:Key="ElementToIcon"/>
        <converters:ScoreToEndpoint x:Key="ScoreToEndpoint"/>
        <converters:FileTypeToIcon x:Key="FileTypeToIcon"/>
        <converters:NullableBoolToBool x:Key="NullableBoolToBool"/>
        <converters:NullOrEmptyIsHidden x:Key="NullOrEmptyIsHidden"/>
        <converters:NullOrEmptyToVisibility x:Key="NullOrEmptyToVisibility"/>

        <ObjectDataProvider x:Key="ProgramElementType" MethodName="GetValues" ObjectType="{x:Type ExContract:ProgramElementType}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="ExContract:ProgramElementType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <local:MyFontConverter x:Key="FontConverter" />
        <local:MyStrokeConverter x:Key="StrokeConverter" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <ControlTemplate x:Key="toggleButtonTemplate" TargetType="ToggleButton">
            <Grid
            Width="15"
            Height="13"
            Background="Transparent">
                <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Center"                
              Margin="1,1,1,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 4 4 L 0 4 L 0 6 L 4 6 L 4 10 L 6 10 L 6 6 L 10 6 L 10 4 L 6 4 L 6 0 Z">
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" 
                 Value="True">
                    <Setter Property="Fill"
                  TargetName="ExpandPath"
                  Value="CadetBlue"/>
                </Trigger>
                <Trigger Property="IsChecked" 
                 Value="True">
                    <Setter Property="Data"
                  TargetName="ExpandPath"
                  Value="M 0 3 L 8 3 L 8 5 L 0 5 Z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="toggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template" Value="{StaticResource toggleButtonTemplate}" />
        </Style>
    </UserControl.Resources>


    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition Height="Auto" MinHeight="0"/>
            <RowDefinition Height="Auto" MinHeight="15"/>
            <RowDefinition Height="Auto" MinHeight="20"/>
            <RowDefinition Height="*" MinHeight="100"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="100"/>
            <ColumnDefinition Width="65" />
        </Grid.ColumnDefinitions>

        <!-- Top Part: Query -->
        <controls:AutoCompleteBox Loaded="searchBox_Loaded"  Grid.Row="0" Name="searchBox" Margin="5,5,5,0" FilterMode="None" Height="25" BorderBrush="DimGray" 
                                  KeyUp="OnKeyUpHandler" Populating="searchBox_Populating" 
                                  MinimumPrefixLength="0" MaxDropDownHeight="290">
            <controls:AutoCompleteBox.ToolTip>
                <StackPanel>                                        
                    <TextBlock>Add ALL relevant words (i.e., Google-style query)</TextBlock>
                    <TextBlock>Keyboard shortcut: Alt+Shift+S</TextBlock>
                </StackPanel>
            </controls:AutoCompleteBox.ToolTip>
        </controls:AutoCompleteBox>

        <Button Grid.Row="0" Grid.Column="1" Margin="0,5,5,0" Content="{Binding Path=SearchLabel}"  VerticalAlignment="Top" HorizontalAlignment="Right" Width="60" Height="25" Name="searchButton" Click="SearchButtonClick" 
                        />

        <ProgressBar Margin="5,5,5,0" Name="ProgBar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                 VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="15" IsIndeterminate="True" Visibility="Collapsed"/>

        <!-- info string -->
        <TextBox Margin="4,0,0,0" Foreground="#1F1F1F" BorderThickness="0" FontSize="10" FontStyle="Italic" Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" IsReadOnly="True"   Grid.Row="2" Width="Auto" HorizontalAlignment="Stretch"  Grid.Column="0" Height="Auto" Grid.ColumnSpan="2" Text="{Binding Path=SearchStatus}"
                                  KeyboardNavigation.IsTabStop="False" TextWrapping="Wrap" ></TextBox>

        <!-- details -->
        <Expander Grid.Row="3" Grid.Column="0" Name="LayoutRoot"
            >
            <Expander.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Advanced Options" />


                    </StackPanel>
                </DataTemplate>
            </Expander.HeaderTemplate>

            <StackPanel>
                <!--Access Level-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="225*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Margin="5,0,5,5" Text="Access level:" Grid.Row="0" Grid.ColumnSpan="2"/>
                    <ComboBox Name="searchAccessLevel" Margin="5,0,5,5" SelectedIndex="0" Grid.Row="1"
                              KeyboardNavigation.IsTabStop="{Binding ElementName=searchByAccessLevel,Path=IsChecked}" ItemsSource="{Binding AccessLevels}" Grid.ColumnSpan="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Width="20" IsChecked="{Binding Path=Checked}"
                                               />
                                    <TextBlock 
                                       Width="100" Text="{Binding Path=Access}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>

                <!--Program Element Type-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Margin="5,0,5,5" Text="Element type:" Grid.Row="0"/>
                    <ComboBox Name="searchElementType" Margin="5,0,5,5" SelectedIndex="0" Grid.Row="1"
                              KeyboardNavigation.IsTabStop="{Binding ElementName=searchByProgramElementType,Path=IsChecked}"  ItemsSource="{Binding ProgramElements}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Width="20" IsChecked="{Binding Path=Checked}"
                                               />
                                    <TextBlock 
                                       Width="100" Text="{Binding Path=ProgramElement}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="212*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!--<CheckBox Name="isExactMode" Content="Exact mode" IsChecked="{Binding Path=SearchCriteria.ExactMode, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" Margin="4,4,4,4" KeyboardNavigation.IsTabStop="True" KeyboardNavigation.TabIndex="51" />
                    <CheckBox Name="isMatchCase" Content="Match Case" IsChecked="{Binding Path=SearchCriteria.MatchCase, Mode=TwoWay}" Grid.Column="2" Margin="4,4,4,4" KeyboardNavigation.IsTabStop="True" KeyboardNavigation.TabIndex="53" />
                    -->
                </Grid>

            </StackPanel>
        </Expander>
        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" Margin="0,14,0,0" Grid.RowSpan="2">
            
            <Button Name="HelpButton"  ToolTip="Help" Margin="32,0,0,0" FontFamily="ExtraBold" VerticalAlignment="Top" Height="25" IsEnabled="{Binding ElementName=SelectionPopup, Mode=TwoWay, Path=IsOpen, Converter={StaticResource oppositeConverter}}" 
        		KeyboardNavigation.IsTabStop="False" Style="{DynamicResource ToggleButtonStyleBorderless}" Click="Toggled_Popup" FontWeight="ExtraBold" >[?]
            </Button>
            
            <ToggleButton  ToolTip="Expand/Collapse"   Margin="0,0,0,0" VerticalAlignment="Top" Height="25"   x:Name="expandButton"
        		KeyboardNavigation.IsTabStop="False"  Style="{StaticResource toggleButtonStyle}" Checked="Toggled" Unchecked="Toggled"/>

            <Popup Name="SelectionPopup" Placement="Mouse" StaysOpen="False" IsOpen="False" Width="430.189">
                <RichTextBox Margin="0,0,0,0" Name="richTB" HorizontalAlignment="Stretch" IsDocumentEnabled="False" IsEnabled="False">                    
                        <FlowDocument >
                            <Paragraph FontSize="5" Margin="0,0,0,0"></Paragraph>
                            <Paragraph Margin="0,0,0,0" FontFamily="Arial">
                                <Bold>Keyboard Usage</Bold>
                            </Paragraph>
                            <Table>
                                <Table.Columns>
                                    <TableColumn Width="0.37*" />
                                    <TableColumn Width="1.3*" />
                                </Table.Columns>
                                <TableRowGroup Paragraph.TextAlignment="left" >
                                    <TableRow>
                                        <TableCell >
                                            <Paragraph FontFamily="Arial">
                                                Alt + Shift + S
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell>
                                            <Paragraph>Opens the Sando view and focuses on the query box.</Paragraph>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell >
                                            <Paragraph FontFamily="Arial">
                                                ↑ + ↓
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell>
                                            <Paragraph>Toggle through results following a query.</Paragraph>
                                        </TableCell>
                                    </TableRow>

                                    <TableRow>
                                        <TableCell >
                                            <Paragraph FontFamily="Arial">
                                                Enter
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell>
                                            <Paragraph>Opens the currently selected result in editor.</Paragraph>
                                        </TableCell>
                                    </TableRow>
                                </TableRowGroup>
                            </Table>
                            <Paragraph xml:space="preserve"><Bold>Creating an Effective Query</Bold></Paragraph>
                            <Table>
                                <Table.Columns>
                                    <TableColumn Width="1.85*" />
                                    <TableColumn Width="1.5*" />
                                </Table.Columns>
                                <TableRowGroup Paragraph.TextAlignment="left">
                                    <TableRow>
                                        <TableCell>
                                            <Paragraph FontFamily="Arial">Add
                                                <Italic>
                                                    <Bold>all</Bold>
                                                </Italic> relevant terms:
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell >
                                            <Paragraph FontFamily="Courier New">convert image
                                            </Paragraph>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Paragraph FontFamily="Arial">Put exact phrases in quotes:
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell >
                                            <Paragraph FontFamily="Courier New">"void StartMonitor("
                                            </Paragraph>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Paragraph FontFamily="Arial">Put '-' before unwanted words:
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell >
                                            <Paragraph FontFamily="Courier New">parse method -test
                                            </Paragraph>
                                        </TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell>
                                            <Paragraph FontFamily="Arial">Limit by file extension:
                                            </Paragraph>
                                        </TableCell>
                                        <TableCell >
                                            <Paragraph FontFamily="Courier New">image filetype:cs
                                            </Paragraph>
                                        </TableCell>
                                    </TableRow>
                                </TableRowGroup>
                            </Table>
                        </FlowDocument>
                </RichTextBox>
            </Popup>            
        </StackPanel>

        <!--Bottom Part: Result-->
        <DockPanel Grid.Row="4" Grid.ColumnSpan="2" 
                       HorizontalAlignment="Stretch"  Height="Auto"
                       VerticalAlignment="Stretch" >
            <ListView  Name="searchResultListbox"  ItemsSource="{Binding Path=SearchResults}" ScrollViewer.VerticalScrollBarVisibility="Auto"
                       Margin="5,0,5,5" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Height="Auto"
                        VerticalAlignment="Stretch" MinWidth="270" MinHeight="100" HorizontalContentAlignment="Stretch"
                       SelectionChanged="searchResultListbox_SelectionChanged"                       
                       >
                <ListView.ContextMenu>
                    <ContextMenu Name="SearchResultMenu" StaysOpen="true">
                        <ContextMenu.BitmapEffect>
                            <BitmapEffectGroup/>
                        </ContextMenu.BitmapEffect>                        
                        <MenuItem Header="Remove Entire File from Index" Name="Remove" Click="Remove_Click_1" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <!--<Style.Triggers>-->
                        <!--</Style.Triggers>-->
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="0,0,0,0"/>
                        <Setter Property="Padding" Value="0,0,0,0"/>
                        <Setter Property="Height" Value="24"/>
                        <EventSetter Event="MouseDoubleClick" Handler="UIElement_OnMouseDown"/>
                        <EventSetter Event="KeyDown" Handler="UIElement_OnKeyDown"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="Auto" Header="Search Results" >
                            <GridViewColumn.HeaderContainerStyle>
                                <Style  TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                </Style>
                            </GridViewColumn.HeaderContainerStyle>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>

                                    <Grid Margin="0,0,0,0" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="22"/>                                           
                                            <RowDefinition Height="1"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="0,0,0,0" Grid.Row="0" Grid.Column="0" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1"/>
                                                <RowDefinition Height="20"/>
                                                <RowDefinition Height="1"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="3" Loaded="RespondToLoad">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0"  EndPoint="1,0">
                                                        <GradientStop Color="#E9FFDE" Offset="0" />
                                                        <GradientStop Color="#E9FFDE" Offset="{Binding Mode=OneWay, Path=Score, Converter={StaticResource ScoreToEndpoint}}" />
                                                        <GradientStop Color="White" Offset="{Binding Mode=OneWay, Path=Score, Converter={StaticResource ScoreToEndpoint}}" />
                                                        <GradientStop Color="White" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Canvas Width="Auto" Height="0" Margin="-7,-2,0,0" Grid.Row="0" Grid.Column="0">
                                                <Line X1="0" X2="5000" Y1="0" Y2="0" Stroke="LightSlateGray" StrokeThickness="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected, Converter={StaticResource StrokeConverter}, Mode=OneWay}"></Line>
                                            </Canvas>
                                            <Popup Name="Details" Placement="Left" StaysOpen="False" Width="Auto" AllowsTransparency="true"                                               
                                                PlacementTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}"
                                                IsOpen="{Binding (ListViewItem.IsSelected), RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}">

                                                    <Grid Background="Gray">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="24" />
                                                        <RowDefinition Height="24" />
                                                        <RowDefinition Height="50" />
                                                        <RowDefinition Height="100" />
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Row="0" Margin="3" Text="{Binding Mode=OneWay, Path=Name}" />
                                                    <TextBlock Grid.Row="1" Margin="3" Text="{Binding Mode=OneWay, Path=ParentOrFile}"/>
                                                    <TextBlock Grid.Row="2" Margin="3" Text="{Binding Mode=OneWay, Path=Highlight}"/>
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="3">
                                                        <TextBlock Margin="3" Text="{Binding Mode=OneWay, Path=Raw}"/>
                                                    </ScrollViewer>
                                                </Grid>
                                            </Popup>
                                            <Image Source="{Binding Mode=OneWay, Path=ProgramElement, Converter={StaticResource ElementToIcon}}" Width="16" Height="16" Margin="0,0,2,2" Grid.Row="1" Grid.Column="0" >
                                            </Image>
                                            <TextBlock Name="Name" MaxWidth="210" Text="{Binding Mode=OneWay, Path=Name}" Margin="1,0,0,0" TextTrimming="CharacterEllipsis" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" FontWeight="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected, Converter={StaticResource FontConverter}, Mode=OneWay}" />
                                            <TextBlock Grid.Row="1" Grid.Column="2" FontStyle="Italic" FontWeight="Light" Margin="5,0,5,0">in</TextBlock>
                                            <TextBlock Name="Parent" Text="{Binding Mode=OneWay, Path=ParentOrFile}" TextTrimming="WordEllipsis" Grid.Row="1" Grid.Column="3" FontWeight="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected, Converter={StaticResource FontConverter}, Mode=OneWay}" />
                                            <Canvas Width="Auto" Height="0" Margin="-7,0,0,0" Grid.Row="2" Grid.Column="0">
                                                <Line X1="0" X2="5000" Y1="0" Y2="0" Stroke="LightSlateGray" StrokeThickness="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected, Converter={StaticResource StrokeConverter}, Mode=OneWay}"></Line>
                                            </Canvas>
                                        </Grid>
                                        <TextBlock Name="Snippet" Margin="5,2,0,0" FontFamily="Consolas" MinWidth="200" FontSize="10" TextAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="60" 
                                               Text="{Binding Mode=OneWay, Path=Snippet}" Grid.Row="1" Grid.Column="0" TextTrimming="CharacterEllipsis"/>
                                        <Canvas Width="Auto" Height="0" Margin="-7,0,0,0" Grid.Row="2" Grid.Column="0">
                                            <Line X1="1" X2="5000" Y1="0" Y2="0" Stroke="LightSlateGray" StrokeThickness="2"></Line>
                                        </Canvas>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>
    </Grid>
</UserControl>
